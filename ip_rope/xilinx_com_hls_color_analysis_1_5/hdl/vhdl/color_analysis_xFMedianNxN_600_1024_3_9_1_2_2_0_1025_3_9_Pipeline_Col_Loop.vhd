-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
-- Version: 2022.2
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity color_analysis_xFMedianNxN_600_1024_3_9_1_2_2_0_1025_3_9_Pipeline_Col_Loop is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    img_0_data163_dout : IN STD_LOGIC_VECTOR (23 downto 0);
    img_0_data163_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
    img_0_data163_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
    img_0_data163_empty_n : IN STD_LOGIC;
    img_0_data163_read : OUT STD_LOGIC;
    img_1_data164_din : OUT STD_LOGIC_VECTOR (23 downto 0);
    img_1_data164_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
    img_1_data164_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
    img_1_data164_full_n : IN STD_LOGIC;
    img_1_data164_write : OUT STD_LOGIC;
    add_ln450 : IN STD_LOGIC_VECTOR (11 downto 0);
    buf_V_6_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    buf_V_6_ce0 : OUT STD_LOGIC;
    buf_V_6_q0 : IN STD_LOGIC_VECTOR (23 downto 0);
    buf_V_6_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    buf_V_6_ce1 : OUT STD_LOGIC;
    buf_V_6_we1 : OUT STD_LOGIC;
    buf_V_6_d1 : OUT STD_LOGIC_VECTOR (23 downto 0);
    buf_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    buf_V_ce0 : OUT STD_LOGIC;
    buf_V_q0 : IN STD_LOGIC_VECTOR (23 downto 0);
    buf_V_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    buf_V_ce1 : OUT STD_LOGIC;
    buf_V_we1 : OUT STD_LOGIC;
    buf_V_d1 : OUT STD_LOGIC_VECTOR (23 downto 0);
    buf_V_5_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    buf_V_5_ce0 : OUT STD_LOGIC;
    buf_V_5_q0 : IN STD_LOGIC_VECTOR (23 downto 0);
    buf_V_5_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    buf_V_5_ce1 : OUT STD_LOGIC;
    buf_V_5_we1 : OUT STD_LOGIC;
    buf_V_5_d1 : OUT STD_LOGIC_VECTOR (23 downto 0);
    row_ind_V_19 : IN STD_LOGIC_VECTOR (12 downto 0);
    row_ind_V_20 : IN STD_LOGIC_VECTOR (12 downto 0);
    row_ind_V_21 : IN STD_LOGIC_VECTOR (12 downto 0);
    sub_i213_i_cast : IN STD_LOGIC_VECTOR (1 downto 0);
    row_ind_V_19_cast : IN STD_LOGIC_VECTOR (1 downto 0);
    spec_select47 : IN STD_LOGIC_VECTOR (0 downto 0);
    row_ind_V_20_cast : IN STD_LOGIC_VECTOR (1 downto 0);
    spec_select51 : IN STD_LOGIC_VECTOR (0 downto 0);
    row_ind_V_21_cast : IN STD_LOGIC_VECTOR (1 downto 0);
    spec_select55 : IN STD_LOGIC_VECTOR (0 downto 0);
    zext_ln419_1 : IN STD_LOGIC_VECTOR (10 downto 0);
    cmp_i_i321_i : IN STD_LOGIC_VECTOR (0 downto 0) );
end;


architecture behav of color_analysis_xFMedianNxN_600_1024_3_9_1_2_2_0_1025_3_9_Pipeline_Col_Loop is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    constant ap_const_lv24_0 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000000000000";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv12_1 : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter9 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal icmp_ln181_reg_683 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln188_reg_694 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op59_read_state2 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8 : BOOLEAN;
    signal icmp_ln181_reg_683_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1031_reg_713 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1031_reg_713_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op117_write_state10 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter9 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal icmp_ln181_fu_381_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage0 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal img_0_data163_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal img_1_data164_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal row_ind_V_21_cast_read_reg_631 : STD_LOGIC_VECTOR (1 downto 0);
    signal col_V_reg_676 : STD_LOGIC_VECTOR (11 downto 0);
    signal col_V_reg_676_pp0_iter1_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln181_reg_683_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln181_reg_683_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln181_reg_683_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln181_reg_683_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln181_reg_683_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln181_reg_683_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln181_reg_683_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1027_fu_393_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1027_reg_687 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1027_reg_687_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1027_reg_687_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln188_fu_399_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1031_fu_422_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1031_reg_713_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1031_reg_713_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1031_reg_713_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1031_reg_713_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1031_reg_713_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal src_buf_V_14_reg_717 : STD_LOGIC_VECTOR (23 downto 0);
    signal src_buf_V_13_reg_723 : STD_LOGIC_VECTOR (23 downto 0);
    signal src_buf_V_12_reg_729 : STD_LOGIC_VECTOR (23 downto 0);
    signal src_buf_V_15_fu_514_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal src_buf_V_15_reg_735 : STD_LOGIC_VECTOR (23 downto 0);
    signal src_buf_V_16_fu_521_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal src_buf_V_16_reg_741 : STD_LOGIC_VECTOR (23 downto 0);
    signal src_buf_V_17_fu_528_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal src_buf_V_17_reg_747 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_xFMedianProc_3_1_9_3_9_s_fu_326_ap_return : STD_LOGIC_VECTOR (23 downto 0);
    signal OutputValues_V_reg_768 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_condition_exit_pp0_iter3_stage0 : STD_LOGIC;
    signal grp_xFMedianProc_3_1_9_3_9_s_fu_326_ap_ce : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call22 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call22 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call22 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call22 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call22 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call22 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call22 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call22 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call22 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter9_ignore_call22 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp105 : BOOLEAN;
    signal ap_phi_reg_pp0_iter0_src_buf_V_6_4_reg_299 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_phi_reg_pp0_iter1_src_buf_V_6_4_reg_299 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_phi_reg_pp0_iter2_src_buf_V_6_4_reg_299 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_phi_reg_pp0_iter3_src_buf_V_6_4_reg_299 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_phi_reg_pp0_iter4_src_buf_V_6_4_reg_299 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_phi_reg_pp0_iter0_src_buf_V_3_4_reg_308 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_phi_reg_pp0_iter1_src_buf_V_3_4_reg_308 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_phi_reg_pp0_iter2_src_buf_V_3_4_reg_308 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_phi_reg_pp0_iter3_src_buf_V_3_4_reg_308 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_phi_reg_pp0_iter4_src_buf_V_3_4_reg_308 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_phi_reg_pp0_iter0_src_buf_V_414_reg_317 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_phi_reg_pp0_iter1_src_buf_V_414_reg_317 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_phi_reg_pp0_iter2_src_buf_V_414_reg_317 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_phi_reg_pp0_iter3_src_buf_V_414_reg_317 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_phi_reg_pp0_iter4_src_buf_V_414_reg_317 : STD_LOGIC_VECTOR (23 downto 0);
    signal zext_ln541_fu_410_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal conv_i130_i_fu_416_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal col_V_6_fu_102 : STD_LOGIC_VECTOR (11 downto 0);
    signal col_V_8_fu_387_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal ap_sig_allocacmp_col_V : STD_LOGIC_VECTOR (11 downto 0);
    signal src_buf_V_9_fu_106 : STD_LOGIC_VECTOR (23 downto 0);
    signal src_buf_V_10_fu_110 : STD_LOGIC_VECTOR (23 downto 0);
    signal src_buf_V_11_fu_114 : STD_LOGIC_VECTOR (23 downto 0);
    signal src_buf_V_5_fu_118 : STD_LOGIC_VECTOR (23 downto 0);
    signal src_buf_V_4_fu_122 : STD_LOGIC_VECTOR (23 downto 0);
    signal src_buf_V_3_fu_126 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal zext_ln419_1_cast_fu_339_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_s_fu_436_p5 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_18_fu_448_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_18_fu_448_p5 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_19_fu_460_p5 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_20_fu_478_p5 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_21_fu_496_p5 : STD_LOGIC_VECTOR (23 downto 0);
    signal src_buf_V_2_fu_507_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal src_buf_V_1_fu_489_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal src_buf_V_fu_471_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter1_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter2_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter3_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter4_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter5_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter6_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter7_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter8_reg : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component color_analysis_xFMedianProc_3_1_9_3_9_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        p_read1 : IN STD_LOGIC_VECTOR (23 downto 0);
        p_read2 : IN STD_LOGIC_VECTOR (23 downto 0);
        p_read3 : IN STD_LOGIC_VECTOR (23 downto 0);
        p_read4 : IN STD_LOGIC_VECTOR (23 downto 0);
        p_read5 : IN STD_LOGIC_VECTOR (23 downto 0);
        p_read6 : IN STD_LOGIC_VECTOR (23 downto 0);
        p_read7 : IN STD_LOGIC_VECTOR (23 downto 0);
        p_read8 : IN STD_LOGIC_VECTOR (23 downto 0);
        p_read9 : IN STD_LOGIC_VECTOR (23 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (23 downto 0);
        ap_ce : IN STD_LOGIC );
    end component;


    component color_analysis_mux_32_13_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (12 downto 0);
        din1 : IN STD_LOGIC_VECTOR (12 downto 0);
        din2 : IN STD_LOGIC_VECTOR (12 downto 0);
        din3 : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (12 downto 0) );
    end component;


    component color_analysis_mux_32_24_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (23 downto 0);
        din1 : IN STD_LOGIC_VECTOR (23 downto 0);
        din2 : IN STD_LOGIC_VECTOR (23 downto 0);
        din3 : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (23 downto 0) );
    end component;


    component color_analysis_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    grp_xFMedianProc_3_1_9_3_9_s_fu_326 : component color_analysis_xFMedianProc_3_1_9_3_9_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        p_read1 => src_buf_V_9_fu_106,
        p_read2 => src_buf_V_14_reg_717,
        p_read3 => src_buf_V_17_reg_747,
        p_read4 => src_buf_V_10_fu_110,
        p_read5 => src_buf_V_13_reg_723,
        p_read6 => src_buf_V_16_reg_741,
        p_read7 => src_buf_V_11_fu_114,
        p_read8 => src_buf_V_12_reg_729,
        p_read9 => src_buf_V_15_reg_735,
        ap_return => grp_xFMedianProc_3_1_9_3_9_s_fu_326_ap_return,
        ap_ce => grp_xFMedianProc_3_1_9_3_9_s_fu_326_ap_ce);

    mux_32_13_1_1_U90 : component color_analysis_mux_32_13_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 13,
        din1_WIDTH => 13,
        din2_WIDTH => 13,
        din3_WIDTH => 2,
        dout_WIDTH => 13)
    port map (
        din0 => row_ind_V_19,
        din1 => row_ind_V_20,
        din2 => row_ind_V_21,
        din3 => sub_i213_i_cast,
        dout => tmp_s_fu_436_p5);

    mux_32_24_1_1_U91 : component color_analysis_mux_32_24_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 24,
        din1_WIDTH => 24,
        din2_WIDTH => 24,
        din3_WIDTH => 2,
        dout_WIDTH => 24)
    port map (
        din0 => buf_V_q0,
        din1 => buf_V_5_q0,
        din2 => buf_V_6_q0,
        din3 => tmp_18_fu_448_p4,
        dout => tmp_18_fu_448_p5);

    mux_32_24_1_1_U92 : component color_analysis_mux_32_24_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 24,
        din1_WIDTH => 24,
        din2_WIDTH => 24,
        din3_WIDTH => 2,
        dout_WIDTH => 24)
    port map (
        din0 => buf_V_q0,
        din1 => buf_V_5_q0,
        din2 => buf_V_6_q0,
        din3 => row_ind_V_19_cast,
        dout => tmp_19_fu_460_p5);

    mux_32_24_1_1_U93 : component color_analysis_mux_32_24_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 24,
        din1_WIDTH => 24,
        din2_WIDTH => 24,
        din3_WIDTH => 2,
        dout_WIDTH => 24)
    port map (
        din0 => buf_V_q0,
        din1 => buf_V_5_q0,
        din2 => buf_V_6_q0,
        din3 => row_ind_V_20_cast,
        dout => tmp_20_fu_478_p5);

    mux_32_24_1_1_U94 : component color_analysis_mux_32_24_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 24,
        din1_WIDTH => 24,
        din2_WIDTH => 24,
        din3_WIDTH => 2,
        dout_WIDTH => 24)
    port map (
        din0 => buf_V_q0,
        din1 => buf_V_5_q0,
        din2 => buf_V_6_q0,
        din3 => row_ind_V_21_cast,
        dout => tmp_21_fu_496_p5);

    flow_control_loop_pipe_sequential_init_U : component color_analysis_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage0,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_loop_exit_ready_pp0_iter8_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter3_stage0)) then 
                    ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
                end if; 
            end if;
        end if;
    end process;


    ap_phi_reg_pp0_iter4_src_buf_V_3_4_reg_308_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                if (((icmp_ln1031_reg_713 = ap_const_lv1_1) and (icmp_ln181_reg_683_pp0_iter2_reg = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter4_src_buf_V_3_4_reg_308 <= src_buf_V_16_fu_521_p3;
                elsif (((icmp_ln1031_reg_713 = ap_const_lv1_0) and (icmp_ln181_reg_683_pp0_iter2_reg = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter4_src_buf_V_3_4_reg_308 <= src_buf_V_4_fu_122;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter4_src_buf_V_3_4_reg_308 <= ap_phi_reg_pp0_iter3_src_buf_V_3_4_reg_308;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter4_src_buf_V_414_reg_317_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                if (((icmp_ln1031_reg_713 = ap_const_lv1_1) and (icmp_ln181_reg_683_pp0_iter2_reg = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter4_src_buf_V_414_reg_317 <= src_buf_V_17_fu_528_p3;
                elsif (((icmp_ln1031_reg_713 = ap_const_lv1_0) and (icmp_ln181_reg_683_pp0_iter2_reg = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter4_src_buf_V_414_reg_317 <= src_buf_V_5_fu_118;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter4_src_buf_V_414_reg_317 <= ap_phi_reg_pp0_iter3_src_buf_V_414_reg_317;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter4_src_buf_V_6_4_reg_299_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                if (((icmp_ln1031_reg_713 = ap_const_lv1_1) and (icmp_ln181_reg_683_pp0_iter2_reg = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter4_src_buf_V_6_4_reg_299 <= src_buf_V_15_fu_514_p3;
                elsif (((icmp_ln1031_reg_713 = ap_const_lv1_0) and (icmp_ln181_reg_683_pp0_iter2_reg = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter4_src_buf_V_6_4_reg_299 <= src_buf_V_3_fu_126;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter4_src_buf_V_6_4_reg_299 <= ap_phi_reg_pp0_iter3_src_buf_V_6_4_reg_299;
                end if;
            end if; 
        end if;
    end process;

    col_V_6_fu_102_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln181_fu_381_p2 = ap_const_lv1_0))) then 
                    col_V_6_fu_102 <= col_V_8_fu_387_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    col_V_6_fu_102 <= ap_const_lv12_0;
                end if;
            end if; 
        end if;
    end process;

    src_buf_V_10_fu_110_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    src_buf_V_10_fu_110 <= ap_const_lv24_0;
                elsif ((ap_enable_reg_pp0_iter4 = ap_const_logic_1)) then 
                    src_buf_V_10_fu_110 <= ap_phi_reg_pp0_iter4_src_buf_V_3_4_reg_308;
                end if;
            end if; 
        end if;
    end process;

    src_buf_V_11_fu_114_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    src_buf_V_11_fu_114 <= ap_const_lv24_0;
                elsif ((ap_enable_reg_pp0_iter4 = ap_const_logic_1)) then 
                    src_buf_V_11_fu_114 <= ap_phi_reg_pp0_iter4_src_buf_V_6_4_reg_299;
                end if;
            end if; 
        end if;
    end process;

    src_buf_V_3_fu_126_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    src_buf_V_3_fu_126 <= ap_const_lv24_0;
                elsif (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln181_reg_683_pp0_iter2_reg = ap_const_lv1_0))) then 
                    src_buf_V_3_fu_126 <= src_buf_V_15_fu_514_p3;
                end if;
            end if; 
        end if;
    end process;

    src_buf_V_4_fu_122_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    src_buf_V_4_fu_122 <= ap_const_lv24_0;
                elsif (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln181_reg_683_pp0_iter2_reg = ap_const_lv1_0))) then 
                    src_buf_V_4_fu_122 <= src_buf_V_16_fu_521_p3;
                end if;
            end if; 
        end if;
    end process;

    src_buf_V_5_fu_118_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    src_buf_V_5_fu_118 <= ap_const_lv24_0;
                elsif (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln181_reg_683_pp0_iter2_reg = ap_const_lv1_0))) then 
                    src_buf_V_5_fu_118 <= src_buf_V_17_fu_528_p3;
                end if;
            end if; 
        end if;
    end process;

    src_buf_V_9_fu_106_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    src_buf_V_9_fu_106 <= ap_const_lv24_0;
                elsif ((ap_enable_reg_pp0_iter4 = ap_const_logic_1)) then 
                    src_buf_V_9_fu_106 <= ap_phi_reg_pp0_iter4_src_buf_V_414_reg_317;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln181_reg_683_pp0_iter7_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                OutputValues_V_reg_768 <= grp_xFMedianProc_3_1_9_3_9_s_fu_326_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln181_fu_381_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                and_ln188_reg_694 <= and_ln188_fu_399_p2;
                icmp_ln1027_reg_687 <= icmp_ln1027_fu_393_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
                ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
                col_V_reg_676 <= ap_sig_allocacmp_col_V;
                col_V_reg_676_pp0_iter1_reg <= col_V_reg_676;
                icmp_ln1027_reg_687_pp0_iter1_reg <= icmp_ln1027_reg_687;
                icmp_ln181_reg_683 <= icmp_ln181_fu_381_p2;
                icmp_ln181_reg_683_pp0_iter1_reg <= icmp_ln181_reg_683;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
                ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
                ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
                ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
                ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
                ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
                icmp_ln1027_reg_687_pp0_iter2_reg <= icmp_ln1027_reg_687_pp0_iter1_reg;
                icmp_ln1031_reg_713_pp0_iter3_reg <= icmp_ln1031_reg_713;
                icmp_ln1031_reg_713_pp0_iter4_reg <= icmp_ln1031_reg_713_pp0_iter3_reg;
                icmp_ln1031_reg_713_pp0_iter5_reg <= icmp_ln1031_reg_713_pp0_iter4_reg;
                icmp_ln1031_reg_713_pp0_iter6_reg <= icmp_ln1031_reg_713_pp0_iter5_reg;
                icmp_ln1031_reg_713_pp0_iter7_reg <= icmp_ln1031_reg_713_pp0_iter6_reg;
                icmp_ln1031_reg_713_pp0_iter8_reg <= icmp_ln1031_reg_713_pp0_iter7_reg;
                icmp_ln181_reg_683_pp0_iter2_reg <= icmp_ln181_reg_683_pp0_iter1_reg;
                icmp_ln181_reg_683_pp0_iter3_reg <= icmp_ln181_reg_683_pp0_iter2_reg;
                icmp_ln181_reg_683_pp0_iter4_reg <= icmp_ln181_reg_683_pp0_iter3_reg;
                icmp_ln181_reg_683_pp0_iter5_reg <= icmp_ln181_reg_683_pp0_iter4_reg;
                icmp_ln181_reg_683_pp0_iter6_reg <= icmp_ln181_reg_683_pp0_iter5_reg;
                icmp_ln181_reg_683_pp0_iter7_reg <= icmp_ln181_reg_683_pp0_iter6_reg;
                icmp_ln181_reg_683_pp0_iter8_reg <= icmp_ln181_reg_683_pp0_iter7_reg;
                src_buf_V_12_reg_729 <= src_buf_V_3_fu_126;
                src_buf_V_13_reg_723 <= src_buf_V_4_fu_122;
                src_buf_V_14_reg_717 <= src_buf_V_5_fu_118;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter1_src_buf_V_3_4_reg_308 <= ap_phi_reg_pp0_iter0_src_buf_V_3_4_reg_308;
                ap_phi_reg_pp0_iter1_src_buf_V_414_reg_317 <= ap_phi_reg_pp0_iter0_src_buf_V_414_reg_317;
                ap_phi_reg_pp0_iter1_src_buf_V_6_4_reg_299 <= ap_phi_reg_pp0_iter0_src_buf_V_6_4_reg_299;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter2_src_buf_V_3_4_reg_308 <= ap_phi_reg_pp0_iter1_src_buf_V_3_4_reg_308;
                ap_phi_reg_pp0_iter2_src_buf_V_414_reg_317 <= ap_phi_reg_pp0_iter1_src_buf_V_414_reg_317;
                ap_phi_reg_pp0_iter2_src_buf_V_6_4_reg_299 <= ap_phi_reg_pp0_iter1_src_buf_V_6_4_reg_299;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter3_src_buf_V_3_4_reg_308 <= ap_phi_reg_pp0_iter2_src_buf_V_3_4_reg_308;
                ap_phi_reg_pp0_iter3_src_buf_V_414_reg_317 <= ap_phi_reg_pp0_iter2_src_buf_V_414_reg_317;
                ap_phi_reg_pp0_iter3_src_buf_V_6_4_reg_299 <= ap_phi_reg_pp0_iter2_src_buf_V_6_4_reg_299;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln181_reg_683_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                icmp_ln1031_reg_713 <= icmp_ln1031_fu_422_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln181_reg_683_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                src_buf_V_15_reg_735 <= src_buf_V_15_fu_514_p3;
                src_buf_V_16_reg_741 <= src_buf_V_16_fu_521_p3;
                src_buf_V_17_reg_747 <= src_buf_V_17_fu_528_p3;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    and_ln188_fu_399_p2 <= (icmp_ln1027_fu_393_p2 and cmp_i_i321_i);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter9, img_0_data163_empty_n, ap_predicate_op59_read_state2, img_1_data164_full_n, ap_predicate_op117_write_state10)
    begin
                ap_block_pp0_stage0_01001 <= (((ap_predicate_op117_write_state10 = ap_const_boolean_1) and (img_1_data164_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1)) or ((ap_predicate_op59_read_state2 = ap_const_boolean_1) and (img_0_data163_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter9, img_0_data163_empty_n, ap_predicate_op59_read_state2, img_1_data164_full_n, ap_predicate_op117_write_state10)
    begin
                ap_block_pp0_stage0_11001 <= (((ap_predicate_op117_write_state10 = ap_const_boolean_1) and (img_1_data164_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1)) or ((ap_predicate_op59_read_state2 = ap_const_boolean_1) and (img_0_data163_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp105_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter9, img_0_data163_empty_n, ap_predicate_op59_read_state2, img_1_data164_full_n, ap_predicate_op117_write_state10)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp105 <= (((ap_predicate_op117_write_state10 = ap_const_boolean_1) and (img_1_data164_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1)) or ((ap_predicate_op59_read_state2 = ap_const_boolean_1) and (img_0_data163_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter9, img_0_data163_empty_n, ap_predicate_op59_read_state2, img_1_data164_full_n, ap_predicate_op117_write_state10)
    begin
                ap_block_pp0_stage0_subdone <= (((ap_predicate_op117_write_state10 = ap_const_boolean_1) and (img_1_data164_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1)) or ((ap_predicate_op59_read_state2 = ap_const_boolean_1) and (img_0_data163_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;


    ap_block_state10_pp0_stage0_iter9_assign_proc : process(img_1_data164_full_n, ap_predicate_op117_write_state10)
    begin
                ap_block_state10_pp0_stage0_iter9 <= ((ap_predicate_op117_write_state10 = ap_const_boolean_1) and (img_1_data164_full_n = ap_const_logic_0));
    end process;


    ap_block_state10_pp0_stage0_iter9_ignore_call22_assign_proc : process(img_1_data164_full_n, ap_predicate_op117_write_state10)
    begin
                ap_block_state10_pp0_stage0_iter9_ignore_call22 <= ((ap_predicate_op117_write_state10 = ap_const_boolean_1) and (img_1_data164_full_n = ap_const_logic_0));
    end process;

        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0_ignore_call22 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state2_pp0_stage0_iter1_assign_proc : process(img_0_data163_empty_n, ap_predicate_op59_read_state2)
    begin
                ap_block_state2_pp0_stage0_iter1 <= ((ap_predicate_op59_read_state2 = ap_const_boolean_1) and (img_0_data163_empty_n = ap_const_logic_0));
    end process;


    ap_block_state2_pp0_stage0_iter1_ignore_call22_assign_proc : process(img_0_data163_empty_n, ap_predicate_op59_read_state2)
    begin
                ap_block_state2_pp0_stage0_iter1_ignore_call22 <= ((ap_predicate_op59_read_state2 = ap_const_boolean_1) and (img_0_data163_empty_n = ap_const_logic_0));
    end process;

        ap_block_state3_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call22 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call22 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call22 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call22 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call22 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call22 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call22 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_exit_pp0_iter0_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, icmp_ln181_fu_381_p2)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln181_fu_381_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_exit_pp0_iter3_stage0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_subdone, icmp_ln181_reg_683_pp0_iter2_reg)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln181_reg_683_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
            ap_condition_exit_pp0_iter3_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter3_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_block_pp0_stage0_subdone, ap_done_reg, ap_loop_exit_ready_pp0_iter8_reg)
    begin
        if (((ap_loop_exit_ready_pp0_iter8_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start_int;

    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9)
    begin
        if (((ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage0;
    ap_phi_reg_pp0_iter0_src_buf_V_3_4_reg_308 <= "XXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter0_src_buf_V_414_reg_317 <= "XXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter0_src_buf_V_6_4_reg_299 <= "XXXXXXXXXXXXXXXXXXXXXXXX";

    ap_predicate_op117_write_state10_assign_proc : process(icmp_ln181_reg_683_pp0_iter8_reg, icmp_ln1031_reg_713_pp0_iter8_reg)
    begin
                ap_predicate_op117_write_state10 <= ((icmp_ln1031_reg_713_pp0_iter8_reg = ap_const_lv1_0) and (icmp_ln181_reg_683_pp0_iter8_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op59_read_state2_assign_proc : process(icmp_ln181_reg_683, and_ln188_reg_694)
    begin
                ap_predicate_op59_read_state2 <= ((ap_const_lv1_1 = and_ln188_reg_694) and (icmp_ln181_reg_683 = ap_const_lv1_0));
    end process;


    ap_ready_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_col_V_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, col_V_6_fu_102, ap_loop_init)
    begin
        if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_sig_allocacmp_col_V <= ap_const_lv12_0;
        else 
            ap_sig_allocacmp_col_V <= col_V_6_fu_102;
        end if; 
    end process;

    buf_V_5_address0 <= conv_i130_i_fu_416_p1(10 - 1 downto 0);
    buf_V_5_address1 <= zext_ln541_fu_410_p1(10 - 1 downto 0);

    buf_V_5_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            buf_V_5_ce0 <= ap_const_logic_1;
        else 
            buf_V_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_V_5_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            buf_V_5_ce1 <= ap_const_logic_1;
        else 
            buf_V_5_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    buf_V_5_d1 <= img_0_data163_dout;

    buf_V_5_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln181_reg_683, and_ln188_reg_694, ap_block_pp0_stage0_11001, row_ind_V_21_cast_read_reg_631)
    begin
        if (((ap_const_lv1_1 = and_ln188_reg_694) and (icmp_ln181_reg_683 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (row_ind_V_21_cast_read_reg_631 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            buf_V_5_we1 <= ap_const_logic_1;
        else 
            buf_V_5_we1 <= ap_const_logic_0;
        end if; 
    end process;

    buf_V_6_address0 <= conv_i130_i_fu_416_p1(10 - 1 downto 0);
    buf_V_6_address1 <= zext_ln541_fu_410_p1(10 - 1 downto 0);

    buf_V_6_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            buf_V_6_ce0 <= ap_const_logic_1;
        else 
            buf_V_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_V_6_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            buf_V_6_ce1 <= ap_const_logic_1;
        else 
            buf_V_6_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    buf_V_6_d1 <= img_0_data163_dout;

    buf_V_6_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln181_reg_683, and_ln188_reg_694, ap_block_pp0_stage0_11001, row_ind_V_21_cast_read_reg_631)
    begin
        if ((not((row_ind_V_21_cast_read_reg_631 = ap_const_lv2_0)) and not((row_ind_V_21_cast_read_reg_631 = ap_const_lv2_1)) and (ap_const_lv1_1 = and_ln188_reg_694) and (icmp_ln181_reg_683 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            buf_V_6_we1 <= ap_const_logic_1;
        else 
            buf_V_6_we1 <= ap_const_logic_0;
        end if; 
    end process;

    buf_V_address0 <= conv_i130_i_fu_416_p1(10 - 1 downto 0);
    buf_V_address1 <= zext_ln541_fu_410_p1(10 - 1 downto 0);

    buf_V_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            buf_V_ce0 <= ap_const_logic_1;
        else 
            buf_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_V_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            buf_V_ce1 <= ap_const_logic_1;
        else 
            buf_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    buf_V_d1 <= img_0_data163_dout;

    buf_V_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln181_reg_683, and_ln188_reg_694, ap_block_pp0_stage0_11001, row_ind_V_21_cast_read_reg_631)
    begin
        if (((ap_const_lv1_1 = and_ln188_reg_694) and (icmp_ln181_reg_683 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (row_ind_V_21_cast_read_reg_631 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            buf_V_we1 <= ap_const_logic_1;
        else 
            buf_V_we1 <= ap_const_logic_0;
        end if; 
    end process;

    col_V_8_fu_387_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_col_V) + unsigned(ap_const_lv12_1));
    conv_i130_i_fu_416_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(col_V_reg_676_pp0_iter1_reg),64));

    grp_xFMedianProc_3_1_9_3_9_s_fu_326_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp105)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp105))) then 
            grp_xFMedianProc_3_1_9_3_9_s_fu_326_ap_ce <= ap_const_logic_1;
        else 
            grp_xFMedianProc_3_1_9_3_9_s_fu_326_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    icmp_ln1027_fu_393_p2 <= "1" when (unsigned(ap_sig_allocacmp_col_V) < unsigned(zext_ln419_1_cast_fu_339_p1)) else "0";
    icmp_ln1031_fu_422_p2 <= "1" when (col_V_reg_676_pp0_iter1_reg = ap_const_lv12_0) else "0";
    icmp_ln181_fu_381_p2 <= "1" when (ap_sig_allocacmp_col_V = add_ln450) else "0";

    img_0_data163_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, img_0_data163_empty_n, ap_predicate_op59_read_state2, ap_block_pp0_stage0)
    begin
        if (((ap_predicate_op59_read_state2 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            img_0_data163_blk_n <= img_0_data163_empty_n;
        else 
            img_0_data163_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    img_0_data163_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_predicate_op59_read_state2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_predicate_op59_read_state2 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            img_0_data163_read <= ap_const_logic_1;
        else 
            img_0_data163_read <= ap_const_logic_0;
        end if; 
    end process;


    img_1_data164_blk_n_assign_proc : process(ap_enable_reg_pp0_iter9, img_1_data164_full_n, ap_predicate_op117_write_state10, ap_block_pp0_stage0)
    begin
        if (((ap_predicate_op117_write_state10 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            img_1_data164_blk_n <= img_1_data164_full_n;
        else 
            img_1_data164_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    img_1_data164_din <= OutputValues_V_reg_768;

    img_1_data164_write_assign_proc : process(ap_enable_reg_pp0_iter9, ap_predicate_op117_write_state10, ap_block_pp0_stage0_11001)
    begin
        if (((ap_predicate_op117_write_state10 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            img_1_data164_write <= ap_const_logic_1;
        else 
            img_1_data164_write <= ap_const_logic_0;
        end if; 
    end process;

    row_ind_V_21_cast_read_reg_631 <= row_ind_V_21_cast;
    src_buf_V_15_fu_514_p3 <= 
        src_buf_V_2_fu_507_p3 when (icmp_ln1027_reg_687_pp0_iter2_reg(0) = '1') else 
        src_buf_V_3_fu_126;
    src_buf_V_16_fu_521_p3 <= 
        src_buf_V_1_fu_489_p3 when (icmp_ln1027_reg_687_pp0_iter2_reg(0) = '1') else 
        src_buf_V_4_fu_122;
    src_buf_V_17_fu_528_p3 <= 
        src_buf_V_fu_471_p3 when (icmp_ln1027_reg_687_pp0_iter2_reg(0) = '1') else 
        src_buf_V_5_fu_118;
    src_buf_V_1_fu_489_p3 <= 
        tmp_18_fu_448_p5 when (spec_select51(0) = '1') else 
        tmp_20_fu_478_p5;
    src_buf_V_2_fu_507_p3 <= 
        tmp_18_fu_448_p5 when (spec_select55(0) = '1') else 
        tmp_21_fu_496_p5;
    src_buf_V_fu_471_p3 <= 
        tmp_18_fu_448_p5 when (spec_select47(0) = '1') else 
        tmp_19_fu_460_p5;
    tmp_18_fu_448_p4 <= tmp_s_fu_436_p5(2 - 1 downto 0);
    zext_ln419_1_cast_fu_339_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(zext_ln419_1),12));
    zext_ln541_fu_410_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(col_V_reg_676),64));
end behav;
