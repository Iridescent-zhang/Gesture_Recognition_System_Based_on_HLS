// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module color_analysis_xFMedianNxN_600_1024_3_9_1_2_2_0_1025_3_9_Pipeline_Col_Loop (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        img_0_data163_dout,
        img_0_data163_num_data_valid,
        img_0_data163_fifo_cap,
        img_0_data163_empty_n,
        img_0_data163_read,
        img_1_data164_din,
        img_1_data164_num_data_valid,
        img_1_data164_fifo_cap,
        img_1_data164_full_n,
        img_1_data164_write,
        add_ln450,
        buf_V_6_address0,
        buf_V_6_ce0,
        buf_V_6_q0,
        buf_V_6_address1,
        buf_V_6_ce1,
        buf_V_6_we1,
        buf_V_6_d1,
        buf_V_address0,
        buf_V_ce0,
        buf_V_q0,
        buf_V_address1,
        buf_V_ce1,
        buf_V_we1,
        buf_V_d1,
        buf_V_5_address0,
        buf_V_5_ce0,
        buf_V_5_q0,
        buf_V_5_address1,
        buf_V_5_ce1,
        buf_V_5_we1,
        buf_V_5_d1,
        row_ind_V_19,
        row_ind_V_20,
        row_ind_V_21,
        sub_i213_i_cast,
        row_ind_V_19_cast,
        spec_select47,
        row_ind_V_20_cast,
        spec_select51,
        row_ind_V_21_cast,
        spec_select55,
        zext_ln419_1,
        cmp_i_i321_i
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [23:0] img_0_data163_dout;
input  [1:0] img_0_data163_num_data_valid;
input  [1:0] img_0_data163_fifo_cap;
input   img_0_data163_empty_n;
output   img_0_data163_read;
output  [23:0] img_1_data164_din;
input  [1:0] img_1_data164_num_data_valid;
input  [1:0] img_1_data164_fifo_cap;
input   img_1_data164_full_n;
output   img_1_data164_write;
input  [11:0] add_ln450;
output  [9:0] buf_V_6_address0;
output   buf_V_6_ce0;
input  [23:0] buf_V_6_q0;
output  [9:0] buf_V_6_address1;
output   buf_V_6_ce1;
output   buf_V_6_we1;
output  [23:0] buf_V_6_d1;
output  [9:0] buf_V_address0;
output   buf_V_ce0;
input  [23:0] buf_V_q0;
output  [9:0] buf_V_address1;
output   buf_V_ce1;
output   buf_V_we1;
output  [23:0] buf_V_d1;
output  [9:0] buf_V_5_address0;
output   buf_V_5_ce0;
input  [23:0] buf_V_5_q0;
output  [9:0] buf_V_5_address1;
output   buf_V_5_ce1;
output   buf_V_5_we1;
output  [23:0] buf_V_5_d1;
input  [12:0] row_ind_V_19;
input  [12:0] row_ind_V_20;
input  [12:0] row_ind_V_21;
input  [1:0] sub_i213_i_cast;
input  [1:0] row_ind_V_19_cast;
input  [0:0] spec_select47;
input  [1:0] row_ind_V_20_cast;
input  [0:0] spec_select51;
input  [1:0] row_ind_V_21_cast;
input  [0:0] spec_select55;
input  [10:0] zext_ln419_1;
input  [0:0] cmp_i_i321_i;

reg ap_idle;
reg img_0_data163_read;
reg img_1_data164_write;
reg buf_V_6_ce0;
reg buf_V_6_ce1;
reg buf_V_6_we1;
reg buf_V_ce0;
reg buf_V_ce1;
reg buf_V_we1;
reg buf_V_5_ce0;
reg buf_V_5_ce1;
reg buf_V_5_we1;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
reg   [0:0] icmp_ln181_reg_683;
reg   [0:0] and_ln188_reg_694;
reg    ap_predicate_op59_read_state2;
reg    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
wire    ap_block_state8_pp0_stage0_iter7;
wire    ap_block_state9_pp0_stage0_iter8;
reg   [0:0] icmp_ln181_reg_683_pp0_iter8_reg;
reg   [0:0] icmp_ln1031_reg_713;
reg   [0:0] icmp_ln1031_reg_713_pp0_iter8_reg;
reg    ap_predicate_op117_write_state10;
reg    ap_block_state10_pp0_stage0_iter9;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln181_fu_381_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    img_0_data163_blk_n;
wire    ap_block_pp0_stage0;
reg    img_1_data164_blk_n;
reg    ap_block_pp0_stage0_11001;
wire   [1:0] row_ind_V_21_cast_read_reg_631;
reg   [11:0] col_V_reg_676;
reg   [11:0] col_V_reg_676_pp0_iter1_reg;
reg   [0:0] icmp_ln181_reg_683_pp0_iter1_reg;
reg   [0:0] icmp_ln181_reg_683_pp0_iter2_reg;
reg   [0:0] icmp_ln181_reg_683_pp0_iter3_reg;
reg   [0:0] icmp_ln181_reg_683_pp0_iter4_reg;
reg   [0:0] icmp_ln181_reg_683_pp0_iter5_reg;
reg   [0:0] icmp_ln181_reg_683_pp0_iter6_reg;
reg   [0:0] icmp_ln181_reg_683_pp0_iter7_reg;
wire   [0:0] icmp_ln1027_fu_393_p2;
reg   [0:0] icmp_ln1027_reg_687;
reg   [0:0] icmp_ln1027_reg_687_pp0_iter1_reg;
reg   [0:0] icmp_ln1027_reg_687_pp0_iter2_reg;
wire   [0:0] and_ln188_fu_399_p2;
wire   [0:0] icmp_ln1031_fu_422_p2;
reg   [0:0] icmp_ln1031_reg_713_pp0_iter3_reg;
reg   [0:0] icmp_ln1031_reg_713_pp0_iter4_reg;
reg   [0:0] icmp_ln1031_reg_713_pp0_iter5_reg;
reg   [0:0] icmp_ln1031_reg_713_pp0_iter6_reg;
reg   [0:0] icmp_ln1031_reg_713_pp0_iter7_reg;
reg   [23:0] src_buf_V_14_reg_717;
reg   [23:0] src_buf_V_13_reg_723;
reg   [23:0] src_buf_V_12_reg_729;
wire   [23:0] src_buf_V_15_fu_514_p3;
reg   [23:0] src_buf_V_15_reg_735;
wire   [23:0] src_buf_V_16_fu_521_p3;
reg   [23:0] src_buf_V_16_reg_741;
wire   [23:0] src_buf_V_17_fu_528_p3;
reg   [23:0] src_buf_V_17_reg_747;
wire   [23:0] grp_xFMedianProc_3_1_9_3_9_s_fu_326_ap_return;
reg   [23:0] OutputValues_V_reg_768;
reg    ap_condition_exit_pp0_iter3_stage0;
reg    grp_xFMedianProc_3_1_9_3_9_s_fu_326_ap_ce;
wire    ap_block_state1_pp0_stage0_iter0_ignore_call22;
reg    ap_block_state2_pp0_stage0_iter1_ignore_call22;
wire    ap_block_state3_pp0_stage0_iter2_ignore_call22;
wire    ap_block_state4_pp0_stage0_iter3_ignore_call22;
wire    ap_block_state5_pp0_stage0_iter4_ignore_call22;
wire    ap_block_state6_pp0_stage0_iter5_ignore_call22;
wire    ap_block_state7_pp0_stage0_iter6_ignore_call22;
wire    ap_block_state8_pp0_stage0_iter7_ignore_call22;
wire    ap_block_state9_pp0_stage0_iter8_ignore_call22;
reg    ap_block_state10_pp0_stage0_iter9_ignore_call22;
reg    ap_block_pp0_stage0_11001_ignoreCallOp105;
wire   [23:0] ap_phi_reg_pp0_iter0_src_buf_V_6_4_reg_299;
reg   [23:0] ap_phi_reg_pp0_iter1_src_buf_V_6_4_reg_299;
reg   [23:0] ap_phi_reg_pp0_iter2_src_buf_V_6_4_reg_299;
reg   [23:0] ap_phi_reg_pp0_iter3_src_buf_V_6_4_reg_299;
reg   [23:0] ap_phi_reg_pp0_iter4_src_buf_V_6_4_reg_299;
wire   [23:0] ap_phi_reg_pp0_iter0_src_buf_V_3_4_reg_308;
reg   [23:0] ap_phi_reg_pp0_iter1_src_buf_V_3_4_reg_308;
reg   [23:0] ap_phi_reg_pp0_iter2_src_buf_V_3_4_reg_308;
reg   [23:0] ap_phi_reg_pp0_iter3_src_buf_V_3_4_reg_308;
reg   [23:0] ap_phi_reg_pp0_iter4_src_buf_V_3_4_reg_308;
wire   [23:0] ap_phi_reg_pp0_iter0_src_buf_V_414_reg_317;
reg   [23:0] ap_phi_reg_pp0_iter1_src_buf_V_414_reg_317;
reg   [23:0] ap_phi_reg_pp0_iter2_src_buf_V_414_reg_317;
reg   [23:0] ap_phi_reg_pp0_iter3_src_buf_V_414_reg_317;
reg   [23:0] ap_phi_reg_pp0_iter4_src_buf_V_414_reg_317;
wire   [63:0] zext_ln541_fu_410_p1;
wire   [63:0] conv_i130_i_fu_416_p1;
reg   [11:0] col_V_6_fu_102;
wire   [11:0] col_V_8_fu_387_p2;
wire    ap_loop_init;
reg   [11:0] ap_sig_allocacmp_col_V;
reg   [23:0] src_buf_V_9_fu_106;
reg   [23:0] src_buf_V_10_fu_110;
reg   [23:0] src_buf_V_11_fu_114;
reg   [23:0] src_buf_V_5_fu_118;
reg   [23:0] src_buf_V_4_fu_122;
reg   [23:0] src_buf_V_3_fu_126;
reg    ap_block_pp0_stage0_01001;
wire   [11:0] zext_ln419_1_cast_fu_339_p1;
wire   [12:0] tmp_s_fu_436_p5;
wire   [1:0] tmp_18_fu_448_p4;
wire   [23:0] tmp_18_fu_448_p5;
wire   [23:0] tmp_19_fu_460_p5;
wire   [23:0] tmp_20_fu_478_p5;
wire   [23:0] tmp_21_fu_496_p5;
wire   [23:0] src_buf_V_2_fu_507_p3;
wire   [23:0] src_buf_V_1_fu_489_p3;
wire   [23:0] src_buf_V_fu_471_p3;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_done_reg = 1'b0;
end

color_analysis_xFMedianProc_3_1_9_3_9_s grp_xFMedianProc_3_1_9_3_9_s_fu_326(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .p_read1(src_buf_V_9_fu_106),
    .p_read2(src_buf_V_14_reg_717),
    .p_read3(src_buf_V_17_reg_747),
    .p_read4(src_buf_V_10_fu_110),
    .p_read5(src_buf_V_13_reg_723),
    .p_read6(src_buf_V_16_reg_741),
    .p_read7(src_buf_V_11_fu_114),
    .p_read8(src_buf_V_12_reg_729),
    .p_read9(src_buf_V_15_reg_735),
    .ap_return(grp_xFMedianProc_3_1_9_3_9_s_fu_326_ap_return),
    .ap_ce(grp_xFMedianProc_3_1_9_3_9_s_fu_326_ap_ce)
);

color_analysis_mux_32_13_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 13 ),
    .din2_WIDTH( 13 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 13 ))
mux_32_13_1_1_U90(
    .din0(row_ind_V_19),
    .din1(row_ind_V_20),
    .din2(row_ind_V_21),
    .din3(sub_i213_i_cast),
    .dout(tmp_s_fu_436_p5)
);

color_analysis_mux_32_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 24 ),
    .din2_WIDTH( 24 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 24 ))
mux_32_24_1_1_U91(
    .din0(buf_V_q0),
    .din1(buf_V_5_q0),
    .din2(buf_V_6_q0),
    .din3(tmp_18_fu_448_p4),
    .dout(tmp_18_fu_448_p5)
);

color_analysis_mux_32_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 24 ),
    .din2_WIDTH( 24 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 24 ))
mux_32_24_1_1_U92(
    .din0(buf_V_q0),
    .din1(buf_V_5_q0),
    .din2(buf_V_6_q0),
    .din3(row_ind_V_19_cast),
    .dout(tmp_19_fu_460_p5)
);

color_analysis_mux_32_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 24 ),
    .din2_WIDTH( 24 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 24 ))
mux_32_24_1_1_U93(
    .din0(buf_V_q0),
    .din1(buf_V_5_q0),
    .din2(buf_V_6_q0),
    .din3(row_ind_V_20_cast),
    .dout(tmp_20_fu_478_p5)
);

color_analysis_mux_32_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 24 ),
    .din2_WIDTH( 24 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 24 ))
mux_32_24_1_1_U94(
    .din0(buf_V_q0),
    .din1(buf_V_5_q0),
    .din2(buf_V_6_q0),
    .din3(row_ind_V_21_cast),
    .dout(tmp_21_fu_496_p5)
);

color_analysis_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter8_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter3_stage0)) begin
            ap_enable_reg_pp0_iter4 <= 1'b0;
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if (((icmp_ln1031_reg_713 == 1'd1) & (icmp_ln181_reg_683_pp0_iter2_reg == 1'd0))) begin
            ap_phi_reg_pp0_iter4_src_buf_V_3_4_reg_308 <= src_buf_V_16_fu_521_p3;
        end else if (((icmp_ln1031_reg_713 == 1'd0) & (icmp_ln181_reg_683_pp0_iter2_reg == 1'd0))) begin
            ap_phi_reg_pp0_iter4_src_buf_V_3_4_reg_308 <= src_buf_V_4_fu_122;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter4_src_buf_V_3_4_reg_308 <= ap_phi_reg_pp0_iter3_src_buf_V_3_4_reg_308;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if (((icmp_ln1031_reg_713 == 1'd1) & (icmp_ln181_reg_683_pp0_iter2_reg == 1'd0))) begin
            ap_phi_reg_pp0_iter4_src_buf_V_414_reg_317 <= src_buf_V_17_fu_528_p3;
        end else if (((icmp_ln1031_reg_713 == 1'd0) & (icmp_ln181_reg_683_pp0_iter2_reg == 1'd0))) begin
            ap_phi_reg_pp0_iter4_src_buf_V_414_reg_317 <= src_buf_V_5_fu_118;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter4_src_buf_V_414_reg_317 <= ap_phi_reg_pp0_iter3_src_buf_V_414_reg_317;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if (((icmp_ln1031_reg_713 == 1'd1) & (icmp_ln181_reg_683_pp0_iter2_reg == 1'd0))) begin
            ap_phi_reg_pp0_iter4_src_buf_V_6_4_reg_299 <= src_buf_V_15_fu_514_p3;
        end else if (((icmp_ln1031_reg_713 == 1'd0) & (icmp_ln181_reg_683_pp0_iter2_reg == 1'd0))) begin
            ap_phi_reg_pp0_iter4_src_buf_V_6_4_reg_299 <= src_buf_V_3_fu_126;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter4_src_buf_V_6_4_reg_299 <= ap_phi_reg_pp0_iter3_src_buf_V_6_4_reg_299;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln181_fu_381_p2 == 1'd0))) begin
            col_V_6_fu_102 <= col_V_8_fu_387_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            col_V_6_fu_102 <= 12'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            src_buf_V_10_fu_110 <= 24'd0;
        end else if ((ap_enable_reg_pp0_iter4 == 1'b1)) begin
            src_buf_V_10_fu_110 <= ap_phi_reg_pp0_iter4_src_buf_V_3_4_reg_308;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            src_buf_V_11_fu_114 <= 24'd0;
        end else if ((ap_enable_reg_pp0_iter4 == 1'b1)) begin
            src_buf_V_11_fu_114 <= ap_phi_reg_pp0_iter4_src_buf_V_6_4_reg_299;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            src_buf_V_3_fu_126 <= 24'd0;
        end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln181_reg_683_pp0_iter2_reg == 1'd0))) begin
            src_buf_V_3_fu_126 <= src_buf_V_15_fu_514_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            src_buf_V_4_fu_122 <= 24'd0;
        end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln181_reg_683_pp0_iter2_reg == 1'd0))) begin
            src_buf_V_4_fu_122 <= src_buf_V_16_fu_521_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            src_buf_V_5_fu_118 <= 24'd0;
        end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln181_reg_683_pp0_iter2_reg == 1'd0))) begin
            src_buf_V_5_fu_118 <= src_buf_V_17_fu_528_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            src_buf_V_9_fu_106 <= 24'd0;
        end else if ((ap_enable_reg_pp0_iter4 == 1'b1)) begin
            src_buf_V_9_fu_106 <= ap_phi_reg_pp0_iter4_src_buf_V_414_reg_317;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln181_reg_683_pp0_iter7_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        OutputValues_V_reg_768 <= grp_xFMedianProc_3_1_9_3_9_s_fu_326_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln181_fu_381_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        and_ln188_reg_694 <= and_ln188_fu_399_p2;
        icmp_ln1027_reg_687 <= icmp_ln1027_fu_393_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        col_V_reg_676 <= ap_sig_allocacmp_col_V;
        col_V_reg_676_pp0_iter1_reg <= col_V_reg_676;
        icmp_ln1027_reg_687_pp0_iter1_reg <= icmp_ln1027_reg_687;
        icmp_ln181_reg_683 <= icmp_ln181_fu_381_p2;
        icmp_ln181_reg_683_pp0_iter1_reg <= icmp_ln181_reg_683;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
        icmp_ln1027_reg_687_pp0_iter2_reg <= icmp_ln1027_reg_687_pp0_iter1_reg;
        icmp_ln1031_reg_713_pp0_iter3_reg <= icmp_ln1031_reg_713;
        icmp_ln1031_reg_713_pp0_iter4_reg <= icmp_ln1031_reg_713_pp0_iter3_reg;
        icmp_ln1031_reg_713_pp0_iter5_reg <= icmp_ln1031_reg_713_pp0_iter4_reg;
        icmp_ln1031_reg_713_pp0_iter6_reg <= icmp_ln1031_reg_713_pp0_iter5_reg;
        icmp_ln1031_reg_713_pp0_iter7_reg <= icmp_ln1031_reg_713_pp0_iter6_reg;
        icmp_ln1031_reg_713_pp0_iter8_reg <= icmp_ln1031_reg_713_pp0_iter7_reg;
        icmp_ln181_reg_683_pp0_iter2_reg <= icmp_ln181_reg_683_pp0_iter1_reg;
        icmp_ln181_reg_683_pp0_iter3_reg <= icmp_ln181_reg_683_pp0_iter2_reg;
        icmp_ln181_reg_683_pp0_iter4_reg <= icmp_ln181_reg_683_pp0_iter3_reg;
        icmp_ln181_reg_683_pp0_iter5_reg <= icmp_ln181_reg_683_pp0_iter4_reg;
        icmp_ln181_reg_683_pp0_iter6_reg <= icmp_ln181_reg_683_pp0_iter5_reg;
        icmp_ln181_reg_683_pp0_iter7_reg <= icmp_ln181_reg_683_pp0_iter6_reg;
        icmp_ln181_reg_683_pp0_iter8_reg <= icmp_ln181_reg_683_pp0_iter7_reg;
        src_buf_V_12_reg_729 <= src_buf_V_3_fu_126;
        src_buf_V_13_reg_723 <= src_buf_V_4_fu_122;
        src_buf_V_14_reg_717 <= src_buf_V_5_fu_118;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter1_src_buf_V_3_4_reg_308 <= ap_phi_reg_pp0_iter0_src_buf_V_3_4_reg_308;
        ap_phi_reg_pp0_iter1_src_buf_V_414_reg_317 <= ap_phi_reg_pp0_iter0_src_buf_V_414_reg_317;
        ap_phi_reg_pp0_iter1_src_buf_V_6_4_reg_299 <= ap_phi_reg_pp0_iter0_src_buf_V_6_4_reg_299;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter2_src_buf_V_3_4_reg_308 <= ap_phi_reg_pp0_iter1_src_buf_V_3_4_reg_308;
        ap_phi_reg_pp0_iter2_src_buf_V_414_reg_317 <= ap_phi_reg_pp0_iter1_src_buf_V_414_reg_317;
        ap_phi_reg_pp0_iter2_src_buf_V_6_4_reg_299 <= ap_phi_reg_pp0_iter1_src_buf_V_6_4_reg_299;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter3_src_buf_V_3_4_reg_308 <= ap_phi_reg_pp0_iter2_src_buf_V_3_4_reg_308;
        ap_phi_reg_pp0_iter3_src_buf_V_414_reg_317 <= ap_phi_reg_pp0_iter2_src_buf_V_414_reg_317;
        ap_phi_reg_pp0_iter3_src_buf_V_6_4_reg_299 <= ap_phi_reg_pp0_iter2_src_buf_V_6_4_reg_299;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln181_reg_683_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln1031_reg_713 <= icmp_ln1031_fu_422_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln181_reg_683_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        src_buf_V_15_reg_735 <= src_buf_V_15_fu_514_p3;
        src_buf_V_16_reg_741 <= src_buf_V_16_fu_521_p3;
        src_buf_V_17_reg_747 <= src_buf_V_17_fu_528_p3;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln181_fu_381_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln181_reg_683_pp0_iter2_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_condition_exit_pp0_iter3_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter3_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter8_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_col_V = 12'd0;
    end else begin
        ap_sig_allocacmp_col_V = col_V_6_fu_102;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_V_5_ce0 = 1'b1;
    end else begin
        buf_V_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_V_5_ce1 = 1'b1;
    end else begin
        buf_V_5_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln188_reg_694) & (icmp_ln181_reg_683 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (row_ind_V_21_cast_read_reg_631 == 2'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_V_5_we1 = 1'b1;
    end else begin
        buf_V_5_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_V_6_ce0 = 1'b1;
    end else begin
        buf_V_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_V_6_ce1 = 1'b1;
    end else begin
        buf_V_6_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((~(row_ind_V_21_cast_read_reg_631 == 2'd0) & ~(row_ind_V_21_cast_read_reg_631 == 2'd1) & (1'd1 == and_ln188_reg_694) & (icmp_ln181_reg_683 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_V_6_we1 = 1'b1;
    end else begin
        buf_V_6_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_V_ce0 = 1'b1;
    end else begin
        buf_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_V_ce1 = 1'b1;
    end else begin
        buf_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln188_reg_694) & (icmp_ln181_reg_683 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (row_ind_V_21_cast_read_reg_631 == 2'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_V_we1 = 1'b1;
    end else begin
        buf_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001_ignoreCallOp105))) begin
        grp_xFMedianProc_3_1_9_3_9_s_fu_326_ap_ce = 1'b1;
    end else begin
        grp_xFMedianProc_3_1_9_3_9_s_fu_326_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((ap_predicate_op59_read_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        img_0_data163_blk_n = img_0_data163_empty_n;
    end else begin
        img_0_data163_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_predicate_op59_read_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        img_0_data163_read = 1'b1;
    end else begin
        img_0_data163_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_predicate_op117_write_state10 == 1'b1) & (ap_enable_reg_pp0_iter9 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        img_1_data164_blk_n = img_1_data164_full_n;
    end else begin
        img_1_data164_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_predicate_op117_write_state10 == 1'b1) & (ap_enable_reg_pp0_iter9 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        img_1_data164_write = 1'b1;
    end else begin
        img_1_data164_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign and_ln188_fu_399_p2 = (icmp_ln1027_fu_393_p2 & cmp_i_i321_i);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((ap_predicate_op117_write_state10 == 1'b1) & (img_1_data164_full_n == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b1)) | ((ap_predicate_op59_read_state2 == 1'b1) & (img_0_data163_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((ap_predicate_op117_write_state10 == 1'b1) & (img_1_data164_full_n == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b1)) | ((ap_predicate_op59_read_state2 == 1'b1) & (img_0_data163_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001_ignoreCallOp105 = (((ap_predicate_op117_write_state10 == 1'b1) & (img_1_data164_full_n == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b1)) | ((ap_predicate_op59_read_state2 == 1'b1) & (img_0_data163_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((ap_predicate_op117_write_state10 == 1'b1) & (img_1_data164_full_n == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b1)) | ((ap_predicate_op59_read_state2 == 1'b1) & (img_0_data163_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_state10_pp0_stage0_iter9 = ((ap_predicate_op117_write_state10 == 1'b1) & (img_1_data164_full_n == 1'b0));
end

always @ (*) begin
    ap_block_state10_pp0_stage0_iter9_ignore_call22 = ((ap_predicate_op117_write_state10 == 1'b1) & (img_1_data164_full_n == 1'b0));
end

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0_ignore_call22 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state2_pp0_stage0_iter1 = ((ap_predicate_op59_read_state2 == 1'b1) & (img_0_data163_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state2_pp0_stage0_iter1_ignore_call22 = ((ap_predicate_op59_read_state2 == 1'b1) & (img_0_data163_empty_n == 1'b0));
end

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2_ignore_call22 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3_ignore_call22 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4_ignore_call22 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5_ignore_call22 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6_ignore_call22 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7_ignore_call22 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter8_ignore_call22 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign ap_phi_reg_pp0_iter0_src_buf_V_3_4_reg_308 = 'bx;

assign ap_phi_reg_pp0_iter0_src_buf_V_414_reg_317 = 'bx;

assign ap_phi_reg_pp0_iter0_src_buf_V_6_4_reg_299 = 'bx;

always @ (*) begin
    ap_predicate_op117_write_state10 = ((icmp_ln1031_reg_713_pp0_iter8_reg == 1'd0) & (icmp_ln181_reg_683_pp0_iter8_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op59_read_state2 = ((1'd1 == and_ln188_reg_694) & (icmp_ln181_reg_683 == 1'd0));
end

assign buf_V_5_address0 = conv_i130_i_fu_416_p1;

assign buf_V_5_address1 = zext_ln541_fu_410_p1;

assign buf_V_5_d1 = img_0_data163_dout;

assign buf_V_6_address0 = conv_i130_i_fu_416_p1;

assign buf_V_6_address1 = zext_ln541_fu_410_p1;

assign buf_V_6_d1 = img_0_data163_dout;

assign buf_V_address0 = conv_i130_i_fu_416_p1;

assign buf_V_address1 = zext_ln541_fu_410_p1;

assign buf_V_d1 = img_0_data163_dout;

assign col_V_8_fu_387_p2 = (ap_sig_allocacmp_col_V + 12'd1);

assign conv_i130_i_fu_416_p1 = col_V_reg_676_pp0_iter1_reg;

assign icmp_ln1027_fu_393_p2 = ((ap_sig_allocacmp_col_V < zext_ln419_1_cast_fu_339_p1) ? 1'b1 : 1'b0);

assign icmp_ln1031_fu_422_p2 = ((col_V_reg_676_pp0_iter1_reg == 12'd0) ? 1'b1 : 1'b0);

assign icmp_ln181_fu_381_p2 = ((ap_sig_allocacmp_col_V == add_ln450) ? 1'b1 : 1'b0);

assign img_1_data164_din = OutputValues_V_reg_768;

assign row_ind_V_21_cast_read_reg_631 = row_ind_V_21_cast;

assign src_buf_V_15_fu_514_p3 = ((icmp_ln1027_reg_687_pp0_iter2_reg[0:0] == 1'b1) ? src_buf_V_2_fu_507_p3 : src_buf_V_3_fu_126);

assign src_buf_V_16_fu_521_p3 = ((icmp_ln1027_reg_687_pp0_iter2_reg[0:0] == 1'b1) ? src_buf_V_1_fu_489_p3 : src_buf_V_4_fu_122);

assign src_buf_V_17_fu_528_p3 = ((icmp_ln1027_reg_687_pp0_iter2_reg[0:0] == 1'b1) ? src_buf_V_fu_471_p3 : src_buf_V_5_fu_118);

assign src_buf_V_1_fu_489_p3 = ((spec_select51[0:0] == 1'b1) ? tmp_18_fu_448_p5 : tmp_20_fu_478_p5);

assign src_buf_V_2_fu_507_p3 = ((spec_select55[0:0] == 1'b1) ? tmp_18_fu_448_p5 : tmp_21_fu_496_p5);

assign src_buf_V_fu_471_p3 = ((spec_select47[0:0] == 1'b1) ? tmp_18_fu_448_p5 : tmp_19_fu_460_p5);

assign tmp_18_fu_448_p4 = tmp_s_fu_436_p5[1:0];

assign zext_ln419_1_cast_fu_339_p1 = zext_ln419_1;

assign zext_ln541_fu_410_p1 = col_V_reg_676;

endmodule //color_analysis_xFMedianNxN_600_1024_3_9_1_2_2_0_1025_3_9_Pipeline_Col_Loop
