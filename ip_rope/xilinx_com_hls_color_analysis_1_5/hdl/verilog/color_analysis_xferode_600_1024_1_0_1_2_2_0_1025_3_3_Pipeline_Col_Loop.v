// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module color_analysis_xferode_600_1024_1_0_1_2_2_0_1025_3_3_Pipeline_Col_Loop (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        img_2_data165_dout,
        img_2_data165_num_data_valid,
        img_2_data165_fifo_cap,
        img_2_data165_empty_n,
        img_2_data165_read,
        img_3_data166_din,
        img_3_data166_num_data_valid,
        img_3_data166_fifo_cap,
        img_3_data166_full_n,
        img_3_data166_write,
        img_width,
        buf_V_2_address0,
        buf_V_2_ce0,
        buf_V_2_q0,
        buf_V_2_address1,
        buf_V_2_ce1,
        buf_V_2_we1,
        buf_V_2_d1,
        buf_V_1_address0,
        buf_V_1_ce0,
        buf_V_1_q0,
        buf_V_1_address1,
        buf_V_1_ce1,
        buf_V_1_we1,
        buf_V_1_d1,
        buf_V_address0,
        buf_V_ce0,
        buf_V_q0,
        buf_V_address1,
        buf_V_ce1,
        buf_V_we1,
        buf_V_d1,
        p_cast1,
        p_cast2,
        p_cast,
        cmp_i_i142_i
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [7:0] img_2_data165_dout;
input  [1:0] img_2_data165_num_data_valid;
input  [1:0] img_2_data165_fifo_cap;
input   img_2_data165_empty_n;
output   img_2_data165_read;
output  [7:0] img_3_data166_din;
input  [1:0] img_3_data166_num_data_valid;
input  [1:0] img_3_data166_fifo_cap;
input   img_3_data166_full_n;
output   img_3_data166_write;
input  [15:0] img_width;
output  [9:0] buf_V_2_address0;
output   buf_V_2_ce0;
input  [7:0] buf_V_2_q0;
output  [9:0] buf_V_2_address1;
output   buf_V_2_ce1;
output   buf_V_2_we1;
output  [7:0] buf_V_2_d1;
output  [9:0] buf_V_1_address0;
output   buf_V_1_ce0;
input  [7:0] buf_V_1_q0;
output  [9:0] buf_V_1_address1;
output   buf_V_1_ce1;
output   buf_V_1_we1;
output  [7:0] buf_V_1_d1;
output  [9:0] buf_V_address0;
output   buf_V_ce0;
input  [7:0] buf_V_q0;
output  [9:0] buf_V_address1;
output   buf_V_ce1;
output   buf_V_we1;
output  [7:0] buf_V_d1;
input  [1:0] p_cast1;
input  [1:0] p_cast2;
input  [1:0] p_cast;
input  [0:0] cmp_i_i142_i;

reg ap_idle;
reg img_2_data165_read;
reg img_3_data166_write;
reg buf_V_2_ce0;
reg[9:0] buf_V_2_address1;
reg buf_V_2_ce1;
reg buf_V_2_we1;
reg[7:0] buf_V_2_d1;
reg buf_V_1_ce0;
reg[9:0] buf_V_1_address1;
reg buf_V_1_ce1;
reg buf_V_1_we1;
reg[7:0] buf_V_1_d1;
reg buf_V_ce0;
reg[9:0] buf_V_address1;
reg buf_V_ce1;
reg buf_V_we1;
reg[7:0] buf_V_d1;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
reg   [0:0] icmp_ln1027_reg_644;
reg   [0:0] icmp_ln1027_1_reg_648;
wire   [0:0] cmp_i_i142_i_read_reg_619;
reg    ap_predicate_op61_read_state2;
reg    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
reg   [0:0] icmp_ln1031_reg_659;
reg   [0:0] icmp_ln1031_reg_659_pp0_iter6_reg;
reg    ap_block_state8_pp0_stage0_iter7;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln1027_fu_349_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    img_2_data165_blk_n;
wire    ap_block_pp0_stage0;
reg    img_3_data166_blk_n;
reg    ap_block_pp0_stage0_11001;
wire   [1:0] p_cast_read_reg_623;
reg   [12:0] col_V_1_reg_638;
reg   [0:0] icmp_ln1027_reg_644_pp0_iter1_reg;
reg   [0:0] icmp_ln1027_reg_644_pp0_iter2_reg;
reg   [0:0] icmp_ln1027_reg_644_pp0_iter3_reg;
reg   [0:0] icmp_ln1027_reg_644_pp0_iter4_reg;
reg   [0:0] icmp_ln1027_reg_644_pp0_iter5_reg;
wire   [0:0] icmp_ln1027_1_fu_361_p2;
reg   [0:0] icmp_ln1027_1_reg_648_pp0_iter1_reg;
reg   [0:0] icmp_ln1027_1_reg_648_pp0_iter2_reg;
wire   [63:0] conv_i99_i_fu_372_p1;
reg   [63:0] conv_i99_i_reg_652;
wire   [0:0] icmp_ln1031_fu_381_p2;
reg   [0:0] icmp_ln1031_reg_659_pp0_iter2_reg;
reg   [0:0] icmp_ln1031_reg_659_pp0_iter3_reg;
reg   [0:0] icmp_ln1031_reg_659_pp0_iter4_reg;
reg   [0:0] icmp_ln1031_reg_659_pp0_iter5_reg;
wire   [7:0] buf_cop_V_fu_386_p5;
wire   [7:0] buf_cop_V_1_fu_397_p5;
wire   [7:0] buf_cop_V_2_fu_408_p5;
wire   [7:0] src_buf_temp_copy_extract_V_0_4_xfExtractPixels_1_1_0_s_fu_295_ap_return;
reg   [7:0] src_buf_temp_copy_extract_V_0_4_reg_693;
reg   [7:0] src_buf_temp_copy_extract_V_0_4_reg_693_pp0_iter5_reg;
reg   [7:0] src_buf_temp_copy_extract_V_0_4_reg_693_pp0_iter6_reg;
wire   [7:0] max_V_13_fu_445_p3;
reg   [7:0] max_V_13_reg_700;
wire   [7:0] src_buf_temp_copy_extract_V_0_3_xfExtractPixels_1_1_0_s_fu_301_ap_return;
reg   [7:0] src_buf_temp_copy_extract_V_0_3_reg_706;
wire   [7:0] max_V_15_fu_487_p3;
reg   [7:0] max_V_15_reg_711;
wire   [0:0] icmp_ln1027_6_fu_495_p2;
reg   [0:0] icmp_ln1027_6_reg_716;
wire   [7:0] max_V_20_fu_542_p3;
reg   [7:0] max_V_20_reg_721;
reg    ap_condition_exit_pp0_iter6_stage0;
wire    src_buf_temp_copy_extract_V_0_xfExtractPixels_1_1_0_s_fu_289_ap_ready;
wire   [7:0] src_buf_temp_copy_extract_V_0_xfExtractPixels_1_1_0_s_fu_289_ap_return;
wire    src_buf_temp_copy_extract_V_0_4_xfExtractPixels_1_1_0_s_fu_295_ap_ready;
wire    src_buf_temp_copy_extract_V_0_3_xfExtractPixels_1_1_0_s_fu_301_ap_ready;
wire   [7:0] ap_phi_reg_pp0_iter0_buf_cop_V_0_reg_256;
reg   [7:0] ap_phi_reg_pp0_iter1_buf_cop_V_0_reg_256;
reg   [7:0] ap_phi_reg_pp0_iter2_buf_cop_V_0_reg_256;
reg   [7:0] ap_phi_reg_pp0_iter3_buf_cop_V_0_reg_256;
reg   [7:0] ap_phi_reg_pp0_iter4_buf_cop_V_0_reg_256;
wire   [7:0] ap_phi_reg_pp0_iter0_buf_cop_V_3_reg_267;
reg   [7:0] ap_phi_reg_pp0_iter1_buf_cop_V_3_reg_267;
reg   [7:0] ap_phi_reg_pp0_iter2_buf_cop_V_3_reg_267;
reg   [7:0] ap_phi_reg_pp0_iter3_buf_cop_V_3_reg_267;
reg   [7:0] ap_phi_reg_pp0_iter4_buf_cop_V_3_reg_267;
wire   [7:0] ap_phi_reg_pp0_iter0_buf_cop_V_1_0_reg_278;
reg   [7:0] ap_phi_reg_pp0_iter1_buf_cop_V_1_0_reg_278;
reg   [7:0] ap_phi_reg_pp0_iter2_buf_cop_V_1_0_reg_278;
reg   [7:0] ap_phi_reg_pp0_iter3_buf_cop_V_1_0_reg_278;
reg   [7:0] ap_phi_reg_pp0_iter4_buf_cop_V_1_0_reg_278;
reg   [7:0] ap_phi_reg_pp0_iter5_buf_cop_V_1_0_reg_278;
wire   [9:0] buf_V_addr_gep_fu_205_p3;
wire   [9:0] buf_V_1_addr_gep_fu_212_p3;
wire   [9:0] buf_V_2_addr_gep_fu_219_p3;
reg   [12:0] col_V_fu_80;
wire   [12:0] col_V_2_fu_355_p2;
wire    ap_loop_init;
reg   [12:0] ap_sig_allocacmp_col_V_1;
reg   [7:0] max_V_fu_84;
reg   [7:0] max_V_1_fu_88;
reg   [7:0] ret_fu_92;
reg   [7:0] max_V_2_fu_96;
reg   [7:0] ret_1_fu_100;
reg   [7:0] max_V_5_fu_104;
reg    ap_block_pp0_stage0_01001;
wire   [15:0] zext_ln1027_fu_345_p1;
wire   [0:0] icmp_ln1027_2_fu_425_p2;
wire   [7:0] max_V_11_fu_431_p3;
wire   [0:0] icmp_ln1027_3_fu_439_p2;
wire   [0:0] icmp_ln1027_4_fu_469_p2;
wire   [7:0] max_V_14_fu_474_p3;
wire   [0:0] icmp_ln1027_5_fu_481_p2;
wire   [7:0] max_V_17_fu_517_p3;
wire   [0:0] icmp_ln1027_7_fu_522_p2;
wire   [7:0] max_V_18_fu_528_p3;
wire   [0:0] icmp_ln1027_8_fu_536_p2;
wire   [0:0] icmp_ln1027_9_fu_559_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
reg    ap_condition_301;
reg    ap_condition_583;
reg    ap_condition_587;
reg    ap_condition_590;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_done_reg = 1'b0;
end

color_analysis_xfExtractPixels_1_1_0_s src_buf_temp_copy_extract_V_0_xfExtractPixels_1_1_0_s_fu_289(
    .ap_ready(src_buf_temp_copy_extract_V_0_xfExtractPixels_1_1_0_s_fu_289_ap_ready),
    .p_read1(ap_phi_reg_pp0_iter4_buf_cop_V_0_reg_256),
    .ap_return(src_buf_temp_copy_extract_V_0_xfExtractPixels_1_1_0_s_fu_289_ap_return)
);

color_analysis_xfExtractPixels_1_1_0_s src_buf_temp_copy_extract_V_0_4_xfExtractPixels_1_1_0_s_fu_295(
    .ap_ready(src_buf_temp_copy_extract_V_0_4_xfExtractPixels_1_1_0_s_fu_295_ap_ready),
    .p_read1(ap_phi_reg_pp0_iter4_buf_cop_V_3_reg_267),
    .ap_return(src_buf_temp_copy_extract_V_0_4_xfExtractPixels_1_1_0_s_fu_295_ap_return)
);

color_analysis_xfExtractPixels_1_1_0_s src_buf_temp_copy_extract_V_0_3_xfExtractPixels_1_1_0_s_fu_301(
    .ap_ready(src_buf_temp_copy_extract_V_0_3_xfExtractPixels_1_1_0_s_fu_301_ap_ready),
    .p_read1(ap_phi_reg_pp0_iter5_buf_cop_V_1_0_reg_278),
    .ap_return(src_buf_temp_copy_extract_V_0_3_xfExtractPixels_1_1_0_s_fu_301_ap_return)
);

color_analysis_mux_32_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
mux_32_8_1_1_U155(
    .din0(buf_V_q0),
    .din1(buf_V_1_q0),
    .din2(buf_V_2_q0),
    .din3(p_cast1),
    .dout(buf_cop_V_fu_386_p5)
);

color_analysis_mux_32_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
mux_32_8_1_1_U156(
    .din0(buf_V_q0),
    .din1(buf_V_1_q0),
    .din2(buf_V_2_q0),
    .din3(p_cast2),
    .dout(buf_cop_V_1_fu_397_p5)
);

color_analysis_mux_32_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
mux_32_8_1_1_U157(
    .din0(buf_V_q0),
    .din1(buf_V_1_q0),
    .din2(buf_V_2_q0),
    .din3(p_cast),
    .dout(buf_cop_V_2_fu_408_p5)
);

color_analysis_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter6_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter6_stage0)) begin
            ap_enable_reg_pp0_iter7 <= 1'b0;
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_301)) begin
        if (((icmp_ln1027_fu_349_p2 == 1'd0) & (icmp_ln1027_1_fu_361_p2 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_buf_cop_V_0_reg_256 <= 8'd255;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_buf_cop_V_0_reg_256 <= ap_phi_reg_pp0_iter0_buf_cop_V_0_reg_256;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_301)) begin
        if (((icmp_ln1027_fu_349_p2 == 1'd0) & (icmp_ln1027_1_fu_361_p2 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_buf_cop_V_1_0_reg_278 <= 8'd255;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_buf_cop_V_1_0_reg_278 <= ap_phi_reg_pp0_iter0_buf_cop_V_1_0_reg_278;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_301)) begin
        if (((icmp_ln1027_fu_349_p2 == 1'd0) & (icmp_ln1027_1_fu_361_p2 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_buf_cop_V_3_reg_267 <= 8'd255;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_buf_cop_V_3_reg_267 <= ap_phi_reg_pp0_iter0_buf_cop_V_3_reg_267;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        if (((icmp_ln1027_1_reg_648_pp0_iter2_reg == 1'd1) & (icmp_ln1027_reg_644_pp0_iter2_reg == 1'd0))) begin
            ap_phi_reg_pp0_iter4_buf_cop_V_0_reg_256 <= buf_cop_V_fu_386_p5;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter4_buf_cop_V_0_reg_256 <= ap_phi_reg_pp0_iter3_buf_cop_V_0_reg_256;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        if (((icmp_ln1027_1_reg_648_pp0_iter2_reg == 1'd1) & (icmp_ln1027_reg_644_pp0_iter2_reg == 1'd0))) begin
            ap_phi_reg_pp0_iter4_buf_cop_V_1_0_reg_278 <= buf_cop_V_1_fu_397_p5;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter4_buf_cop_V_1_0_reg_278 <= ap_phi_reg_pp0_iter3_buf_cop_V_1_0_reg_278;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        if (((icmp_ln1027_1_reg_648_pp0_iter2_reg == 1'd1) & (icmp_ln1027_reg_644_pp0_iter2_reg == 1'd0))) begin
            ap_phi_reg_pp0_iter4_buf_cop_V_3_reg_267 <= buf_cop_V_2_fu_408_p5;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter4_buf_cop_V_3_reg_267 <= ap_phi_reg_pp0_iter3_buf_cop_V_3_reg_267;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln1027_fu_349_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            col_V_fu_80 <= col_V_2_fu_355_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            col_V_fu_80 <= 13'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            max_V_1_fu_88 <= 8'd255;
        end else if (((ap_enable_reg_pp0_iter5 == 1'b1) & (icmp_ln1027_reg_644_pp0_iter4_reg == 1'd0))) begin
            max_V_1_fu_88 <= ret_1_fu_100;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            max_V_2_fu_96 <= 8'd255;
        end else if (((ap_enable_reg_pp0_iter4 == 1'b1) & (icmp_ln1027_reg_644_pp0_iter3_reg == 1'd0))) begin
            max_V_2_fu_96 <= src_buf_temp_copy_extract_V_0_xfExtractPixels_1_1_0_s_fu_289_ap_return;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            max_V_5_fu_104 <= 8'd255;
        end else if (((ap_enable_reg_pp0_iter6 == 1'b1) & (icmp_ln1027_reg_644_pp0_iter5_reg == 1'd0))) begin
            max_V_5_fu_104 <= src_buf_temp_copy_extract_V_0_4_reg_693_pp0_iter5_reg;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            max_V_fu_84 <= 8'd255;
        end else if (((ap_enable_reg_pp0_iter4 == 1'b1) & (icmp_ln1027_reg_644_pp0_iter3_reg == 1'd0))) begin
            max_V_fu_84 <= max_V_2_fu_96;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ret_1_fu_100 <= 8'd255;
        end else if (((ap_enable_reg_pp0_iter5 == 1'b1) & (icmp_ln1027_reg_644_pp0_iter4_reg == 1'd0))) begin
            ret_1_fu_100 <= src_buf_temp_copy_extract_V_0_3_xfExtractPixels_1_1_0_s_fu_301_ap_return;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ret_fu_92 <= 8'd255;
        end else if (((ap_enable_reg_pp0_iter6 == 1'b1) & (icmp_ln1027_reg_644_pp0_iter5_reg == 1'd0))) begin
            ret_fu_92 <= max_V_5_fu_104;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        col_V_1_reg_638 <= ap_sig_allocacmp_col_V_1;
        icmp_ln1027_1_reg_648_pp0_iter1_reg <= icmp_ln1027_1_reg_648;
        icmp_ln1027_reg_644 <= icmp_ln1027_fu_349_p2;
        icmp_ln1027_reg_644_pp0_iter1_reg <= icmp_ln1027_reg_644;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        icmp_ln1027_1_reg_648_pp0_iter2_reg <= icmp_ln1027_1_reg_648_pp0_iter1_reg;
        icmp_ln1027_reg_644_pp0_iter2_reg <= icmp_ln1027_reg_644_pp0_iter1_reg;
        icmp_ln1027_reg_644_pp0_iter3_reg <= icmp_ln1027_reg_644_pp0_iter2_reg;
        icmp_ln1027_reg_644_pp0_iter4_reg <= icmp_ln1027_reg_644_pp0_iter3_reg;
        icmp_ln1027_reg_644_pp0_iter5_reg <= icmp_ln1027_reg_644_pp0_iter4_reg;
        icmp_ln1031_reg_659_pp0_iter2_reg <= icmp_ln1031_reg_659;
        icmp_ln1031_reg_659_pp0_iter3_reg <= icmp_ln1031_reg_659_pp0_iter2_reg;
        icmp_ln1031_reg_659_pp0_iter4_reg <= icmp_ln1031_reg_659_pp0_iter3_reg;
        icmp_ln1031_reg_659_pp0_iter5_reg <= icmp_ln1031_reg_659_pp0_iter4_reg;
        icmp_ln1031_reg_659_pp0_iter6_reg <= icmp_ln1031_reg_659_pp0_iter5_reg;
        src_buf_temp_copy_extract_V_0_4_reg_693_pp0_iter5_reg <= src_buf_temp_copy_extract_V_0_4_reg_693;
        src_buf_temp_copy_extract_V_0_4_reg_693_pp0_iter6_reg <= src_buf_temp_copy_extract_V_0_4_reg_693_pp0_iter5_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter2_buf_cop_V_0_reg_256 <= ap_phi_reg_pp0_iter1_buf_cop_V_0_reg_256;
        ap_phi_reg_pp0_iter2_buf_cop_V_1_0_reg_278 <= ap_phi_reg_pp0_iter1_buf_cop_V_1_0_reg_278;
        ap_phi_reg_pp0_iter2_buf_cop_V_3_reg_267 <= ap_phi_reg_pp0_iter1_buf_cop_V_3_reg_267;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        ap_phi_reg_pp0_iter3_buf_cop_V_0_reg_256 <= ap_phi_reg_pp0_iter2_buf_cop_V_0_reg_256;
        ap_phi_reg_pp0_iter3_buf_cop_V_1_0_reg_278 <= ap_phi_reg_pp0_iter2_buf_cop_V_1_0_reg_278;
        ap_phi_reg_pp0_iter3_buf_cop_V_3_reg_267 <= ap_phi_reg_pp0_iter2_buf_cop_V_3_reg_267;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        ap_phi_reg_pp0_iter5_buf_cop_V_1_0_reg_278 <= ap_phi_reg_pp0_iter4_buf_cop_V_1_0_reg_278;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1027_reg_644 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_i99_i_reg_652[12 : 0] <= conv_i99_i_fu_372_p1[12 : 0];
        icmp_ln1031_reg_659 <= icmp_ln1031_fu_381_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1027_fu_349_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln1027_1_reg_648 <= icmp_ln1027_1_fu_361_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1027_reg_644_pp0_iter4_reg == 1'd0))) begin
        icmp_ln1027_6_reg_716 <= icmp_ln1027_6_fu_495_p2;
        max_V_15_reg_711 <= max_V_15_fu_487_p3;
        src_buf_temp_copy_extract_V_0_3_reg_706 <= src_buf_temp_copy_extract_V_0_3_xfExtractPixels_1_1_0_s_fu_301_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1027_reg_644_pp0_iter3_reg == 1'd0))) begin
        max_V_13_reg_700 <= max_V_13_fu_445_p3;
        src_buf_temp_copy_extract_V_0_4_reg_693 <= src_buf_temp_copy_extract_V_0_4_xfExtractPixels_1_1_0_s_fu_295_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1027_reg_644_pp0_iter5_reg == 1'd0))) begin
        max_V_20_reg_721 <= max_V_20_fu_542_p3;
    end
end

always @ (*) begin
    if (((icmp_ln1027_fu_349_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter6 == 1'b1) & (icmp_ln1027_reg_644_pp0_iter5_reg == 1'd1))) begin
        ap_condition_exit_pp0_iter6_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter6_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter6_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_col_V_1 = 13'd0;
    end else begin
        ap_sig_allocacmp_col_V_1 = col_V_fu_80;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_583)) begin
        if ((cmp_i_i142_i == 1'd1)) begin
            buf_V_1_address1 = buf_V_1_addr_gep_fu_212_p3;
        end else if ((cmp_i_i142_i_read_reg_619 == 1'd0)) begin
            buf_V_1_address1 = conv_i99_i_fu_372_p1;
        end else begin
            buf_V_1_address1 = 'bx;
        end
    end else begin
        buf_V_1_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        buf_V_1_ce0 = 1'b1;
    end else begin
        buf_V_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (cmp_i_i142_i == 1'd1) & (icmp_ln1027_1_reg_648 == 1'd1) & (icmp_ln1027_reg_644 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (p_cast_read_reg_623 == 2'd1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (cmp_i_i142_i_read_reg_619 == 1'd0) & (icmp_ln1027_1_reg_648 == 1'd1) & (icmp_ln1027_reg_644 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (p_cast_read_reg_623 == 2'd1)))) begin
        buf_V_1_ce1 = 1'b1;
    end else begin
        buf_V_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_583)) begin
        if ((cmp_i_i142_i == 1'd1)) begin
            buf_V_1_d1 = img_2_data165_dout;
        end else if ((cmp_i_i142_i_read_reg_619 == 1'd0)) begin
            buf_V_1_d1 = 8'd255;
        end else begin
            buf_V_1_d1 = 'bx;
        end
    end else begin
        buf_V_1_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (cmp_i_i142_i == 1'd1) & (icmp_ln1027_1_reg_648 == 1'd1) & (icmp_ln1027_reg_644 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (p_cast_read_reg_623 == 2'd1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (cmp_i_i142_i_read_reg_619 == 1'd0) & (icmp_ln1027_1_reg_648 == 1'd1) & (icmp_ln1027_reg_644 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (p_cast_read_reg_623 == 2'd1)))) begin
        buf_V_1_we1 = 1'b1;
    end else begin
        buf_V_1_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_587)) begin
        if ((cmp_i_i142_i == 1'd1)) begin
            buf_V_2_address1 = buf_V_2_addr_gep_fu_219_p3;
        end else if ((cmp_i_i142_i_read_reg_619 == 1'd0)) begin
            buf_V_2_address1 = conv_i99_i_fu_372_p1;
        end else begin
            buf_V_2_address1 = 'bx;
        end
    end else begin
        buf_V_2_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        buf_V_2_ce0 = 1'b1;
    end else begin
        buf_V_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((~(p_cast_read_reg_623 == 2'd0) & ~(p_cast_read_reg_623 == 2'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (cmp_i_i142_i == 1'd1) & (icmp_ln1027_1_reg_648 == 1'd1) & (icmp_ln1027_reg_644 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | (~(p_cast_read_reg_623 == 2'd0) & ~(p_cast_read_reg_623 == 2'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (cmp_i_i142_i_read_reg_619 == 1'd0) & (icmp_ln1027_1_reg_648 == 1'd1) & (icmp_ln1027_reg_644 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        buf_V_2_ce1 = 1'b1;
    end else begin
        buf_V_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_587)) begin
        if ((cmp_i_i142_i == 1'd1)) begin
            buf_V_2_d1 = img_2_data165_dout;
        end else if ((cmp_i_i142_i_read_reg_619 == 1'd0)) begin
            buf_V_2_d1 = 8'd255;
        end else begin
            buf_V_2_d1 = 'bx;
        end
    end else begin
        buf_V_2_d1 = 'bx;
    end
end

always @ (*) begin
    if (((~(p_cast_read_reg_623 == 2'd0) & ~(p_cast_read_reg_623 == 2'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (cmp_i_i142_i == 1'd1) & (icmp_ln1027_1_reg_648 == 1'd1) & (icmp_ln1027_reg_644 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | (~(p_cast_read_reg_623 == 2'd0) & ~(p_cast_read_reg_623 == 2'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (cmp_i_i142_i_read_reg_619 == 1'd0) & (icmp_ln1027_1_reg_648 == 1'd1) & (icmp_ln1027_reg_644 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        buf_V_2_we1 = 1'b1;
    end else begin
        buf_V_2_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_590)) begin
        if ((cmp_i_i142_i == 1'd1)) begin
            buf_V_address1 = buf_V_addr_gep_fu_205_p3;
        end else if ((cmp_i_i142_i_read_reg_619 == 1'd0)) begin
            buf_V_address1 = conv_i99_i_fu_372_p1;
        end else begin
            buf_V_address1 = 'bx;
        end
    end else begin
        buf_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        buf_V_ce0 = 1'b1;
    end else begin
        buf_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (cmp_i_i142_i == 1'd1) & (icmp_ln1027_1_reg_648 == 1'd1) & (icmp_ln1027_reg_644 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (p_cast_read_reg_623 == 2'd0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (cmp_i_i142_i_read_reg_619 == 1'd0) & (icmp_ln1027_1_reg_648 == 1'd1) & (icmp_ln1027_reg_644 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (p_cast_read_reg_623 == 2'd0)))) begin
        buf_V_ce1 = 1'b1;
    end else begin
        buf_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_590)) begin
        if ((cmp_i_i142_i == 1'd1)) begin
            buf_V_d1 = img_2_data165_dout;
        end else if ((cmp_i_i142_i_read_reg_619 == 1'd0)) begin
            buf_V_d1 = 8'd255;
        end else begin
            buf_V_d1 = 'bx;
        end
    end else begin
        buf_V_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (cmp_i_i142_i == 1'd1) & (icmp_ln1027_1_reg_648 == 1'd1) & (icmp_ln1027_reg_644 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (p_cast_read_reg_623 == 2'd0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (cmp_i_i142_i_read_reg_619 == 1'd0) & (icmp_ln1027_1_reg_648 == 1'd1) & (icmp_ln1027_reg_644 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (p_cast_read_reg_623 == 2'd0)))) begin
        buf_V_we1 = 1'b1;
    end else begin
        buf_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_predicate_op61_read_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        img_2_data165_blk_n = img_2_data165_empty_n;
    end else begin
        img_2_data165_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op61_read_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        img_2_data165_read = 1'b1;
    end else begin
        img_2_data165_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln1031_reg_659_pp0_iter6_reg == 1'd0) & (ap_enable_reg_pp0_iter7 == 1'b1))) begin
        img_3_data166_blk_n = img_3_data166_full_n;
    end else begin
        img_3_data166_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1031_reg_659_pp0_iter6_reg == 1'd0) & (ap_enable_reg_pp0_iter7 == 1'b1))) begin
        img_3_data166_write = 1'b1;
    end else begin
        img_3_data166_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((icmp_ln1031_reg_659_pp0_iter6_reg == 1'd0) & (img_3_data166_full_n == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b1)) | ((ap_predicate_op61_read_state2 == 1'b1) & (img_2_data165_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((icmp_ln1031_reg_659_pp0_iter6_reg == 1'd0) & (img_3_data166_full_n == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b1)) | ((ap_predicate_op61_read_state2 == 1'b1) & (img_2_data165_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((icmp_ln1031_reg_659_pp0_iter6_reg == 1'd0) & (img_3_data166_full_n == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b1)) | ((ap_predicate_op61_read_state2 == 1'b1) & (img_2_data165_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state2_pp0_stage0_iter1 = ((ap_predicate_op61_read_state2 == 1'b1) & (img_2_data165_empty_n == 1'b0));
end

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state8_pp0_stage0_iter7 = ((icmp_ln1031_reg_659_pp0_iter6_reg == 1'd0) & (img_3_data166_full_n == 1'b0));
end

always @ (*) begin
    ap_condition_301 = ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_condition_583 = ((1'b0 == ap_block_pp0_stage0) & (icmp_ln1027_1_reg_648 == 1'd1) & (icmp_ln1027_reg_644 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (p_cast_read_reg_623 == 2'd1));
end

always @ (*) begin
    ap_condition_587 = (~(p_cast_read_reg_623 == 2'd0) & ~(p_cast_read_reg_623 == 2'd1) & (1'b0 == ap_block_pp0_stage0) & (icmp_ln1027_1_reg_648 == 1'd1) & (icmp_ln1027_reg_644 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_condition_590 = ((1'b0 == ap_block_pp0_stage0) & (icmp_ln1027_1_reg_648 == 1'd1) & (icmp_ln1027_reg_644 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (p_cast_read_reg_623 == 2'd0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign ap_phi_reg_pp0_iter0_buf_cop_V_0_reg_256 = 'bx;

assign ap_phi_reg_pp0_iter0_buf_cop_V_1_0_reg_278 = 'bx;

assign ap_phi_reg_pp0_iter0_buf_cop_V_3_reg_267 = 'bx;

always @ (*) begin
    ap_predicate_op61_read_state2 = ((cmp_i_i142_i == 1'd1) & (icmp_ln1027_1_reg_648 == 1'd1) & (icmp_ln1027_reg_644 == 1'd0));
end

assign buf_V_1_addr_gep_fu_212_p3 = conv_i99_i_fu_372_p1;

assign buf_V_1_address0 = conv_i99_i_reg_652;

assign buf_V_2_addr_gep_fu_219_p3 = conv_i99_i_fu_372_p1;

assign buf_V_2_address0 = conv_i99_i_reg_652;

assign buf_V_addr_gep_fu_205_p3 = conv_i99_i_fu_372_p1;

assign buf_V_address0 = conv_i99_i_reg_652;

assign cmp_i_i142_i_read_reg_619 = cmp_i_i142_i;

assign col_V_2_fu_355_p2 = (ap_sig_allocacmp_col_V_1 + 13'd1);

assign conv_i99_i_fu_372_p1 = col_V_1_reg_638;

assign icmp_ln1027_1_fu_361_p2 = ((zext_ln1027_fu_345_p1 < img_width) ? 1'b1 : 1'b0);

assign icmp_ln1027_2_fu_425_p2 = ((max_V_fu_84 > max_V_2_fu_96) ? 1'b1 : 1'b0);

assign icmp_ln1027_3_fu_439_p2 = ((max_V_11_fu_431_p3 > src_buf_temp_copy_extract_V_0_xfExtractPixels_1_1_0_s_fu_289_ap_return) ? 1'b1 : 1'b0);

assign icmp_ln1027_4_fu_469_p2 = ((max_V_13_reg_700 > max_V_1_fu_88) ? 1'b1 : 1'b0);

assign icmp_ln1027_5_fu_481_p2 = ((max_V_14_fu_474_p3 > ret_1_fu_100) ? 1'b1 : 1'b0);

assign icmp_ln1027_6_fu_495_p2 = ((max_V_15_fu_487_p3 > src_buf_temp_copy_extract_V_0_3_xfExtractPixels_1_1_0_s_fu_301_ap_return) ? 1'b1 : 1'b0);

assign icmp_ln1027_7_fu_522_p2 = ((max_V_17_fu_517_p3 > ret_fu_92) ? 1'b1 : 1'b0);

assign icmp_ln1027_8_fu_536_p2 = ((max_V_18_fu_528_p3 > max_V_5_fu_104) ? 1'b1 : 1'b0);

assign icmp_ln1027_9_fu_559_p2 = ((max_V_20_reg_721 > src_buf_temp_copy_extract_V_0_4_reg_693_pp0_iter6_reg) ? 1'b1 : 1'b0);

assign icmp_ln1027_fu_349_p2 = ((zext_ln1027_fu_345_p1 > img_width) ? 1'b1 : 1'b0);

assign icmp_ln1031_fu_381_p2 = ((col_V_1_reg_638 == 13'd0) ? 1'b1 : 1'b0);

assign img_3_data166_din = ((icmp_ln1027_9_fu_559_p2[0:0] == 1'b1) ? src_buf_temp_copy_extract_V_0_4_reg_693_pp0_iter6_reg : max_V_20_reg_721);

assign max_V_11_fu_431_p3 = ((icmp_ln1027_2_fu_425_p2[0:0] == 1'b1) ? max_V_2_fu_96 : max_V_fu_84);

assign max_V_13_fu_445_p3 = ((icmp_ln1027_3_fu_439_p2[0:0] == 1'b1) ? src_buf_temp_copy_extract_V_0_xfExtractPixels_1_1_0_s_fu_289_ap_return : max_V_11_fu_431_p3);

assign max_V_14_fu_474_p3 = ((icmp_ln1027_4_fu_469_p2[0:0] == 1'b1) ? max_V_1_fu_88 : max_V_13_reg_700);

assign max_V_15_fu_487_p3 = ((icmp_ln1027_5_fu_481_p2[0:0] == 1'b1) ? ret_1_fu_100 : max_V_14_fu_474_p3);

assign max_V_17_fu_517_p3 = ((icmp_ln1027_6_reg_716[0:0] == 1'b1) ? src_buf_temp_copy_extract_V_0_3_reg_706 : max_V_15_reg_711);

assign max_V_18_fu_528_p3 = ((icmp_ln1027_7_fu_522_p2[0:0] == 1'b1) ? ret_fu_92 : max_V_17_fu_517_p3);

assign max_V_20_fu_542_p3 = ((icmp_ln1027_8_fu_536_p2[0:0] == 1'b1) ? max_V_5_fu_104 : max_V_18_fu_528_p3);

assign p_cast_read_reg_623 = p_cast;

assign zext_ln1027_fu_345_p1 = ap_sig_allocacmp_col_V_1;

always @ (posedge ap_clk) begin
    conv_i99_i_reg_652[63:13] <= 51'b000000000000000000000000000000000000000000000000000;
end

endmodule //color_analysis_xferode_600_1024_1_0_1_2_2_0_1025_3_3_Pipeline_Col_Loop
