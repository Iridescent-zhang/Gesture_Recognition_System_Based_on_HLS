// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="color_analysis_color_analysis,hls_ip_2022_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=7.268000,HLS_SYN_LAT=-1,HLS_SYN_TPT=-1,HLS_SYN_MEM=12,HLS_SYN_DSP=0,HLS_SYN_FF=8486,HLS_SYN_LUT=11064,HLS_VERSION=2022_2}" *)

module color_analysis (
        s_axi_CONTROL_BUS_AWVALID,
        s_axi_CONTROL_BUS_AWREADY,
        s_axi_CONTROL_BUS_AWADDR,
        s_axi_CONTROL_BUS_WVALID,
        s_axi_CONTROL_BUS_WREADY,
        s_axi_CONTROL_BUS_WDATA,
        s_axi_CONTROL_BUS_WSTRB,
        s_axi_CONTROL_BUS_ARVALID,
        s_axi_CONTROL_BUS_ARREADY,
        s_axi_CONTROL_BUS_ARADDR,
        s_axi_CONTROL_BUS_RVALID,
        s_axi_CONTROL_BUS_RREADY,
        s_axi_CONTROL_BUS_RDATA,
        s_axi_CONTROL_BUS_RRESP,
        s_axi_CONTROL_BUS_BVALID,
        s_axi_CONTROL_BUS_BREADY,
        s_axi_CONTROL_BUS_BRESP,
        ap_clk,
        ap_rst_n,
        interrupt,
        INPUT_STREAM_TDATA,
        INPUT_STREAM_TKEEP,
        INPUT_STREAM_TSTRB,
        INPUT_STREAM_TUSER,
        INPUT_STREAM_TLAST,
        INPUT_STREAM_TID,
        INPUT_STREAM_TDEST,
        OUTPUT_STREAM_VIDEO_TDATA,
        OUTPUT_STREAM_VIDEO_TKEEP,
        OUTPUT_STREAM_VIDEO_TSTRB,
        OUTPUT_STREAM_VIDEO_TUSER,
        OUTPUT_STREAM_VIDEO_TLAST,
        OUTPUT_STREAM_VIDEO_TID,
        OUTPUT_STREAM_VIDEO_TDEST,
        OUTPUT_STREAM_DIP_TDATA,
        OUTPUT_STREAM_DIP_TKEEP,
        OUTPUT_STREAM_DIP_TSTRB,
        OUTPUT_STREAM_DIP_TUSER,
        OUTPUT_STREAM_DIP_TLAST,
        OUTPUT_STREAM_DIP_TID,
        OUTPUT_STREAM_DIP_TDEST,
        INPUT_STREAM_TVALID,
        INPUT_STREAM_TREADY,
        OUTPUT_STREAM_VIDEO_TVALID,
        OUTPUT_STREAM_VIDEO_TREADY,
        OUTPUT_STREAM_DIP_TVALID,
        OUTPUT_STREAM_DIP_TREADY
);

parameter    C_S_AXI_CONTROL_BUS_DATA_WIDTH = 32;
parameter    C_S_AXI_CONTROL_BUS_ADDR_WIDTH = 6;
parameter    C_S_AXI_DATA_WIDTH = 32;

parameter C_S_AXI_CONTROL_BUS_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);

input   s_axi_CONTROL_BUS_AWVALID;
output   s_axi_CONTROL_BUS_AWREADY;
input  [C_S_AXI_CONTROL_BUS_ADDR_WIDTH - 1:0] s_axi_CONTROL_BUS_AWADDR;
input   s_axi_CONTROL_BUS_WVALID;
output   s_axi_CONTROL_BUS_WREADY;
input  [C_S_AXI_CONTROL_BUS_DATA_WIDTH - 1:0] s_axi_CONTROL_BUS_WDATA;
input  [C_S_AXI_CONTROL_BUS_WSTRB_WIDTH - 1:0] s_axi_CONTROL_BUS_WSTRB;
input   s_axi_CONTROL_BUS_ARVALID;
output   s_axi_CONTROL_BUS_ARREADY;
input  [C_S_AXI_CONTROL_BUS_ADDR_WIDTH - 1:0] s_axi_CONTROL_BUS_ARADDR;
output   s_axi_CONTROL_BUS_RVALID;
input   s_axi_CONTROL_BUS_RREADY;
output  [C_S_AXI_CONTROL_BUS_DATA_WIDTH - 1:0] s_axi_CONTROL_BUS_RDATA;
output  [1:0] s_axi_CONTROL_BUS_RRESP;
output   s_axi_CONTROL_BUS_BVALID;
input   s_axi_CONTROL_BUS_BREADY;
output  [1:0] s_axi_CONTROL_BUS_BRESP;
input   ap_clk;
input   ap_rst_n;
output   interrupt;
input  [23:0] INPUT_STREAM_TDATA;
input  [2:0] INPUT_STREAM_TKEEP;
input  [2:0] INPUT_STREAM_TSTRB;
input  [0:0] INPUT_STREAM_TUSER;
input  [0:0] INPUT_STREAM_TLAST;
input  [0:0] INPUT_STREAM_TID;
input  [0:0] INPUT_STREAM_TDEST;
output  [23:0] OUTPUT_STREAM_VIDEO_TDATA;
output  [2:0] OUTPUT_STREAM_VIDEO_TKEEP;
output  [2:0] OUTPUT_STREAM_VIDEO_TSTRB;
output  [0:0] OUTPUT_STREAM_VIDEO_TUSER;
output  [0:0] OUTPUT_STREAM_VIDEO_TLAST;
output  [0:0] OUTPUT_STREAM_VIDEO_TID;
output  [0:0] OUTPUT_STREAM_VIDEO_TDEST;
output  [23:0] OUTPUT_STREAM_DIP_TDATA;
output  [2:0] OUTPUT_STREAM_DIP_TKEEP;
output  [2:0] OUTPUT_STREAM_DIP_TSTRB;
output  [0:0] OUTPUT_STREAM_DIP_TUSER;
output  [0:0] OUTPUT_STREAM_DIP_TLAST;
output  [0:0] OUTPUT_STREAM_DIP_TID;
output  [0:0] OUTPUT_STREAM_DIP_TDEST;
input   INPUT_STREAM_TVALID;
output   INPUT_STREAM_TREADY;
output   OUTPUT_STREAM_VIDEO_TVALID;
input   OUTPUT_STREAM_VIDEO_TREADY;
output   OUTPUT_STREAM_DIP_TVALID;
input   OUTPUT_STREAM_DIP_TREADY;

 reg    ap_rst_n_inv;
wire   [31:0] rows;
wire   [31:0] cols;
wire   [31:0] cb_lower;
wire   [31:0] cb_upper;
wire   [31:0] cr_lower;
wire   [31:0] cr_upper;
wire    ap_start;
wire    ap_ready;
wire    ap_done;
wire    ap_idle;
wire    entry_proc_U0_ap_start;
wire    entry_proc_U0_ap_done;
wire    entry_proc_U0_ap_continue;
wire    entry_proc_U0_ap_idle;
wire    entry_proc_U0_ap_ready;
wire   [31:0] entry_proc_U0_cb_lower_c_din;
wire    entry_proc_U0_cb_lower_c_write;
wire   [31:0] entry_proc_U0_cb_upper_c_din;
wire    entry_proc_U0_cb_upper_c_write;
wire   [31:0] entry_proc_U0_cr_lower_c_din;
wire    entry_proc_U0_cr_lower_c_write;
wire   [31:0] entry_proc_U0_cr_upper_c_din;
wire    entry_proc_U0_cr_upper_c_write;
wire    Block_entry1_proc_U0_ap_start;
wire    Block_entry1_proc_U0_ap_done;
wire    Block_entry1_proc_U0_ap_continue;
wire    Block_entry1_proc_U0_ap_idle;
wire    Block_entry1_proc_U0_ap_ready;
wire   [31:0] Block_entry1_proc_U0_ap_return_0;
wire   [31:0] Block_entry1_proc_U0_ap_return_1;
wire   [31:0] Block_entry1_proc_U0_ap_return_2;
wire   [31:0] Block_entry1_proc_U0_ap_return_3;
wire   [31:0] Block_entry1_proc_U0_ap_return_4;
wire   [31:0] Block_entry1_proc_U0_ap_return_5;
wire   [31:0] Block_entry1_proc_U0_ap_return_6;
wire   [31:0] Block_entry1_proc_U0_ap_return_7;
wire   [31:0] Block_entry1_proc_U0_ap_return_8;
wire   [31:0] Block_entry1_proc_U0_ap_return_9;
wire   [31:0] Block_entry1_proc_U0_ap_return_10;
wire   [31:0] Block_entry1_proc_U0_ap_return_11;
wire   [31:0] Block_entry1_proc_U0_ap_return_12;
wire   [31:0] Block_entry1_proc_U0_ap_return_13;
wire   [31:0] Block_entry1_proc_U0_ap_return_14;
wire   [31:0] Block_entry1_proc_U0_ap_return_15;
wire   [31:0] Block_entry1_proc_U0_ap_return_16;
wire   [31:0] Block_entry1_proc_U0_ap_return_17;
wire    ap_channel_done_img_0_cols_c24_channel;
wire    img_0_cols_c24_channel_full_n;
reg    ap_sync_reg_channel_write_img_0_cols_c24_channel;
wire    ap_sync_channel_write_img_0_cols_c24_channel;
wire    ap_channel_done_img_0_rows_c23_channel;
wire    img_0_rows_c23_channel_full_n;
reg    ap_sync_reg_channel_write_img_0_rows_c23_channel;
wire    ap_sync_channel_write_img_0_rows_c23_channel;
wire    ap_channel_done_img_6_cols_channel;
wire    img_6_cols_channel_full_n;
reg    ap_sync_reg_channel_write_img_6_cols_channel;
wire    ap_sync_channel_write_img_6_cols_channel;
wire    ap_channel_done_img_6_rows_channel;
wire    img_6_rows_channel_full_n;
reg    ap_sync_reg_channel_write_img_6_rows_channel;
wire    ap_sync_channel_write_img_6_rows_channel;
wire    ap_channel_done_img_5_cols_channel;
wire    img_5_cols_channel_full_n;
reg    ap_sync_reg_channel_write_img_5_cols_channel;
wire    ap_sync_channel_write_img_5_cols_channel;
wire    ap_channel_done_img_5_rows_channel;
wire    img_5_rows_channel_full_n;
reg    ap_sync_reg_channel_write_img_5_rows_channel;
wire    ap_sync_channel_write_img_5_rows_channel;
wire    ap_channel_done_img_4b_cols_channel;
wire    img_4b_cols_channel_full_n;
reg    ap_sync_reg_channel_write_img_4b_cols_channel;
wire    ap_sync_channel_write_img_4b_cols_channel;
wire    ap_channel_done_img_4b_rows_channel;
wire    img_4b_rows_channel_full_n;
reg    ap_sync_reg_channel_write_img_4b_rows_channel;
wire    ap_sync_channel_write_img_4b_rows_channel;
wire    ap_channel_done_img_4a_cols_channel;
wire    img_4a_cols_channel_full_n;
reg    ap_sync_reg_channel_write_img_4a_cols_channel;
wire    ap_sync_channel_write_img_4a_cols_channel;
wire    ap_channel_done_img_4a_rows_channel;
wire    img_4a_rows_channel_full_n;
reg    ap_sync_reg_channel_write_img_4a_rows_channel;
wire    ap_sync_channel_write_img_4a_rows_channel;
wire    ap_channel_done_img_4_cols_channel;
wire    img_4_cols_channel_full_n;
reg    ap_sync_reg_channel_write_img_4_cols_channel;
wire    ap_sync_channel_write_img_4_cols_channel;
wire    ap_channel_done_img_4_rows_channel;
wire    img_4_rows_channel_full_n;
reg    ap_sync_reg_channel_write_img_4_rows_channel;
wire    ap_sync_channel_write_img_4_rows_channel;
wire    ap_channel_done_img_3_cols_channel;
wire    img_3_cols_channel_full_n;
reg    ap_sync_reg_channel_write_img_3_cols_channel;
wire    ap_sync_channel_write_img_3_cols_channel;
wire    ap_channel_done_img_3_rows_channel;
wire    img_3_rows_channel_full_n;
reg    ap_sync_reg_channel_write_img_3_rows_channel;
wire    ap_sync_channel_write_img_3_rows_channel;
wire    ap_channel_done_img_2_cols_channel;
wire    img_2_cols_channel_full_n;
reg    ap_sync_reg_channel_write_img_2_cols_channel;
wire    ap_sync_channel_write_img_2_cols_channel;
wire    ap_channel_done_img_2_rows_channel;
wire    img_2_rows_channel_full_n;
reg    ap_sync_reg_channel_write_img_2_rows_channel;
wire    ap_sync_channel_write_img_2_rows_channel;
wire    ap_channel_done_img_1_cols_channel;
wire    img_1_cols_channel_full_n;
reg    ap_sync_reg_channel_write_img_1_cols_channel;
wire    ap_sync_channel_write_img_1_cols_channel;
wire    ap_channel_done_img_1_rows_channel;
wire    img_1_rows_channel_full_n;
reg    ap_sync_reg_channel_write_img_1_rows_channel;
wire    ap_sync_channel_write_img_1_rows_channel;
wire    AXIvideo2xfMat_24_9_600_1024_1_2_U0_ap_start;
wire    AXIvideo2xfMat_24_9_600_1024_1_2_U0_ap_done;
wire    AXIvideo2xfMat_24_9_600_1024_1_2_U0_ap_continue;
wire    AXIvideo2xfMat_24_9_600_1024_1_2_U0_ap_idle;
wire    AXIvideo2xfMat_24_9_600_1024_1_2_U0_ap_ready;
wire    AXIvideo2xfMat_24_9_600_1024_1_2_U0_start_out;
wire    AXIvideo2xfMat_24_9_600_1024_1_2_U0_start_write;
wire    AXIvideo2xfMat_24_9_600_1024_1_2_U0_INPUT_STREAM_TREADY;
wire   [23:0] AXIvideo2xfMat_24_9_600_1024_1_2_U0_img_0_data163_din;
wire    AXIvideo2xfMat_24_9_600_1024_1_2_U0_img_0_data163_write;
wire   [31:0] AXIvideo2xfMat_24_9_600_1024_1_2_U0_img_0_rows_c_din;
wire    AXIvideo2xfMat_24_9_600_1024_1_2_U0_img_0_rows_c_write;
wire   [31:0] AXIvideo2xfMat_24_9_600_1024_1_2_U0_img_0_cols_c_din;
wire    AXIvideo2xfMat_24_9_600_1024_1_2_U0_img_0_cols_c_write;
wire    medianBlur_3_1_9_600_1024_1_2_2_U0_ap_start;
wire    medianBlur_3_1_9_600_1024_1_2_2_U0_ap_done;
wire    medianBlur_3_1_9_600_1024_1_2_2_U0_ap_continue;
wire    medianBlur_3_1_9_600_1024_1_2_2_U0_ap_idle;
wire    medianBlur_3_1_9_600_1024_1_2_2_U0_ap_ready;
wire    medianBlur_3_1_9_600_1024_1_2_2_U0_p_src_rows_read;
wire    medianBlur_3_1_9_600_1024_1_2_2_U0_p_src_cols_read;
wire    medianBlur_3_1_9_600_1024_1_2_2_U0_img_0_data163_read;
wire   [23:0] medianBlur_3_1_9_600_1024_1_2_2_U0_img_1_data164_din;
wire    medianBlur_3_1_9_600_1024_1_2_2_U0_img_1_data164_write;
wire    ImgProcess_9_0_600_1024_1_2_U0_ap_start;
wire    ImgProcess_9_0_600_1024_1_2_U0_ap_done;
wire    ImgProcess_9_0_600_1024_1_2_U0_ap_continue;
wire    ImgProcess_9_0_600_1024_1_2_U0_ap_idle;
wire    ImgProcess_9_0_600_1024_1_2_U0_ap_ready;
wire    ImgProcess_9_0_600_1024_1_2_U0_img_1_data164_read;
wire   [7:0] ImgProcess_9_0_600_1024_1_2_U0_img_2_data165_din;
wire    ImgProcess_9_0_600_1024_1_2_U0_img_2_data165_write;
wire    ImgProcess_9_0_600_1024_1_2_U0_cb_lower_read;
wire    ImgProcess_9_0_600_1024_1_2_U0_cb_upper_read;
wire    ImgProcess_9_0_600_1024_1_2_U0_cr_lower_read;
wire    ImgProcess_9_0_600_1024_1_2_U0_cr_upper_read;
wire    erode_0_0_600_1024_0_3_3_1_1_2_2_U0_ap_start;
wire    erode_0_0_600_1024_0_3_3_1_1_2_2_U0_ap_done;
wire    erode_0_0_600_1024_0_3_3_1_1_2_2_U0_ap_continue;
wire    erode_0_0_600_1024_0_3_3_1_1_2_2_U0_ap_idle;
wire    erode_0_0_600_1024_0_3_3_1_1_2_2_U0_ap_ready;
wire    erode_0_0_600_1024_0_3_3_1_1_2_2_U0_img_2_data165_read;
wire   [7:0] erode_0_0_600_1024_0_3_3_1_1_2_2_U0_img_3_data166_din;
wire    erode_0_0_600_1024_0_3_3_1_1_2_2_U0_img_3_data166_write;
wire    dilate_0_0_600_1024_0_3_3_1_1_2_2_U0_ap_start;
wire    dilate_0_0_600_1024_0_3_3_1_1_2_2_U0_ap_done;
wire    dilate_0_0_600_1024_0_3_3_1_1_2_2_U0_ap_continue;
wire    dilate_0_0_600_1024_0_3_3_1_1_2_2_U0_ap_idle;
wire    dilate_0_0_600_1024_0_3_3_1_1_2_2_U0_ap_ready;
wire    dilate_0_0_600_1024_0_3_3_1_1_2_2_U0_img_3_data166_read;
wire   [7:0] dilate_0_0_600_1024_0_3_3_1_1_2_2_U0_img_4_data167_din;
wire    dilate_0_0_600_1024_0_3_3_1_1_2_2_U0_img_4_data167_write;
wire    duplicateMat_0_600_1024_1_2_2_2_U0_ap_start;
wire    duplicateMat_0_600_1024_1_2_2_2_U0_ap_done;
wire    duplicateMat_0_600_1024_1_2_2_2_U0_ap_continue;
wire    duplicateMat_0_600_1024_1_2_2_2_U0_ap_idle;
wire    duplicateMat_0_600_1024_1_2_2_2_U0_ap_ready;
wire    duplicateMat_0_600_1024_1_2_2_2_U0_img_4_data167_read;
wire   [7:0] duplicateMat_0_600_1024_1_2_2_2_U0_img_4a_data168_din;
wire    duplicateMat_0_600_1024_1_2_2_2_U0_img_4a_data168_write;
wire   [7:0] duplicateMat_0_600_1024_1_2_2_2_U0_img_4b_data169_din;
wire    duplicateMat_0_600_1024_1_2_2_2_U0_img_4b_data169_write;
wire    gray2rgb_0_9_600_1024_1_2_2_U0_ap_start;
wire    gray2rgb_0_9_600_1024_1_2_2_U0_ap_done;
wire    gray2rgb_0_9_600_1024_1_2_2_U0_ap_continue;
wire    gray2rgb_0_9_600_1024_1_2_2_U0_ap_idle;
wire    gray2rgb_0_9_600_1024_1_2_2_U0_ap_ready;
wire    gray2rgb_0_9_600_1024_1_2_2_U0_img_4a_data168_read;
wire   [23:0] gray2rgb_0_9_600_1024_1_2_2_U0_img_5_data170_din;
wire    gray2rgb_0_9_600_1024_1_2_2_U0_img_5_data170_write;
wire    gray2rgb_0_9_600_1024_1_2_2_1_U0_ap_start;
wire    gray2rgb_0_9_600_1024_1_2_2_1_U0_ap_done;
wire    gray2rgb_0_9_600_1024_1_2_2_1_U0_ap_continue;
wire    gray2rgb_0_9_600_1024_1_2_2_1_U0_ap_idle;
wire    gray2rgb_0_9_600_1024_1_2_2_1_U0_ap_ready;
wire    gray2rgb_0_9_600_1024_1_2_2_1_U0_img_4b_data169_read;
wire   [23:0] gray2rgb_0_9_600_1024_1_2_2_1_U0_img_6_data171_din;
wire    gray2rgb_0_9_600_1024_1_2_2_1_U0_img_6_data171_write;
wire    xfMat2AXIvideo_24_9_600_1024_1_2_U0_ap_start;
wire    xfMat2AXIvideo_24_9_600_1024_1_2_U0_ap_done;
wire    xfMat2AXIvideo_24_9_600_1024_1_2_U0_ap_continue;
wire    xfMat2AXIvideo_24_9_600_1024_1_2_U0_ap_idle;
wire    xfMat2AXIvideo_24_9_600_1024_1_2_U0_ap_ready;
wire    xfMat2AXIvideo_24_9_600_1024_1_2_U0_img_5_data170_read;
wire   [23:0] xfMat2AXIvideo_24_9_600_1024_1_2_U0_OUTPUT_STREAM_VIDEO_TDATA;
wire    xfMat2AXIvideo_24_9_600_1024_1_2_U0_OUTPUT_STREAM_VIDEO_TVALID;
wire   [2:0] xfMat2AXIvideo_24_9_600_1024_1_2_U0_OUTPUT_STREAM_VIDEO_TKEEP;
wire   [2:0] xfMat2AXIvideo_24_9_600_1024_1_2_U0_OUTPUT_STREAM_VIDEO_TSTRB;
wire   [0:0] xfMat2AXIvideo_24_9_600_1024_1_2_U0_OUTPUT_STREAM_VIDEO_TUSER;
wire   [0:0] xfMat2AXIvideo_24_9_600_1024_1_2_U0_OUTPUT_STREAM_VIDEO_TLAST;
wire   [0:0] xfMat2AXIvideo_24_9_600_1024_1_2_U0_OUTPUT_STREAM_VIDEO_TID;
wire   [0:0] xfMat2AXIvideo_24_9_600_1024_1_2_U0_OUTPUT_STREAM_VIDEO_TDEST;
wire    xfMat2AXIvideo_24_9_600_1024_1_2_2_U0_ap_start;
wire    xfMat2AXIvideo_24_9_600_1024_1_2_2_U0_ap_done;
wire    xfMat2AXIvideo_24_9_600_1024_1_2_2_U0_ap_continue;
wire    xfMat2AXIvideo_24_9_600_1024_1_2_2_U0_ap_idle;
wire    xfMat2AXIvideo_24_9_600_1024_1_2_2_U0_ap_ready;
wire    xfMat2AXIvideo_24_9_600_1024_1_2_2_U0_img_6_data171_read;
wire   [23:0] xfMat2AXIvideo_24_9_600_1024_1_2_2_U0_OUTPUT_STREAM_DIP_TDATA;
wire    xfMat2AXIvideo_24_9_600_1024_1_2_2_U0_OUTPUT_STREAM_DIP_TVALID;
wire   [2:0] xfMat2AXIvideo_24_9_600_1024_1_2_2_U0_OUTPUT_STREAM_DIP_TKEEP;
wire   [2:0] xfMat2AXIvideo_24_9_600_1024_1_2_2_U0_OUTPUT_STREAM_DIP_TSTRB;
wire   [0:0] xfMat2AXIvideo_24_9_600_1024_1_2_2_U0_OUTPUT_STREAM_DIP_TUSER;
wire   [0:0] xfMat2AXIvideo_24_9_600_1024_1_2_2_U0_OUTPUT_STREAM_DIP_TLAST;
wire   [0:0] xfMat2AXIvideo_24_9_600_1024_1_2_2_U0_OUTPUT_STREAM_DIP_TID;
wire   [0:0] xfMat2AXIvideo_24_9_600_1024_1_2_2_U0_OUTPUT_STREAM_DIP_TDEST;
wire    cb_lower_c_full_n;
wire   [31:0] cb_lower_c_dout;
wire   [3:0] cb_lower_c_num_data_valid;
wire   [3:0] cb_lower_c_fifo_cap;
wire    cb_lower_c_empty_n;
wire    cb_upper_c_full_n;
wire   [31:0] cb_upper_c_dout;
wire   [3:0] cb_upper_c_num_data_valid;
wire   [3:0] cb_upper_c_fifo_cap;
wire    cb_upper_c_empty_n;
wire    cr_lower_c_full_n;
wire   [31:0] cr_lower_c_dout;
wire   [3:0] cr_lower_c_num_data_valid;
wire   [3:0] cr_lower_c_fifo_cap;
wire    cr_lower_c_empty_n;
wire    cr_upper_c_full_n;
wire   [31:0] cr_upper_c_dout;
wire   [3:0] cr_upper_c_num_data_valid;
wire   [3:0] cr_upper_c_fifo_cap;
wire    cr_upper_c_empty_n;
wire   [31:0] img_1_rows_channel_dout;
wire   [2:0] img_1_rows_channel_num_data_valid;
wire   [2:0] img_1_rows_channel_fifo_cap;
wire    img_1_rows_channel_empty_n;
wire   [31:0] img_1_cols_channel_dout;
wire   [2:0] img_1_cols_channel_num_data_valid;
wire   [2:0] img_1_cols_channel_fifo_cap;
wire    img_1_cols_channel_empty_n;
wire   [31:0] img_2_rows_channel_dout;
wire   [3:0] img_2_rows_channel_num_data_valid;
wire   [3:0] img_2_rows_channel_fifo_cap;
wire    img_2_rows_channel_empty_n;
wire   [31:0] img_2_cols_channel_dout;
wire   [3:0] img_2_cols_channel_num_data_valid;
wire   [3:0] img_2_cols_channel_fifo_cap;
wire    img_2_cols_channel_empty_n;
wire   [31:0] img_3_rows_channel_dout;
wire   [3:0] img_3_rows_channel_num_data_valid;
wire   [3:0] img_3_rows_channel_fifo_cap;
wire    img_3_rows_channel_empty_n;
wire   [31:0] img_3_cols_channel_dout;
wire   [3:0] img_3_cols_channel_num_data_valid;
wire   [3:0] img_3_cols_channel_fifo_cap;
wire    img_3_cols_channel_empty_n;
wire   [31:0] img_4_rows_channel_dout;
wire   [3:0] img_4_rows_channel_num_data_valid;
wire   [3:0] img_4_rows_channel_fifo_cap;
wire    img_4_rows_channel_empty_n;
wire   [31:0] img_4_cols_channel_dout;
wire   [3:0] img_4_cols_channel_num_data_valid;
wire   [3:0] img_4_cols_channel_fifo_cap;
wire    img_4_cols_channel_empty_n;
wire   [31:0] img_4a_rows_channel_dout;
wire   [3:0] img_4a_rows_channel_num_data_valid;
wire   [3:0] img_4a_rows_channel_fifo_cap;
wire    img_4a_rows_channel_empty_n;
wire   [31:0] img_4a_cols_channel_dout;
wire   [3:0] img_4a_cols_channel_num_data_valid;
wire   [3:0] img_4a_cols_channel_fifo_cap;
wire    img_4a_cols_channel_empty_n;
wire   [31:0] img_4b_rows_channel_dout;
wire   [3:0] img_4b_rows_channel_num_data_valid;
wire   [3:0] img_4b_rows_channel_fifo_cap;
wire    img_4b_rows_channel_empty_n;
wire   [31:0] img_4b_cols_channel_dout;
wire   [3:0] img_4b_cols_channel_num_data_valid;
wire   [3:0] img_4b_cols_channel_fifo_cap;
wire    img_4b_cols_channel_empty_n;
wire   [31:0] img_5_rows_channel_dout;
wire   [4:0] img_5_rows_channel_num_data_valid;
wire   [4:0] img_5_rows_channel_fifo_cap;
wire    img_5_rows_channel_empty_n;
wire   [31:0] img_5_cols_channel_dout;
wire   [4:0] img_5_cols_channel_num_data_valid;
wire   [4:0] img_5_cols_channel_fifo_cap;
wire    img_5_cols_channel_empty_n;
wire   [31:0] img_6_rows_channel_dout;
wire   [4:0] img_6_rows_channel_num_data_valid;
wire   [4:0] img_6_rows_channel_fifo_cap;
wire    img_6_rows_channel_empty_n;
wire   [31:0] img_6_cols_channel_dout;
wire   [4:0] img_6_cols_channel_num_data_valid;
wire   [4:0] img_6_cols_channel_fifo_cap;
wire    img_6_cols_channel_empty_n;
wire   [31:0] img_0_rows_c23_channel_dout;
wire   [1:0] img_0_rows_c23_channel_num_data_valid;
wire   [1:0] img_0_rows_c23_channel_fifo_cap;
wire    img_0_rows_c23_channel_empty_n;
wire   [31:0] img_0_cols_c24_channel_dout;
wire   [1:0] img_0_cols_c24_channel_num_data_valid;
wire   [1:0] img_0_cols_c24_channel_fifo_cap;
wire    img_0_cols_c24_channel_empty_n;
wire    img_0_data_full_n;
wire   [23:0] img_0_data_dout;
wire   [1:0] img_0_data_num_data_valid;
wire   [1:0] img_0_data_fifo_cap;
wire    img_0_data_empty_n;
wire    img_0_rows_c_full_n;
wire   [31:0] img_0_rows_c_dout;
wire   [1:0] img_0_rows_c_num_data_valid;
wire   [1:0] img_0_rows_c_fifo_cap;
wire    img_0_rows_c_empty_n;
wire    img_0_cols_c_full_n;
wire   [31:0] img_0_cols_c_dout;
wire   [1:0] img_0_cols_c_num_data_valid;
wire   [1:0] img_0_cols_c_fifo_cap;
wire    img_0_cols_c_empty_n;
wire    img_1_data_full_n;
wire   [23:0] img_1_data_dout;
wire   [1:0] img_1_data_num_data_valid;
wire   [1:0] img_1_data_fifo_cap;
wire    img_1_data_empty_n;
wire    img_2_data_full_n;
wire   [7:0] img_2_data_dout;
wire   [1:0] img_2_data_num_data_valid;
wire   [1:0] img_2_data_fifo_cap;
wire    img_2_data_empty_n;
wire    img_3_data_full_n;
wire   [7:0] img_3_data_dout;
wire   [1:0] img_3_data_num_data_valid;
wire   [1:0] img_3_data_fifo_cap;
wire    img_3_data_empty_n;
wire    img_4_data_full_n;
wire   [7:0] img_4_data_dout;
wire   [1:0] img_4_data_num_data_valid;
wire   [1:0] img_4_data_fifo_cap;
wire    img_4_data_empty_n;
wire    img_4a_data_full_n;
wire   [7:0] img_4a_data_dout;
wire   [1:0] img_4a_data_num_data_valid;
wire   [1:0] img_4a_data_fifo_cap;
wire    img_4a_data_empty_n;
wire    img_4b_data_full_n;
wire   [7:0] img_4b_data_dout;
wire   [1:0] img_4b_data_num_data_valid;
wire   [1:0] img_4b_data_fifo_cap;
wire    img_4b_data_empty_n;
wire    img_5_data_full_n;
wire   [23:0] img_5_data_dout;
wire   [1:0] img_5_data_num_data_valid;
wire   [1:0] img_5_data_fifo_cap;
wire    img_5_data_empty_n;
wire    img_6_data_full_n;
wire   [23:0] img_6_data_dout;
wire   [1:0] img_6_data_num_data_valid;
wire   [1:0] img_6_data_fifo_cap;
wire    img_6_data_empty_n;
wire    ap_sync_done;
wire    ap_sync_ready;
reg    ap_sync_reg_entry_proc_U0_ap_ready;
wire    ap_sync_entry_proc_U0_ap_ready;
reg    ap_sync_reg_Block_entry1_proc_U0_ap_ready;
wire    ap_sync_Block_entry1_proc_U0_ap_ready;
wire   [0:0] start_for_medianBlur_3_1_9_600_1024_1_2_2_U0_din;
wire    start_for_medianBlur_3_1_9_600_1024_1_2_2_U0_full_n;
wire   [0:0] start_for_medianBlur_3_1_9_600_1024_1_2_2_U0_dout;
wire    start_for_medianBlur_3_1_9_600_1024_1_2_2_U0_empty_n;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_sync_reg_channel_write_img_0_cols_c24_channel = 1'b0;
#0 ap_sync_reg_channel_write_img_0_rows_c23_channel = 1'b0;
#0 ap_sync_reg_channel_write_img_6_cols_channel = 1'b0;
#0 ap_sync_reg_channel_write_img_6_rows_channel = 1'b0;
#0 ap_sync_reg_channel_write_img_5_cols_channel = 1'b0;
#0 ap_sync_reg_channel_write_img_5_rows_channel = 1'b0;
#0 ap_sync_reg_channel_write_img_4b_cols_channel = 1'b0;
#0 ap_sync_reg_channel_write_img_4b_rows_channel = 1'b0;
#0 ap_sync_reg_channel_write_img_4a_cols_channel = 1'b0;
#0 ap_sync_reg_channel_write_img_4a_rows_channel = 1'b0;
#0 ap_sync_reg_channel_write_img_4_cols_channel = 1'b0;
#0 ap_sync_reg_channel_write_img_4_rows_channel = 1'b0;
#0 ap_sync_reg_channel_write_img_3_cols_channel = 1'b0;
#0 ap_sync_reg_channel_write_img_3_rows_channel = 1'b0;
#0 ap_sync_reg_channel_write_img_2_cols_channel = 1'b0;
#0 ap_sync_reg_channel_write_img_2_rows_channel = 1'b0;
#0 ap_sync_reg_channel_write_img_1_cols_channel = 1'b0;
#0 ap_sync_reg_channel_write_img_1_rows_channel = 1'b0;
#0 ap_sync_reg_entry_proc_U0_ap_ready = 1'b0;
#0 ap_sync_reg_Block_entry1_proc_U0_ap_ready = 1'b0;
end

color_analysis_CONTROL_BUS_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CONTROL_BUS_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CONTROL_BUS_DATA_WIDTH ))
CONTROL_BUS_s_axi_U(
    .AWVALID(s_axi_CONTROL_BUS_AWVALID),
    .AWREADY(s_axi_CONTROL_BUS_AWREADY),
    .AWADDR(s_axi_CONTROL_BUS_AWADDR),
    .WVALID(s_axi_CONTROL_BUS_WVALID),
    .WREADY(s_axi_CONTROL_BUS_WREADY),
    .WDATA(s_axi_CONTROL_BUS_WDATA),
    .WSTRB(s_axi_CONTROL_BUS_WSTRB),
    .ARVALID(s_axi_CONTROL_BUS_ARVALID),
    .ARREADY(s_axi_CONTROL_BUS_ARREADY),
    .ARADDR(s_axi_CONTROL_BUS_ARADDR),
    .RVALID(s_axi_CONTROL_BUS_RVALID),
    .RREADY(s_axi_CONTROL_BUS_RREADY),
    .RDATA(s_axi_CONTROL_BUS_RDATA),
    .RRESP(s_axi_CONTROL_BUS_RRESP),
    .BVALID(s_axi_CONTROL_BUS_BVALID),
    .BREADY(s_axi_CONTROL_BUS_BREADY),
    .BRESP(s_axi_CONTROL_BUS_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .rows(rows),
    .cols(cols),
    .cb_lower(cb_lower),
    .cb_upper(cb_upper),
    .cr_lower(cr_lower),
    .cr_upper(cr_upper),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle)
);

color_analysis_entry_proc entry_proc_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(entry_proc_U0_ap_start),
    .ap_done(entry_proc_U0_ap_done),
    .ap_continue(entry_proc_U0_ap_continue),
    .ap_idle(entry_proc_U0_ap_idle),
    .ap_ready(entry_proc_U0_ap_ready),
    .cb_lower(cb_lower),
    .cb_lower_c_din(entry_proc_U0_cb_lower_c_din),
    .cb_lower_c_num_data_valid(cb_lower_c_num_data_valid),
    .cb_lower_c_fifo_cap(cb_lower_c_fifo_cap),
    .cb_lower_c_full_n(cb_lower_c_full_n),
    .cb_lower_c_write(entry_proc_U0_cb_lower_c_write),
    .cb_upper(cb_upper),
    .cb_upper_c_din(entry_proc_U0_cb_upper_c_din),
    .cb_upper_c_num_data_valid(cb_upper_c_num_data_valid),
    .cb_upper_c_fifo_cap(cb_upper_c_fifo_cap),
    .cb_upper_c_full_n(cb_upper_c_full_n),
    .cb_upper_c_write(entry_proc_U0_cb_upper_c_write),
    .cr_lower(cr_lower),
    .cr_lower_c_din(entry_proc_U0_cr_lower_c_din),
    .cr_lower_c_num_data_valid(cr_lower_c_num_data_valid),
    .cr_lower_c_fifo_cap(cr_lower_c_fifo_cap),
    .cr_lower_c_full_n(cr_lower_c_full_n),
    .cr_lower_c_write(entry_proc_U0_cr_lower_c_write),
    .cr_upper(cr_upper),
    .cr_upper_c_din(entry_proc_U0_cr_upper_c_din),
    .cr_upper_c_num_data_valid(cr_upper_c_num_data_valid),
    .cr_upper_c_fifo_cap(cr_upper_c_fifo_cap),
    .cr_upper_c_full_n(cr_upper_c_full_n),
    .cr_upper_c_write(entry_proc_U0_cr_upper_c_write)
);

color_analysis_Block_entry1_proc Block_entry1_proc_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(Block_entry1_proc_U0_ap_start),
    .ap_done(Block_entry1_proc_U0_ap_done),
    .ap_continue(Block_entry1_proc_U0_ap_continue),
    .ap_idle(Block_entry1_proc_U0_ap_idle),
    .ap_ready(Block_entry1_proc_U0_ap_ready),
    .rows(rows),
    .cols(cols),
    .ap_return_0(Block_entry1_proc_U0_ap_return_0),
    .ap_return_1(Block_entry1_proc_U0_ap_return_1),
    .ap_return_2(Block_entry1_proc_U0_ap_return_2),
    .ap_return_3(Block_entry1_proc_U0_ap_return_3),
    .ap_return_4(Block_entry1_proc_U0_ap_return_4),
    .ap_return_5(Block_entry1_proc_U0_ap_return_5),
    .ap_return_6(Block_entry1_proc_U0_ap_return_6),
    .ap_return_7(Block_entry1_proc_U0_ap_return_7),
    .ap_return_8(Block_entry1_proc_U0_ap_return_8),
    .ap_return_9(Block_entry1_proc_U0_ap_return_9),
    .ap_return_10(Block_entry1_proc_U0_ap_return_10),
    .ap_return_11(Block_entry1_proc_U0_ap_return_11),
    .ap_return_12(Block_entry1_proc_U0_ap_return_12),
    .ap_return_13(Block_entry1_proc_U0_ap_return_13),
    .ap_return_14(Block_entry1_proc_U0_ap_return_14),
    .ap_return_15(Block_entry1_proc_U0_ap_return_15),
    .ap_return_16(Block_entry1_proc_U0_ap_return_16),
    .ap_return_17(Block_entry1_proc_U0_ap_return_17)
);

color_analysis_AXIvideo2xfMat_24_9_600_1024_1_2_s AXIvideo2xfMat_24_9_600_1024_1_2_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(AXIvideo2xfMat_24_9_600_1024_1_2_U0_ap_start),
    .start_full_n(start_for_medianBlur_3_1_9_600_1024_1_2_2_U0_full_n),
    .ap_done(AXIvideo2xfMat_24_9_600_1024_1_2_U0_ap_done),
    .ap_continue(AXIvideo2xfMat_24_9_600_1024_1_2_U0_ap_continue),
    .ap_idle(AXIvideo2xfMat_24_9_600_1024_1_2_U0_ap_idle),
    .ap_ready(AXIvideo2xfMat_24_9_600_1024_1_2_U0_ap_ready),
    .start_out(AXIvideo2xfMat_24_9_600_1024_1_2_U0_start_out),
    .start_write(AXIvideo2xfMat_24_9_600_1024_1_2_U0_start_write),
    .INPUT_STREAM_TDATA(INPUT_STREAM_TDATA),
    .INPUT_STREAM_TVALID(INPUT_STREAM_TVALID),
    .INPUT_STREAM_TREADY(AXIvideo2xfMat_24_9_600_1024_1_2_U0_INPUT_STREAM_TREADY),
    .INPUT_STREAM_TKEEP(INPUT_STREAM_TKEEP),
    .INPUT_STREAM_TSTRB(INPUT_STREAM_TSTRB),
    .INPUT_STREAM_TUSER(INPUT_STREAM_TUSER),
    .INPUT_STREAM_TLAST(INPUT_STREAM_TLAST),
    .INPUT_STREAM_TID(INPUT_STREAM_TID),
    .INPUT_STREAM_TDEST(INPUT_STREAM_TDEST),
    .p_read(img_0_rows_c23_channel_dout),
    .p_read1(img_0_cols_c24_channel_dout),
    .img_0_data163_din(AXIvideo2xfMat_24_9_600_1024_1_2_U0_img_0_data163_din),
    .img_0_data163_num_data_valid(img_0_data_num_data_valid),
    .img_0_data163_fifo_cap(img_0_data_fifo_cap),
    .img_0_data163_full_n(img_0_data_full_n),
    .img_0_data163_write(AXIvideo2xfMat_24_9_600_1024_1_2_U0_img_0_data163_write),
    .img_0_rows_c_din(AXIvideo2xfMat_24_9_600_1024_1_2_U0_img_0_rows_c_din),
    .img_0_rows_c_num_data_valid(img_0_rows_c_num_data_valid),
    .img_0_rows_c_fifo_cap(img_0_rows_c_fifo_cap),
    .img_0_rows_c_full_n(img_0_rows_c_full_n),
    .img_0_rows_c_write(AXIvideo2xfMat_24_9_600_1024_1_2_U0_img_0_rows_c_write),
    .img_0_cols_c_din(AXIvideo2xfMat_24_9_600_1024_1_2_U0_img_0_cols_c_din),
    .img_0_cols_c_num_data_valid(img_0_cols_c_num_data_valid),
    .img_0_cols_c_fifo_cap(img_0_cols_c_fifo_cap),
    .img_0_cols_c_full_n(img_0_cols_c_full_n),
    .img_0_cols_c_write(AXIvideo2xfMat_24_9_600_1024_1_2_U0_img_0_cols_c_write)
);

color_analysis_medianBlur_3_1_9_600_1024_1_2_2_s medianBlur_3_1_9_600_1024_1_2_2_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(medianBlur_3_1_9_600_1024_1_2_2_U0_ap_start),
    .ap_done(medianBlur_3_1_9_600_1024_1_2_2_U0_ap_done),
    .ap_continue(medianBlur_3_1_9_600_1024_1_2_2_U0_ap_continue),
    .ap_idle(medianBlur_3_1_9_600_1024_1_2_2_U0_ap_idle),
    .ap_ready(medianBlur_3_1_9_600_1024_1_2_2_U0_ap_ready),
    .p_src_rows_dout(img_0_rows_c_dout),
    .p_src_rows_num_data_valid(img_0_rows_c_num_data_valid),
    .p_src_rows_fifo_cap(img_0_rows_c_fifo_cap),
    .p_src_rows_empty_n(img_0_rows_c_empty_n),
    .p_src_rows_read(medianBlur_3_1_9_600_1024_1_2_2_U0_p_src_rows_read),
    .p_src_cols_dout(img_0_cols_c_dout),
    .p_src_cols_num_data_valid(img_0_cols_c_num_data_valid),
    .p_src_cols_fifo_cap(img_0_cols_c_fifo_cap),
    .p_src_cols_empty_n(img_0_cols_c_empty_n),
    .p_src_cols_read(medianBlur_3_1_9_600_1024_1_2_2_U0_p_src_cols_read),
    .img_0_data163_dout(img_0_data_dout),
    .img_0_data163_num_data_valid(img_0_data_num_data_valid),
    .img_0_data163_fifo_cap(img_0_data_fifo_cap),
    .img_0_data163_empty_n(img_0_data_empty_n),
    .img_0_data163_read(medianBlur_3_1_9_600_1024_1_2_2_U0_img_0_data163_read),
    .img_1_data164_din(medianBlur_3_1_9_600_1024_1_2_2_U0_img_1_data164_din),
    .img_1_data164_num_data_valid(img_1_data_num_data_valid),
    .img_1_data164_fifo_cap(img_1_data_fifo_cap),
    .img_1_data164_full_n(img_1_data_full_n),
    .img_1_data164_write(medianBlur_3_1_9_600_1024_1_2_2_U0_img_1_data164_write)
);

color_analysis_ImgProcess_9_0_600_1024_1_2_s ImgProcess_9_0_600_1024_1_2_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(ImgProcess_9_0_600_1024_1_2_U0_ap_start),
    .ap_done(ImgProcess_9_0_600_1024_1_2_U0_ap_done),
    .ap_continue(ImgProcess_9_0_600_1024_1_2_U0_ap_continue),
    .ap_idle(ImgProcess_9_0_600_1024_1_2_U0_ap_idle),
    .ap_ready(ImgProcess_9_0_600_1024_1_2_U0_ap_ready),
    .p_read(img_1_rows_channel_dout),
    .p_read1(img_1_cols_channel_dout),
    .img_1_data164_dout(img_1_data_dout),
    .img_1_data164_num_data_valid(img_1_data_num_data_valid),
    .img_1_data164_fifo_cap(img_1_data_fifo_cap),
    .img_1_data164_empty_n(img_1_data_empty_n),
    .img_1_data164_read(ImgProcess_9_0_600_1024_1_2_U0_img_1_data164_read),
    .img_2_data165_din(ImgProcess_9_0_600_1024_1_2_U0_img_2_data165_din),
    .img_2_data165_num_data_valid(img_2_data_num_data_valid),
    .img_2_data165_fifo_cap(img_2_data_fifo_cap),
    .img_2_data165_full_n(img_2_data_full_n),
    .img_2_data165_write(ImgProcess_9_0_600_1024_1_2_U0_img_2_data165_write),
    .cb_lower_dout(cb_lower_c_dout),
    .cb_lower_num_data_valid(cb_lower_c_num_data_valid),
    .cb_lower_fifo_cap(cb_lower_c_fifo_cap),
    .cb_lower_empty_n(cb_lower_c_empty_n),
    .cb_lower_read(ImgProcess_9_0_600_1024_1_2_U0_cb_lower_read),
    .cb_upper_dout(cb_upper_c_dout),
    .cb_upper_num_data_valid(cb_upper_c_num_data_valid),
    .cb_upper_fifo_cap(cb_upper_c_fifo_cap),
    .cb_upper_empty_n(cb_upper_c_empty_n),
    .cb_upper_read(ImgProcess_9_0_600_1024_1_2_U0_cb_upper_read),
    .cr_lower_dout(cr_lower_c_dout),
    .cr_lower_num_data_valid(cr_lower_c_num_data_valid),
    .cr_lower_fifo_cap(cr_lower_c_fifo_cap),
    .cr_lower_empty_n(cr_lower_c_empty_n),
    .cr_lower_read(ImgProcess_9_0_600_1024_1_2_U0_cr_lower_read),
    .cr_upper_dout(cr_upper_c_dout),
    .cr_upper_num_data_valid(cr_upper_c_num_data_valid),
    .cr_upper_fifo_cap(cr_upper_c_fifo_cap),
    .cr_upper_empty_n(cr_upper_c_empty_n),
    .cr_upper_read(ImgProcess_9_0_600_1024_1_2_U0_cr_upper_read)
);

color_analysis_erode_0_0_600_1024_0_3_3_1_1_2_2_s erode_0_0_600_1024_0_3_3_1_1_2_2_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(erode_0_0_600_1024_0_3_3_1_1_2_2_U0_ap_start),
    .ap_done(erode_0_0_600_1024_0_3_3_1_1_2_2_U0_ap_done),
    .ap_continue(erode_0_0_600_1024_0_3_3_1_1_2_2_U0_ap_continue),
    .ap_idle(erode_0_0_600_1024_0_3_3_1_1_2_2_U0_ap_idle),
    .ap_ready(erode_0_0_600_1024_0_3_3_1_1_2_2_U0_ap_ready),
    .p_read(img_2_rows_channel_dout),
    .p_read1(img_2_cols_channel_dout),
    .img_2_data165_dout(img_2_data_dout),
    .img_2_data165_num_data_valid(img_2_data_num_data_valid),
    .img_2_data165_fifo_cap(img_2_data_fifo_cap),
    .img_2_data165_empty_n(img_2_data_empty_n),
    .img_2_data165_read(erode_0_0_600_1024_0_3_3_1_1_2_2_U0_img_2_data165_read),
    .img_3_data166_din(erode_0_0_600_1024_0_3_3_1_1_2_2_U0_img_3_data166_din),
    .img_3_data166_num_data_valid(img_3_data_num_data_valid),
    .img_3_data166_fifo_cap(img_3_data_fifo_cap),
    .img_3_data166_full_n(img_3_data_full_n),
    .img_3_data166_write(erode_0_0_600_1024_0_3_3_1_1_2_2_U0_img_3_data166_write)
);

color_analysis_dilate_0_0_600_1024_0_3_3_1_1_2_2_s dilate_0_0_600_1024_0_3_3_1_1_2_2_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(dilate_0_0_600_1024_0_3_3_1_1_2_2_U0_ap_start),
    .ap_done(dilate_0_0_600_1024_0_3_3_1_1_2_2_U0_ap_done),
    .ap_continue(dilate_0_0_600_1024_0_3_3_1_1_2_2_U0_ap_continue),
    .ap_idle(dilate_0_0_600_1024_0_3_3_1_1_2_2_U0_ap_idle),
    .ap_ready(dilate_0_0_600_1024_0_3_3_1_1_2_2_U0_ap_ready),
    .p_read(img_3_rows_channel_dout),
    .p_read1(img_3_cols_channel_dout),
    .img_3_data166_dout(img_3_data_dout),
    .img_3_data166_num_data_valid(img_3_data_num_data_valid),
    .img_3_data166_fifo_cap(img_3_data_fifo_cap),
    .img_3_data166_empty_n(img_3_data_empty_n),
    .img_3_data166_read(dilate_0_0_600_1024_0_3_3_1_1_2_2_U0_img_3_data166_read),
    .img_4_data167_din(dilate_0_0_600_1024_0_3_3_1_1_2_2_U0_img_4_data167_din),
    .img_4_data167_num_data_valid(img_4_data_num_data_valid),
    .img_4_data167_fifo_cap(img_4_data_fifo_cap),
    .img_4_data167_full_n(img_4_data_full_n),
    .img_4_data167_write(dilate_0_0_600_1024_0_3_3_1_1_2_2_U0_img_4_data167_write)
);

color_analysis_duplicateMat_0_600_1024_1_2_2_2_s duplicateMat_0_600_1024_1_2_2_2_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(duplicateMat_0_600_1024_1_2_2_2_U0_ap_start),
    .ap_done(duplicateMat_0_600_1024_1_2_2_2_U0_ap_done),
    .ap_continue(duplicateMat_0_600_1024_1_2_2_2_U0_ap_continue),
    .ap_idle(duplicateMat_0_600_1024_1_2_2_2_U0_ap_idle),
    .ap_ready(duplicateMat_0_600_1024_1_2_2_2_U0_ap_ready),
    .p_read(img_4_rows_channel_dout),
    .p_read1(img_4_cols_channel_dout),
    .img_4_data167_dout(img_4_data_dout),
    .img_4_data167_num_data_valid(img_4_data_num_data_valid),
    .img_4_data167_fifo_cap(img_4_data_fifo_cap),
    .img_4_data167_empty_n(img_4_data_empty_n),
    .img_4_data167_read(duplicateMat_0_600_1024_1_2_2_2_U0_img_4_data167_read),
    .img_4a_data168_din(duplicateMat_0_600_1024_1_2_2_2_U0_img_4a_data168_din),
    .img_4a_data168_num_data_valid(img_4a_data_num_data_valid),
    .img_4a_data168_fifo_cap(img_4a_data_fifo_cap),
    .img_4a_data168_full_n(img_4a_data_full_n),
    .img_4a_data168_write(duplicateMat_0_600_1024_1_2_2_2_U0_img_4a_data168_write),
    .img_4b_data169_din(duplicateMat_0_600_1024_1_2_2_2_U0_img_4b_data169_din),
    .img_4b_data169_num_data_valid(img_4b_data_num_data_valid),
    .img_4b_data169_fifo_cap(img_4b_data_fifo_cap),
    .img_4b_data169_full_n(img_4b_data_full_n),
    .img_4b_data169_write(duplicateMat_0_600_1024_1_2_2_2_U0_img_4b_data169_write)
);

color_analysis_gray2rgb_0_9_600_1024_1_2_2_s gray2rgb_0_9_600_1024_1_2_2_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(gray2rgb_0_9_600_1024_1_2_2_U0_ap_start),
    .ap_done(gray2rgb_0_9_600_1024_1_2_2_U0_ap_done),
    .ap_continue(gray2rgb_0_9_600_1024_1_2_2_U0_ap_continue),
    .ap_idle(gray2rgb_0_9_600_1024_1_2_2_U0_ap_idle),
    .ap_ready(gray2rgb_0_9_600_1024_1_2_2_U0_ap_ready),
    .p_read(img_4a_rows_channel_dout),
    .p_read1(img_4a_cols_channel_dout),
    .img_4a_data168_dout(img_4a_data_dout),
    .img_4a_data168_num_data_valid(img_4a_data_num_data_valid),
    .img_4a_data168_fifo_cap(img_4a_data_fifo_cap),
    .img_4a_data168_empty_n(img_4a_data_empty_n),
    .img_4a_data168_read(gray2rgb_0_9_600_1024_1_2_2_U0_img_4a_data168_read),
    .img_5_data170_din(gray2rgb_0_9_600_1024_1_2_2_U0_img_5_data170_din),
    .img_5_data170_num_data_valid(img_5_data_num_data_valid),
    .img_5_data170_fifo_cap(img_5_data_fifo_cap),
    .img_5_data170_full_n(img_5_data_full_n),
    .img_5_data170_write(gray2rgb_0_9_600_1024_1_2_2_U0_img_5_data170_write)
);

color_analysis_gray2rgb_0_9_600_1024_1_2_2_1 gray2rgb_0_9_600_1024_1_2_2_1_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(gray2rgb_0_9_600_1024_1_2_2_1_U0_ap_start),
    .ap_done(gray2rgb_0_9_600_1024_1_2_2_1_U0_ap_done),
    .ap_continue(gray2rgb_0_9_600_1024_1_2_2_1_U0_ap_continue),
    .ap_idle(gray2rgb_0_9_600_1024_1_2_2_1_U0_ap_idle),
    .ap_ready(gray2rgb_0_9_600_1024_1_2_2_1_U0_ap_ready),
    .p_read(img_4b_rows_channel_dout),
    .p_read1(img_4b_cols_channel_dout),
    .img_4b_data169_dout(img_4b_data_dout),
    .img_4b_data169_num_data_valid(img_4b_data_num_data_valid),
    .img_4b_data169_fifo_cap(img_4b_data_fifo_cap),
    .img_4b_data169_empty_n(img_4b_data_empty_n),
    .img_4b_data169_read(gray2rgb_0_9_600_1024_1_2_2_1_U0_img_4b_data169_read),
    .img_6_data171_din(gray2rgb_0_9_600_1024_1_2_2_1_U0_img_6_data171_din),
    .img_6_data171_num_data_valid(img_6_data_num_data_valid),
    .img_6_data171_fifo_cap(img_6_data_fifo_cap),
    .img_6_data171_full_n(img_6_data_full_n),
    .img_6_data171_write(gray2rgb_0_9_600_1024_1_2_2_1_U0_img_6_data171_write)
);

color_analysis_xfMat2AXIvideo_24_9_600_1024_1_2_s xfMat2AXIvideo_24_9_600_1024_1_2_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(xfMat2AXIvideo_24_9_600_1024_1_2_U0_ap_start),
    .ap_done(xfMat2AXIvideo_24_9_600_1024_1_2_U0_ap_done),
    .ap_continue(xfMat2AXIvideo_24_9_600_1024_1_2_U0_ap_continue),
    .ap_idle(xfMat2AXIvideo_24_9_600_1024_1_2_U0_ap_idle),
    .ap_ready(xfMat2AXIvideo_24_9_600_1024_1_2_U0_ap_ready),
    .p_read(img_5_rows_channel_dout),
    .p_read1(img_5_cols_channel_dout),
    .img_5_data170_dout(img_5_data_dout),
    .img_5_data170_num_data_valid(img_5_data_num_data_valid),
    .img_5_data170_fifo_cap(img_5_data_fifo_cap),
    .img_5_data170_empty_n(img_5_data_empty_n),
    .img_5_data170_read(xfMat2AXIvideo_24_9_600_1024_1_2_U0_img_5_data170_read),
    .OUTPUT_STREAM_VIDEO_TDATA(xfMat2AXIvideo_24_9_600_1024_1_2_U0_OUTPUT_STREAM_VIDEO_TDATA),
    .OUTPUT_STREAM_VIDEO_TVALID(xfMat2AXIvideo_24_9_600_1024_1_2_U0_OUTPUT_STREAM_VIDEO_TVALID),
    .OUTPUT_STREAM_VIDEO_TREADY(OUTPUT_STREAM_VIDEO_TREADY),
    .OUTPUT_STREAM_VIDEO_TKEEP(xfMat2AXIvideo_24_9_600_1024_1_2_U0_OUTPUT_STREAM_VIDEO_TKEEP),
    .OUTPUT_STREAM_VIDEO_TSTRB(xfMat2AXIvideo_24_9_600_1024_1_2_U0_OUTPUT_STREAM_VIDEO_TSTRB),
    .OUTPUT_STREAM_VIDEO_TUSER(xfMat2AXIvideo_24_9_600_1024_1_2_U0_OUTPUT_STREAM_VIDEO_TUSER),
    .OUTPUT_STREAM_VIDEO_TLAST(xfMat2AXIvideo_24_9_600_1024_1_2_U0_OUTPUT_STREAM_VIDEO_TLAST),
    .OUTPUT_STREAM_VIDEO_TID(xfMat2AXIvideo_24_9_600_1024_1_2_U0_OUTPUT_STREAM_VIDEO_TID),
    .OUTPUT_STREAM_VIDEO_TDEST(xfMat2AXIvideo_24_9_600_1024_1_2_U0_OUTPUT_STREAM_VIDEO_TDEST)
);

color_analysis_xfMat2AXIvideo_24_9_600_1024_1_2_2 xfMat2AXIvideo_24_9_600_1024_1_2_2_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(xfMat2AXIvideo_24_9_600_1024_1_2_2_U0_ap_start),
    .ap_done(xfMat2AXIvideo_24_9_600_1024_1_2_2_U0_ap_done),
    .ap_continue(xfMat2AXIvideo_24_9_600_1024_1_2_2_U0_ap_continue),
    .ap_idle(xfMat2AXIvideo_24_9_600_1024_1_2_2_U0_ap_idle),
    .ap_ready(xfMat2AXIvideo_24_9_600_1024_1_2_2_U0_ap_ready),
    .p_read(img_6_rows_channel_dout),
    .p_read1(img_6_cols_channel_dout),
    .img_6_data171_dout(img_6_data_dout),
    .img_6_data171_num_data_valid(img_6_data_num_data_valid),
    .img_6_data171_fifo_cap(img_6_data_fifo_cap),
    .img_6_data171_empty_n(img_6_data_empty_n),
    .img_6_data171_read(xfMat2AXIvideo_24_9_600_1024_1_2_2_U0_img_6_data171_read),
    .OUTPUT_STREAM_DIP_TDATA(xfMat2AXIvideo_24_9_600_1024_1_2_2_U0_OUTPUT_STREAM_DIP_TDATA),
    .OUTPUT_STREAM_DIP_TVALID(xfMat2AXIvideo_24_9_600_1024_1_2_2_U0_OUTPUT_STREAM_DIP_TVALID),
    .OUTPUT_STREAM_DIP_TREADY(OUTPUT_STREAM_DIP_TREADY),
    .OUTPUT_STREAM_DIP_TKEEP(xfMat2AXIvideo_24_9_600_1024_1_2_2_U0_OUTPUT_STREAM_DIP_TKEEP),
    .OUTPUT_STREAM_DIP_TSTRB(xfMat2AXIvideo_24_9_600_1024_1_2_2_U0_OUTPUT_STREAM_DIP_TSTRB),
    .OUTPUT_STREAM_DIP_TUSER(xfMat2AXIvideo_24_9_600_1024_1_2_2_U0_OUTPUT_STREAM_DIP_TUSER),
    .OUTPUT_STREAM_DIP_TLAST(xfMat2AXIvideo_24_9_600_1024_1_2_2_U0_OUTPUT_STREAM_DIP_TLAST),
    .OUTPUT_STREAM_DIP_TID(xfMat2AXIvideo_24_9_600_1024_1_2_2_U0_OUTPUT_STREAM_DIP_TID),
    .OUTPUT_STREAM_DIP_TDEST(xfMat2AXIvideo_24_9_600_1024_1_2_2_U0_OUTPUT_STREAM_DIP_TDEST)
);

color_analysis_fifo_w32_d5_S cb_lower_c_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(entry_proc_U0_cb_lower_c_din),
    .if_full_n(cb_lower_c_full_n),
    .if_write(entry_proc_U0_cb_lower_c_write),
    .if_dout(cb_lower_c_dout),
    .if_num_data_valid(cb_lower_c_num_data_valid),
    .if_fifo_cap(cb_lower_c_fifo_cap),
    .if_empty_n(cb_lower_c_empty_n),
    .if_read(ImgProcess_9_0_600_1024_1_2_U0_cb_lower_read)
);

color_analysis_fifo_w32_d5_S cb_upper_c_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(entry_proc_U0_cb_upper_c_din),
    .if_full_n(cb_upper_c_full_n),
    .if_write(entry_proc_U0_cb_upper_c_write),
    .if_dout(cb_upper_c_dout),
    .if_num_data_valid(cb_upper_c_num_data_valid),
    .if_fifo_cap(cb_upper_c_fifo_cap),
    .if_empty_n(cb_upper_c_empty_n),
    .if_read(ImgProcess_9_0_600_1024_1_2_U0_cb_upper_read)
);

color_analysis_fifo_w32_d5_S cr_lower_c_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(entry_proc_U0_cr_lower_c_din),
    .if_full_n(cr_lower_c_full_n),
    .if_write(entry_proc_U0_cr_lower_c_write),
    .if_dout(cr_lower_c_dout),
    .if_num_data_valid(cr_lower_c_num_data_valid),
    .if_fifo_cap(cr_lower_c_fifo_cap),
    .if_empty_n(cr_lower_c_empty_n),
    .if_read(ImgProcess_9_0_600_1024_1_2_U0_cr_lower_read)
);

color_analysis_fifo_w32_d5_S cr_upper_c_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(entry_proc_U0_cr_upper_c_din),
    .if_full_n(cr_upper_c_full_n),
    .if_write(entry_proc_U0_cr_upper_c_write),
    .if_dout(cr_upper_c_dout),
    .if_num_data_valid(cr_upper_c_num_data_valid),
    .if_fifo_cap(cr_upper_c_fifo_cap),
    .if_empty_n(cr_upper_c_empty_n),
    .if_read(ImgProcess_9_0_600_1024_1_2_U0_cr_upper_read)
);

color_analysis_fifo_w32_d4_S img_1_rows_channel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_entry1_proc_U0_ap_return_0),
    .if_full_n(img_1_rows_channel_full_n),
    .if_write(ap_channel_done_img_1_rows_channel),
    .if_dout(img_1_rows_channel_dout),
    .if_num_data_valid(img_1_rows_channel_num_data_valid),
    .if_fifo_cap(img_1_rows_channel_fifo_cap),
    .if_empty_n(img_1_rows_channel_empty_n),
    .if_read(ImgProcess_9_0_600_1024_1_2_U0_ap_ready)
);

color_analysis_fifo_w32_d4_S img_1_cols_channel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_entry1_proc_U0_ap_return_1),
    .if_full_n(img_1_cols_channel_full_n),
    .if_write(ap_channel_done_img_1_cols_channel),
    .if_dout(img_1_cols_channel_dout),
    .if_num_data_valid(img_1_cols_channel_num_data_valid),
    .if_fifo_cap(img_1_cols_channel_fifo_cap),
    .if_empty_n(img_1_cols_channel_empty_n),
    .if_read(ImgProcess_9_0_600_1024_1_2_U0_ap_ready)
);

color_analysis_fifo_w32_d5_S img_2_rows_channel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_entry1_proc_U0_ap_return_2),
    .if_full_n(img_2_rows_channel_full_n),
    .if_write(ap_channel_done_img_2_rows_channel),
    .if_dout(img_2_rows_channel_dout),
    .if_num_data_valid(img_2_rows_channel_num_data_valid),
    .if_fifo_cap(img_2_rows_channel_fifo_cap),
    .if_empty_n(img_2_rows_channel_empty_n),
    .if_read(erode_0_0_600_1024_0_3_3_1_1_2_2_U0_ap_ready)
);

color_analysis_fifo_w32_d5_S img_2_cols_channel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_entry1_proc_U0_ap_return_3),
    .if_full_n(img_2_cols_channel_full_n),
    .if_write(ap_channel_done_img_2_cols_channel),
    .if_dout(img_2_cols_channel_dout),
    .if_num_data_valid(img_2_cols_channel_num_data_valid),
    .if_fifo_cap(img_2_cols_channel_fifo_cap),
    .if_empty_n(img_2_cols_channel_empty_n),
    .if_read(erode_0_0_600_1024_0_3_3_1_1_2_2_U0_ap_ready)
);

color_analysis_fifo_w32_d6_S img_3_rows_channel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_entry1_proc_U0_ap_return_4),
    .if_full_n(img_3_rows_channel_full_n),
    .if_write(ap_channel_done_img_3_rows_channel),
    .if_dout(img_3_rows_channel_dout),
    .if_num_data_valid(img_3_rows_channel_num_data_valid),
    .if_fifo_cap(img_3_rows_channel_fifo_cap),
    .if_empty_n(img_3_rows_channel_empty_n),
    .if_read(dilate_0_0_600_1024_0_3_3_1_1_2_2_U0_ap_ready)
);

color_analysis_fifo_w32_d6_S img_3_cols_channel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_entry1_proc_U0_ap_return_5),
    .if_full_n(img_3_cols_channel_full_n),
    .if_write(ap_channel_done_img_3_cols_channel),
    .if_dout(img_3_cols_channel_dout),
    .if_num_data_valid(img_3_cols_channel_num_data_valid),
    .if_fifo_cap(img_3_cols_channel_fifo_cap),
    .if_empty_n(img_3_cols_channel_empty_n),
    .if_read(dilate_0_0_600_1024_0_3_3_1_1_2_2_U0_ap_ready)
);

color_analysis_fifo_w32_d7_S img_4_rows_channel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_entry1_proc_U0_ap_return_6),
    .if_full_n(img_4_rows_channel_full_n),
    .if_write(ap_channel_done_img_4_rows_channel),
    .if_dout(img_4_rows_channel_dout),
    .if_num_data_valid(img_4_rows_channel_num_data_valid),
    .if_fifo_cap(img_4_rows_channel_fifo_cap),
    .if_empty_n(img_4_rows_channel_empty_n),
    .if_read(duplicateMat_0_600_1024_1_2_2_2_U0_ap_ready)
);

color_analysis_fifo_w32_d7_S img_4_cols_channel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_entry1_proc_U0_ap_return_7),
    .if_full_n(img_4_cols_channel_full_n),
    .if_write(ap_channel_done_img_4_cols_channel),
    .if_dout(img_4_cols_channel_dout),
    .if_num_data_valid(img_4_cols_channel_num_data_valid),
    .if_fifo_cap(img_4_cols_channel_fifo_cap),
    .if_empty_n(img_4_cols_channel_empty_n),
    .if_read(duplicateMat_0_600_1024_1_2_2_2_U0_ap_ready)
);

color_analysis_fifo_w32_d8_S img_4a_rows_channel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_entry1_proc_U0_ap_return_8),
    .if_full_n(img_4a_rows_channel_full_n),
    .if_write(ap_channel_done_img_4a_rows_channel),
    .if_dout(img_4a_rows_channel_dout),
    .if_num_data_valid(img_4a_rows_channel_num_data_valid),
    .if_fifo_cap(img_4a_rows_channel_fifo_cap),
    .if_empty_n(img_4a_rows_channel_empty_n),
    .if_read(gray2rgb_0_9_600_1024_1_2_2_U0_ap_ready)
);

color_analysis_fifo_w32_d8_S img_4a_cols_channel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_entry1_proc_U0_ap_return_9),
    .if_full_n(img_4a_cols_channel_full_n),
    .if_write(ap_channel_done_img_4a_cols_channel),
    .if_dout(img_4a_cols_channel_dout),
    .if_num_data_valid(img_4a_cols_channel_num_data_valid),
    .if_fifo_cap(img_4a_cols_channel_fifo_cap),
    .if_empty_n(img_4a_cols_channel_empty_n),
    .if_read(gray2rgb_0_9_600_1024_1_2_2_U0_ap_ready)
);

color_analysis_fifo_w32_d8_S img_4b_rows_channel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_entry1_proc_U0_ap_return_10),
    .if_full_n(img_4b_rows_channel_full_n),
    .if_write(ap_channel_done_img_4b_rows_channel),
    .if_dout(img_4b_rows_channel_dout),
    .if_num_data_valid(img_4b_rows_channel_num_data_valid),
    .if_fifo_cap(img_4b_rows_channel_fifo_cap),
    .if_empty_n(img_4b_rows_channel_empty_n),
    .if_read(gray2rgb_0_9_600_1024_1_2_2_1_U0_ap_ready)
);

color_analysis_fifo_w32_d8_S img_4b_cols_channel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_entry1_proc_U0_ap_return_11),
    .if_full_n(img_4b_cols_channel_full_n),
    .if_write(ap_channel_done_img_4b_cols_channel),
    .if_dout(img_4b_cols_channel_dout),
    .if_num_data_valid(img_4b_cols_channel_num_data_valid),
    .if_fifo_cap(img_4b_cols_channel_fifo_cap),
    .if_empty_n(img_4b_cols_channel_empty_n),
    .if_read(gray2rgb_0_9_600_1024_1_2_2_1_U0_ap_ready)
);

color_analysis_fifo_w32_d9_S img_5_rows_channel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_entry1_proc_U0_ap_return_12),
    .if_full_n(img_5_rows_channel_full_n),
    .if_write(ap_channel_done_img_5_rows_channel),
    .if_dout(img_5_rows_channel_dout),
    .if_num_data_valid(img_5_rows_channel_num_data_valid),
    .if_fifo_cap(img_5_rows_channel_fifo_cap),
    .if_empty_n(img_5_rows_channel_empty_n),
    .if_read(xfMat2AXIvideo_24_9_600_1024_1_2_U0_ap_ready)
);

color_analysis_fifo_w32_d9_S img_5_cols_channel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_entry1_proc_U0_ap_return_13),
    .if_full_n(img_5_cols_channel_full_n),
    .if_write(ap_channel_done_img_5_cols_channel),
    .if_dout(img_5_cols_channel_dout),
    .if_num_data_valid(img_5_cols_channel_num_data_valid),
    .if_fifo_cap(img_5_cols_channel_fifo_cap),
    .if_empty_n(img_5_cols_channel_empty_n),
    .if_read(xfMat2AXIvideo_24_9_600_1024_1_2_U0_ap_ready)
);

color_analysis_fifo_w32_d9_S img_6_rows_channel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_entry1_proc_U0_ap_return_14),
    .if_full_n(img_6_rows_channel_full_n),
    .if_write(ap_channel_done_img_6_rows_channel),
    .if_dout(img_6_rows_channel_dout),
    .if_num_data_valid(img_6_rows_channel_num_data_valid),
    .if_fifo_cap(img_6_rows_channel_fifo_cap),
    .if_empty_n(img_6_rows_channel_empty_n),
    .if_read(xfMat2AXIvideo_24_9_600_1024_1_2_2_U0_ap_ready)
);

color_analysis_fifo_w32_d9_S img_6_cols_channel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_entry1_proc_U0_ap_return_15),
    .if_full_n(img_6_cols_channel_full_n),
    .if_write(ap_channel_done_img_6_cols_channel),
    .if_dout(img_6_cols_channel_dout),
    .if_num_data_valid(img_6_cols_channel_num_data_valid),
    .if_fifo_cap(img_6_cols_channel_fifo_cap),
    .if_empty_n(img_6_cols_channel_empty_n),
    .if_read(xfMat2AXIvideo_24_9_600_1024_1_2_2_U0_ap_ready)
);

color_analysis_fifo_w32_d2_S img_0_rows_c23_channel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_entry1_proc_U0_ap_return_16),
    .if_full_n(img_0_rows_c23_channel_full_n),
    .if_write(ap_channel_done_img_0_rows_c23_channel),
    .if_dout(img_0_rows_c23_channel_dout),
    .if_num_data_valid(img_0_rows_c23_channel_num_data_valid),
    .if_fifo_cap(img_0_rows_c23_channel_fifo_cap),
    .if_empty_n(img_0_rows_c23_channel_empty_n),
    .if_read(AXIvideo2xfMat_24_9_600_1024_1_2_U0_ap_ready)
);

color_analysis_fifo_w32_d2_S img_0_cols_c24_channel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_entry1_proc_U0_ap_return_17),
    .if_full_n(img_0_cols_c24_channel_full_n),
    .if_write(ap_channel_done_img_0_cols_c24_channel),
    .if_dout(img_0_cols_c24_channel_dout),
    .if_num_data_valid(img_0_cols_c24_channel_num_data_valid),
    .if_fifo_cap(img_0_cols_c24_channel_fifo_cap),
    .if_empty_n(img_0_cols_c24_channel_empty_n),
    .if_read(AXIvideo2xfMat_24_9_600_1024_1_2_U0_ap_ready)
);

color_analysis_fifo_w24_d2_S img_0_data_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(AXIvideo2xfMat_24_9_600_1024_1_2_U0_img_0_data163_din),
    .if_full_n(img_0_data_full_n),
    .if_write(AXIvideo2xfMat_24_9_600_1024_1_2_U0_img_0_data163_write),
    .if_dout(img_0_data_dout),
    .if_num_data_valid(img_0_data_num_data_valid),
    .if_fifo_cap(img_0_data_fifo_cap),
    .if_empty_n(img_0_data_empty_n),
    .if_read(medianBlur_3_1_9_600_1024_1_2_2_U0_img_0_data163_read)
);

color_analysis_fifo_w32_d2_S img_0_rows_c_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(AXIvideo2xfMat_24_9_600_1024_1_2_U0_img_0_rows_c_din),
    .if_full_n(img_0_rows_c_full_n),
    .if_write(AXIvideo2xfMat_24_9_600_1024_1_2_U0_img_0_rows_c_write),
    .if_dout(img_0_rows_c_dout),
    .if_num_data_valid(img_0_rows_c_num_data_valid),
    .if_fifo_cap(img_0_rows_c_fifo_cap),
    .if_empty_n(img_0_rows_c_empty_n),
    .if_read(medianBlur_3_1_9_600_1024_1_2_2_U0_p_src_rows_read)
);

color_analysis_fifo_w32_d2_S img_0_cols_c_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(AXIvideo2xfMat_24_9_600_1024_1_2_U0_img_0_cols_c_din),
    .if_full_n(img_0_cols_c_full_n),
    .if_write(AXIvideo2xfMat_24_9_600_1024_1_2_U0_img_0_cols_c_write),
    .if_dout(img_0_cols_c_dout),
    .if_num_data_valid(img_0_cols_c_num_data_valid),
    .if_fifo_cap(img_0_cols_c_fifo_cap),
    .if_empty_n(img_0_cols_c_empty_n),
    .if_read(medianBlur_3_1_9_600_1024_1_2_2_U0_p_src_cols_read)
);

color_analysis_fifo_w24_d2_S img_1_data_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(medianBlur_3_1_9_600_1024_1_2_2_U0_img_1_data164_din),
    .if_full_n(img_1_data_full_n),
    .if_write(medianBlur_3_1_9_600_1024_1_2_2_U0_img_1_data164_write),
    .if_dout(img_1_data_dout),
    .if_num_data_valid(img_1_data_num_data_valid),
    .if_fifo_cap(img_1_data_fifo_cap),
    .if_empty_n(img_1_data_empty_n),
    .if_read(ImgProcess_9_0_600_1024_1_2_U0_img_1_data164_read)
);

color_analysis_fifo_w8_d2_S img_2_data_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(ImgProcess_9_0_600_1024_1_2_U0_img_2_data165_din),
    .if_full_n(img_2_data_full_n),
    .if_write(ImgProcess_9_0_600_1024_1_2_U0_img_2_data165_write),
    .if_dout(img_2_data_dout),
    .if_num_data_valid(img_2_data_num_data_valid),
    .if_fifo_cap(img_2_data_fifo_cap),
    .if_empty_n(img_2_data_empty_n),
    .if_read(erode_0_0_600_1024_0_3_3_1_1_2_2_U0_img_2_data165_read)
);

color_analysis_fifo_w8_d2_S img_3_data_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(erode_0_0_600_1024_0_3_3_1_1_2_2_U0_img_3_data166_din),
    .if_full_n(img_3_data_full_n),
    .if_write(erode_0_0_600_1024_0_3_3_1_1_2_2_U0_img_3_data166_write),
    .if_dout(img_3_data_dout),
    .if_num_data_valid(img_3_data_num_data_valid),
    .if_fifo_cap(img_3_data_fifo_cap),
    .if_empty_n(img_3_data_empty_n),
    .if_read(dilate_0_0_600_1024_0_3_3_1_1_2_2_U0_img_3_data166_read)
);

color_analysis_fifo_w8_d2_S img_4_data_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(dilate_0_0_600_1024_0_3_3_1_1_2_2_U0_img_4_data167_din),
    .if_full_n(img_4_data_full_n),
    .if_write(dilate_0_0_600_1024_0_3_3_1_1_2_2_U0_img_4_data167_write),
    .if_dout(img_4_data_dout),
    .if_num_data_valid(img_4_data_num_data_valid),
    .if_fifo_cap(img_4_data_fifo_cap),
    .if_empty_n(img_4_data_empty_n),
    .if_read(duplicateMat_0_600_1024_1_2_2_2_U0_img_4_data167_read)
);

color_analysis_fifo_w8_d2_S img_4a_data_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(duplicateMat_0_600_1024_1_2_2_2_U0_img_4a_data168_din),
    .if_full_n(img_4a_data_full_n),
    .if_write(duplicateMat_0_600_1024_1_2_2_2_U0_img_4a_data168_write),
    .if_dout(img_4a_data_dout),
    .if_num_data_valid(img_4a_data_num_data_valid),
    .if_fifo_cap(img_4a_data_fifo_cap),
    .if_empty_n(img_4a_data_empty_n),
    .if_read(gray2rgb_0_9_600_1024_1_2_2_U0_img_4a_data168_read)
);

color_analysis_fifo_w8_d2_S img_4b_data_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(duplicateMat_0_600_1024_1_2_2_2_U0_img_4b_data169_din),
    .if_full_n(img_4b_data_full_n),
    .if_write(duplicateMat_0_600_1024_1_2_2_2_U0_img_4b_data169_write),
    .if_dout(img_4b_data_dout),
    .if_num_data_valid(img_4b_data_num_data_valid),
    .if_fifo_cap(img_4b_data_fifo_cap),
    .if_empty_n(img_4b_data_empty_n),
    .if_read(gray2rgb_0_9_600_1024_1_2_2_1_U0_img_4b_data169_read)
);

color_analysis_fifo_w24_d2_S img_5_data_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(gray2rgb_0_9_600_1024_1_2_2_U0_img_5_data170_din),
    .if_full_n(img_5_data_full_n),
    .if_write(gray2rgb_0_9_600_1024_1_2_2_U0_img_5_data170_write),
    .if_dout(img_5_data_dout),
    .if_num_data_valid(img_5_data_num_data_valid),
    .if_fifo_cap(img_5_data_fifo_cap),
    .if_empty_n(img_5_data_empty_n),
    .if_read(xfMat2AXIvideo_24_9_600_1024_1_2_U0_img_5_data170_read)
);

color_analysis_fifo_w24_d2_S img_6_data_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(gray2rgb_0_9_600_1024_1_2_2_1_U0_img_6_data171_din),
    .if_full_n(img_6_data_full_n),
    .if_write(gray2rgb_0_9_600_1024_1_2_2_1_U0_img_6_data171_write),
    .if_dout(img_6_data_dout),
    .if_num_data_valid(img_6_data_num_data_valid),
    .if_fifo_cap(img_6_data_fifo_cap),
    .if_empty_n(img_6_data_empty_n),
    .if_read(xfMat2AXIvideo_24_9_600_1024_1_2_2_U0_img_6_data171_read)
);

color_analysis_start_for_medianBlur_3_1_9_600_1024_1_2_2_U0 start_for_medianBlur_3_1_9_600_1024_1_2_2_U0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_medianBlur_3_1_9_600_1024_1_2_2_U0_din),
    .if_full_n(start_for_medianBlur_3_1_9_600_1024_1_2_2_U0_full_n),
    .if_write(AXIvideo2xfMat_24_9_600_1024_1_2_U0_start_write),
    .if_dout(start_for_medianBlur_3_1_9_600_1024_1_2_2_U0_dout),
    .if_empty_n(start_for_medianBlur_3_1_9_600_1024_1_2_2_U0_empty_n),
    .if_read(medianBlur_3_1_9_600_1024_1_2_2_U0_ap_ready)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_Block_entry1_proc_U0_ap_ready <= 1'b0;
    end else begin
        if (((ap_sync_ready & ap_start) == 1'b1)) begin
            ap_sync_reg_Block_entry1_proc_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_Block_entry1_proc_U0_ap_ready <= ap_sync_Block_entry1_proc_U0_ap_ready;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_img_0_cols_c24_channel <= 1'b0;
    end else begin
        if (((Block_entry1_proc_U0_ap_done & Block_entry1_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_img_0_cols_c24_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_img_0_cols_c24_channel <= ap_sync_channel_write_img_0_cols_c24_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_img_0_rows_c23_channel <= 1'b0;
    end else begin
        if (((Block_entry1_proc_U0_ap_done & Block_entry1_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_img_0_rows_c23_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_img_0_rows_c23_channel <= ap_sync_channel_write_img_0_rows_c23_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_img_1_cols_channel <= 1'b0;
    end else begin
        if (((Block_entry1_proc_U0_ap_done & Block_entry1_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_img_1_cols_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_img_1_cols_channel <= ap_sync_channel_write_img_1_cols_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_img_1_rows_channel <= 1'b0;
    end else begin
        if (((Block_entry1_proc_U0_ap_done & Block_entry1_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_img_1_rows_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_img_1_rows_channel <= ap_sync_channel_write_img_1_rows_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_img_2_cols_channel <= 1'b0;
    end else begin
        if (((Block_entry1_proc_U0_ap_done & Block_entry1_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_img_2_cols_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_img_2_cols_channel <= ap_sync_channel_write_img_2_cols_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_img_2_rows_channel <= 1'b0;
    end else begin
        if (((Block_entry1_proc_U0_ap_done & Block_entry1_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_img_2_rows_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_img_2_rows_channel <= ap_sync_channel_write_img_2_rows_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_img_3_cols_channel <= 1'b0;
    end else begin
        if (((Block_entry1_proc_U0_ap_done & Block_entry1_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_img_3_cols_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_img_3_cols_channel <= ap_sync_channel_write_img_3_cols_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_img_3_rows_channel <= 1'b0;
    end else begin
        if (((Block_entry1_proc_U0_ap_done & Block_entry1_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_img_3_rows_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_img_3_rows_channel <= ap_sync_channel_write_img_3_rows_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_img_4_cols_channel <= 1'b0;
    end else begin
        if (((Block_entry1_proc_U0_ap_done & Block_entry1_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_img_4_cols_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_img_4_cols_channel <= ap_sync_channel_write_img_4_cols_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_img_4_rows_channel <= 1'b0;
    end else begin
        if (((Block_entry1_proc_U0_ap_done & Block_entry1_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_img_4_rows_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_img_4_rows_channel <= ap_sync_channel_write_img_4_rows_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_img_4a_cols_channel <= 1'b0;
    end else begin
        if (((Block_entry1_proc_U0_ap_done & Block_entry1_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_img_4a_cols_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_img_4a_cols_channel <= ap_sync_channel_write_img_4a_cols_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_img_4a_rows_channel <= 1'b0;
    end else begin
        if (((Block_entry1_proc_U0_ap_done & Block_entry1_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_img_4a_rows_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_img_4a_rows_channel <= ap_sync_channel_write_img_4a_rows_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_img_4b_cols_channel <= 1'b0;
    end else begin
        if (((Block_entry1_proc_U0_ap_done & Block_entry1_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_img_4b_cols_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_img_4b_cols_channel <= ap_sync_channel_write_img_4b_cols_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_img_4b_rows_channel <= 1'b0;
    end else begin
        if (((Block_entry1_proc_U0_ap_done & Block_entry1_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_img_4b_rows_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_img_4b_rows_channel <= ap_sync_channel_write_img_4b_rows_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_img_5_cols_channel <= 1'b0;
    end else begin
        if (((Block_entry1_proc_U0_ap_done & Block_entry1_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_img_5_cols_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_img_5_cols_channel <= ap_sync_channel_write_img_5_cols_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_img_5_rows_channel <= 1'b0;
    end else begin
        if (((Block_entry1_proc_U0_ap_done & Block_entry1_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_img_5_rows_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_img_5_rows_channel <= ap_sync_channel_write_img_5_rows_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_img_6_cols_channel <= 1'b0;
    end else begin
        if (((Block_entry1_proc_U0_ap_done & Block_entry1_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_img_6_cols_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_img_6_cols_channel <= ap_sync_channel_write_img_6_cols_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_img_6_rows_channel <= 1'b0;
    end else begin
        if (((Block_entry1_proc_U0_ap_done & Block_entry1_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_img_6_rows_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_img_6_rows_channel <= ap_sync_channel_write_img_6_rows_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_entry_proc_U0_ap_ready <= 1'b0;
    end else begin
        if (((ap_sync_ready & ap_start) == 1'b1)) begin
            ap_sync_reg_entry_proc_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_entry_proc_U0_ap_ready <= ap_sync_entry_proc_U0_ap_ready;
        end
    end
end

assign AXIvideo2xfMat_24_9_600_1024_1_2_U0_ap_continue = 1'b1;

assign AXIvideo2xfMat_24_9_600_1024_1_2_U0_ap_start = (img_0_rows_c23_channel_empty_n & img_0_cols_c24_channel_empty_n);

assign Block_entry1_proc_U0_ap_continue = (ap_sync_channel_write_img_6_rows_channel & ap_sync_channel_write_img_6_cols_channel & ap_sync_channel_write_img_5_rows_channel & ap_sync_channel_write_img_5_cols_channel & ap_sync_channel_write_img_4b_rows_channel & ap_sync_channel_write_img_4b_cols_channel & ap_sync_channel_write_img_4a_rows_channel & ap_sync_channel_write_img_4a_cols_channel & ap_sync_channel_write_img_4_rows_channel & ap_sync_channel_write_img_4_cols_channel & ap_sync_channel_write_img_3_rows_channel & ap_sync_channel_write_img_3_cols_channel & ap_sync_channel_write_img_2_rows_channel & ap_sync_channel_write_img_2_cols_channel & ap_sync_channel_write_img_1_rows_channel & ap_sync_channel_write_img_1_cols_channel & ap_sync_channel_write_img_0_rows_c23_channel & ap_sync_channel_write_img_0_cols_c24_channel);

assign Block_entry1_proc_U0_ap_start = ((ap_sync_reg_Block_entry1_proc_U0_ap_ready ^ 1'b1) & ap_start);

assign INPUT_STREAM_TREADY = AXIvideo2xfMat_24_9_600_1024_1_2_U0_INPUT_STREAM_TREADY;

assign ImgProcess_9_0_600_1024_1_2_U0_ap_continue = 1'b1;

assign ImgProcess_9_0_600_1024_1_2_U0_ap_start = (img_1_rows_channel_empty_n & img_1_cols_channel_empty_n);

assign OUTPUT_STREAM_DIP_TDATA = xfMat2AXIvideo_24_9_600_1024_1_2_2_U0_OUTPUT_STREAM_DIP_TDATA;

assign OUTPUT_STREAM_DIP_TDEST = xfMat2AXIvideo_24_9_600_1024_1_2_2_U0_OUTPUT_STREAM_DIP_TDEST;

assign OUTPUT_STREAM_DIP_TID = xfMat2AXIvideo_24_9_600_1024_1_2_2_U0_OUTPUT_STREAM_DIP_TID;

assign OUTPUT_STREAM_DIP_TKEEP = xfMat2AXIvideo_24_9_600_1024_1_2_2_U0_OUTPUT_STREAM_DIP_TKEEP;

assign OUTPUT_STREAM_DIP_TLAST = xfMat2AXIvideo_24_9_600_1024_1_2_2_U0_OUTPUT_STREAM_DIP_TLAST;

assign OUTPUT_STREAM_DIP_TSTRB = xfMat2AXIvideo_24_9_600_1024_1_2_2_U0_OUTPUT_STREAM_DIP_TSTRB;

assign OUTPUT_STREAM_DIP_TUSER = xfMat2AXIvideo_24_9_600_1024_1_2_2_U0_OUTPUT_STREAM_DIP_TUSER;

assign OUTPUT_STREAM_DIP_TVALID = xfMat2AXIvideo_24_9_600_1024_1_2_2_U0_OUTPUT_STREAM_DIP_TVALID;

assign OUTPUT_STREAM_VIDEO_TDATA = xfMat2AXIvideo_24_9_600_1024_1_2_U0_OUTPUT_STREAM_VIDEO_TDATA;

assign OUTPUT_STREAM_VIDEO_TDEST = xfMat2AXIvideo_24_9_600_1024_1_2_U0_OUTPUT_STREAM_VIDEO_TDEST;

assign OUTPUT_STREAM_VIDEO_TID = xfMat2AXIvideo_24_9_600_1024_1_2_U0_OUTPUT_STREAM_VIDEO_TID;

assign OUTPUT_STREAM_VIDEO_TKEEP = xfMat2AXIvideo_24_9_600_1024_1_2_U0_OUTPUT_STREAM_VIDEO_TKEEP;

assign OUTPUT_STREAM_VIDEO_TLAST = xfMat2AXIvideo_24_9_600_1024_1_2_U0_OUTPUT_STREAM_VIDEO_TLAST;

assign OUTPUT_STREAM_VIDEO_TSTRB = xfMat2AXIvideo_24_9_600_1024_1_2_U0_OUTPUT_STREAM_VIDEO_TSTRB;

assign OUTPUT_STREAM_VIDEO_TUSER = xfMat2AXIvideo_24_9_600_1024_1_2_U0_OUTPUT_STREAM_VIDEO_TUSER;

assign OUTPUT_STREAM_VIDEO_TVALID = xfMat2AXIvideo_24_9_600_1024_1_2_U0_OUTPUT_STREAM_VIDEO_TVALID;

assign ap_channel_done_img_0_cols_c24_channel = ((ap_sync_reg_channel_write_img_0_cols_c24_channel ^ 1'b1) & Block_entry1_proc_U0_ap_done);

assign ap_channel_done_img_0_rows_c23_channel = ((ap_sync_reg_channel_write_img_0_rows_c23_channel ^ 1'b1) & Block_entry1_proc_U0_ap_done);

assign ap_channel_done_img_1_cols_channel = ((ap_sync_reg_channel_write_img_1_cols_channel ^ 1'b1) & Block_entry1_proc_U0_ap_done);

assign ap_channel_done_img_1_rows_channel = ((ap_sync_reg_channel_write_img_1_rows_channel ^ 1'b1) & Block_entry1_proc_U0_ap_done);

assign ap_channel_done_img_2_cols_channel = ((ap_sync_reg_channel_write_img_2_cols_channel ^ 1'b1) & Block_entry1_proc_U0_ap_done);

assign ap_channel_done_img_2_rows_channel = ((ap_sync_reg_channel_write_img_2_rows_channel ^ 1'b1) & Block_entry1_proc_U0_ap_done);

assign ap_channel_done_img_3_cols_channel = ((ap_sync_reg_channel_write_img_3_cols_channel ^ 1'b1) & Block_entry1_proc_U0_ap_done);

assign ap_channel_done_img_3_rows_channel = ((ap_sync_reg_channel_write_img_3_rows_channel ^ 1'b1) & Block_entry1_proc_U0_ap_done);

assign ap_channel_done_img_4_cols_channel = ((ap_sync_reg_channel_write_img_4_cols_channel ^ 1'b1) & Block_entry1_proc_U0_ap_done);

assign ap_channel_done_img_4_rows_channel = ((ap_sync_reg_channel_write_img_4_rows_channel ^ 1'b1) & Block_entry1_proc_U0_ap_done);

assign ap_channel_done_img_4a_cols_channel = ((ap_sync_reg_channel_write_img_4a_cols_channel ^ 1'b1) & Block_entry1_proc_U0_ap_done);

assign ap_channel_done_img_4a_rows_channel = ((ap_sync_reg_channel_write_img_4a_rows_channel ^ 1'b1) & Block_entry1_proc_U0_ap_done);

assign ap_channel_done_img_4b_cols_channel = ((ap_sync_reg_channel_write_img_4b_cols_channel ^ 1'b1) & Block_entry1_proc_U0_ap_done);

assign ap_channel_done_img_4b_rows_channel = ((ap_sync_reg_channel_write_img_4b_rows_channel ^ 1'b1) & Block_entry1_proc_U0_ap_done);

assign ap_channel_done_img_5_cols_channel = ((ap_sync_reg_channel_write_img_5_cols_channel ^ 1'b1) & Block_entry1_proc_U0_ap_done);

assign ap_channel_done_img_5_rows_channel = ((ap_sync_reg_channel_write_img_5_rows_channel ^ 1'b1) & Block_entry1_proc_U0_ap_done);

assign ap_channel_done_img_6_cols_channel = ((ap_sync_reg_channel_write_img_6_cols_channel ^ 1'b1) & Block_entry1_proc_U0_ap_done);

assign ap_channel_done_img_6_rows_channel = ((ap_sync_reg_channel_write_img_6_rows_channel ^ 1'b1) & Block_entry1_proc_U0_ap_done);

assign ap_done = ap_sync_done;

assign ap_idle = (xfMat2AXIvideo_24_9_600_1024_1_2_U0_ap_idle & xfMat2AXIvideo_24_9_600_1024_1_2_2_U0_ap_idle & medianBlur_3_1_9_600_1024_1_2_2_U0_ap_idle & gray2rgb_0_9_600_1024_1_2_2_U0_ap_idle & gray2rgb_0_9_600_1024_1_2_2_1_U0_ap_idle & (img_0_cols_c24_channel_empty_n ^ 1'b1) & (img_0_rows_c23_channel_empty_n ^ 1'b1) & (img_6_cols_channel_empty_n ^ 1'b1) & (img_6_rows_channel_empty_n ^ 1'b1) & (img_5_cols_channel_empty_n ^ 1'b1) & (img_5_rows_channel_empty_n ^ 1'b1) & (img_4b_cols_channel_empty_n ^ 1'b1) & (img_4b_rows_channel_empty_n ^ 1'b1) & (img_4a_cols_channel_empty_n ^ 1'b1) & (img_4a_rows_channel_empty_n ^ 1'b1) & (img_4_cols_channel_empty_n ^ 1'b1) & (img_4_rows_channel_empty_n ^ 1'b1) & (img_3_cols_channel_empty_n ^ 1'b1) & (img_3_rows_channel_empty_n ^ 1'b1) & (img_2_cols_channel_empty_n ^ 1'b1) & (img_2_rows_channel_empty_n ^ 1'b1) & (img_1_cols_channel_empty_n ^ 1'b1) & (img_1_rows_channel_empty_n ^ 1'b1) & erode_0_0_600_1024_0_3_3_1_1_2_2_U0_ap_idle & entry_proc_U0_ap_idle & duplicateMat_0_600_1024_1_2_2_2_U0_ap_idle & dilate_0_0_600_1024_0_3_3_1_1_2_2_U0_ap_idle & ImgProcess_9_0_600_1024_1_2_U0_ap_idle & Block_entry1_proc_U0_ap_idle & AXIvideo2xfMat_24_9_600_1024_1_2_U0_ap_idle);

assign ap_ready = ap_sync_ready;

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign ap_sync_Block_entry1_proc_U0_ap_ready = (ap_sync_reg_Block_entry1_proc_U0_ap_ready | Block_entry1_proc_U0_ap_ready);

assign ap_sync_channel_write_img_0_cols_c24_channel = ((img_0_cols_c24_channel_full_n & ap_channel_done_img_0_cols_c24_channel) | ap_sync_reg_channel_write_img_0_cols_c24_channel);

assign ap_sync_channel_write_img_0_rows_c23_channel = ((img_0_rows_c23_channel_full_n & ap_channel_done_img_0_rows_c23_channel) | ap_sync_reg_channel_write_img_0_rows_c23_channel);

assign ap_sync_channel_write_img_1_cols_channel = ((img_1_cols_channel_full_n & ap_channel_done_img_1_cols_channel) | ap_sync_reg_channel_write_img_1_cols_channel);

assign ap_sync_channel_write_img_1_rows_channel = ((img_1_rows_channel_full_n & ap_channel_done_img_1_rows_channel) | ap_sync_reg_channel_write_img_1_rows_channel);

assign ap_sync_channel_write_img_2_cols_channel = ((img_2_cols_channel_full_n & ap_channel_done_img_2_cols_channel) | ap_sync_reg_channel_write_img_2_cols_channel);

assign ap_sync_channel_write_img_2_rows_channel = ((img_2_rows_channel_full_n & ap_channel_done_img_2_rows_channel) | ap_sync_reg_channel_write_img_2_rows_channel);

assign ap_sync_channel_write_img_3_cols_channel = ((img_3_cols_channel_full_n & ap_channel_done_img_3_cols_channel) | ap_sync_reg_channel_write_img_3_cols_channel);

assign ap_sync_channel_write_img_3_rows_channel = ((img_3_rows_channel_full_n & ap_channel_done_img_3_rows_channel) | ap_sync_reg_channel_write_img_3_rows_channel);

assign ap_sync_channel_write_img_4_cols_channel = ((img_4_cols_channel_full_n & ap_channel_done_img_4_cols_channel) | ap_sync_reg_channel_write_img_4_cols_channel);

assign ap_sync_channel_write_img_4_rows_channel = ((img_4_rows_channel_full_n & ap_channel_done_img_4_rows_channel) | ap_sync_reg_channel_write_img_4_rows_channel);

assign ap_sync_channel_write_img_4a_cols_channel = ((img_4a_cols_channel_full_n & ap_channel_done_img_4a_cols_channel) | ap_sync_reg_channel_write_img_4a_cols_channel);

assign ap_sync_channel_write_img_4a_rows_channel = ((img_4a_rows_channel_full_n & ap_channel_done_img_4a_rows_channel) | ap_sync_reg_channel_write_img_4a_rows_channel);

assign ap_sync_channel_write_img_4b_cols_channel = ((img_4b_cols_channel_full_n & ap_channel_done_img_4b_cols_channel) | ap_sync_reg_channel_write_img_4b_cols_channel);

assign ap_sync_channel_write_img_4b_rows_channel = ((img_4b_rows_channel_full_n & ap_channel_done_img_4b_rows_channel) | ap_sync_reg_channel_write_img_4b_rows_channel);

assign ap_sync_channel_write_img_5_cols_channel = ((img_5_cols_channel_full_n & ap_channel_done_img_5_cols_channel) | ap_sync_reg_channel_write_img_5_cols_channel);

assign ap_sync_channel_write_img_5_rows_channel = ((img_5_rows_channel_full_n & ap_channel_done_img_5_rows_channel) | ap_sync_reg_channel_write_img_5_rows_channel);

assign ap_sync_channel_write_img_6_cols_channel = ((img_6_cols_channel_full_n & ap_channel_done_img_6_cols_channel) | ap_sync_reg_channel_write_img_6_cols_channel);

assign ap_sync_channel_write_img_6_rows_channel = ((img_6_rows_channel_full_n & ap_channel_done_img_6_rows_channel) | ap_sync_reg_channel_write_img_6_rows_channel);

assign ap_sync_done = (xfMat2AXIvideo_24_9_600_1024_1_2_U0_ap_done & xfMat2AXIvideo_24_9_600_1024_1_2_2_U0_ap_done);

assign ap_sync_entry_proc_U0_ap_ready = (entry_proc_U0_ap_ready | ap_sync_reg_entry_proc_U0_ap_ready);

assign ap_sync_ready = (ap_sync_entry_proc_U0_ap_ready & ap_sync_Block_entry1_proc_U0_ap_ready);

assign dilate_0_0_600_1024_0_3_3_1_1_2_2_U0_ap_continue = 1'b1;

assign dilate_0_0_600_1024_0_3_3_1_1_2_2_U0_ap_start = (img_3_rows_channel_empty_n & img_3_cols_channel_empty_n);

assign duplicateMat_0_600_1024_1_2_2_2_U0_ap_continue = 1'b1;

assign duplicateMat_0_600_1024_1_2_2_2_U0_ap_start = (img_4_rows_channel_empty_n & img_4_cols_channel_empty_n);

assign entry_proc_U0_ap_continue = 1'b1;

assign entry_proc_U0_ap_start = ((ap_sync_reg_entry_proc_U0_ap_ready ^ 1'b1) & ap_start);

assign erode_0_0_600_1024_0_3_3_1_1_2_2_U0_ap_continue = 1'b1;

assign erode_0_0_600_1024_0_3_3_1_1_2_2_U0_ap_start = (img_2_rows_channel_empty_n & img_2_cols_channel_empty_n);

assign gray2rgb_0_9_600_1024_1_2_2_1_U0_ap_continue = 1'b1;

assign gray2rgb_0_9_600_1024_1_2_2_1_U0_ap_start = (img_4b_rows_channel_empty_n & img_4b_cols_channel_empty_n);

assign gray2rgb_0_9_600_1024_1_2_2_U0_ap_continue = 1'b1;

assign gray2rgb_0_9_600_1024_1_2_2_U0_ap_start = (img_4a_rows_channel_empty_n & img_4a_cols_channel_empty_n);

assign medianBlur_3_1_9_600_1024_1_2_2_U0_ap_continue = 1'b1;

assign medianBlur_3_1_9_600_1024_1_2_2_U0_ap_start = start_for_medianBlur_3_1_9_600_1024_1_2_2_U0_empty_n;

assign start_for_medianBlur_3_1_9_600_1024_1_2_2_U0_din = 1'b1;

assign xfMat2AXIvideo_24_9_600_1024_1_2_2_U0_ap_continue = ap_sync_done;

assign xfMat2AXIvideo_24_9_600_1024_1_2_2_U0_ap_start = (img_6_rows_channel_empty_n & img_6_cols_channel_empty_n);

assign xfMat2AXIvideo_24_9_600_1024_1_2_U0_ap_continue = ap_sync_done;

assign xfMat2AXIvideo_24_9_600_1024_1_2_U0_ap_start = (img_5_rows_channel_empty_n & img_5_cols_channel_empty_n);


reg find_df_deadlock = 0;
// synthesis translate_off
`include "color_analysis_hls_deadlock_detector.vh"
// synthesis translate_on

reg find_kernel_block = 0;
// synthesis translate_off
`include "color_analysis_hls_deadlock_kernel_monitor_top.vh"
// synthesis translate_on

endmodule //color_analysis

