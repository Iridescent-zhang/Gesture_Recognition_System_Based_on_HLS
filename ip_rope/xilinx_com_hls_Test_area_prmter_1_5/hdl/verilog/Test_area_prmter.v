// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="Test_area_prmter_Test_area_prmter,hls_ip_2022_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=6.912000,HLS_SYN_LAT=621006,HLS_SYN_TPT=621007,HLS_SYN_MEM=1,HLS_SYN_DSP=0,HLS_SYN_FF=1260,HLS_SYN_LUT=2038,HLS_VERSION=2022_2}" *)

module Test_area_prmter (
        s_axi_CONTROL_BUS_AWVALID,
        s_axi_CONTROL_BUS_AWREADY,
        s_axi_CONTROL_BUS_AWADDR,
        s_axi_CONTROL_BUS_WVALID,
        s_axi_CONTROL_BUS_WREADY,
        s_axi_CONTROL_BUS_WDATA,
        s_axi_CONTROL_BUS_WSTRB,
        s_axi_CONTROL_BUS_ARVALID,
        s_axi_CONTROL_BUS_ARREADY,
        s_axi_CONTROL_BUS_ARADDR,
        s_axi_CONTROL_BUS_RVALID,
        s_axi_CONTROL_BUS_RREADY,
        s_axi_CONTROL_BUS_RDATA,
        s_axi_CONTROL_BUS_RRESP,
        s_axi_CONTROL_BUS_BVALID,
        s_axi_CONTROL_BUS_BREADY,
        s_axi_CONTROL_BUS_BRESP,
        ap_clk,
        ap_rst_n,
        interrupt,
        INPUT_STREAM_TDATA,
        INPUT_STREAM_TKEEP,
        INPUT_STREAM_TSTRB,
        INPUT_STREAM_TUSER,
        INPUT_STREAM_TLAST,
        INPUT_STREAM_TID,
        INPUT_STREAM_TDEST,
        result_Addr_A,
        result_EN_A,
        result_Din_A,
        result_Dout_A,
        result_WEN_A,
        result_Clk_A,
        result_Rst_A,
        INPUT_STREAM_TVALID,
        INPUT_STREAM_TREADY
);

parameter    C_S_AXI_CONTROL_BUS_DATA_WIDTH = 32;
parameter    C_S_AXI_CONTROL_BUS_ADDR_WIDTH = 4;
parameter    C_S_AXI_DATA_WIDTH = 32;

parameter C_S_AXI_CONTROL_BUS_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);

input   s_axi_CONTROL_BUS_AWVALID;
output   s_axi_CONTROL_BUS_AWREADY;
input  [C_S_AXI_CONTROL_BUS_ADDR_WIDTH - 1:0] s_axi_CONTROL_BUS_AWADDR;
input   s_axi_CONTROL_BUS_WVALID;
output   s_axi_CONTROL_BUS_WREADY;
input  [C_S_AXI_CONTROL_BUS_DATA_WIDTH - 1:0] s_axi_CONTROL_BUS_WDATA;
input  [C_S_AXI_CONTROL_BUS_WSTRB_WIDTH - 1:0] s_axi_CONTROL_BUS_WSTRB;
input   s_axi_CONTROL_BUS_ARVALID;
output   s_axi_CONTROL_BUS_ARREADY;
input  [C_S_AXI_CONTROL_BUS_ADDR_WIDTH - 1:0] s_axi_CONTROL_BUS_ARADDR;
output   s_axi_CONTROL_BUS_RVALID;
input   s_axi_CONTROL_BUS_RREADY;
output  [C_S_AXI_CONTROL_BUS_DATA_WIDTH - 1:0] s_axi_CONTROL_BUS_RDATA;
output  [1:0] s_axi_CONTROL_BUS_RRESP;
output   s_axi_CONTROL_BUS_BVALID;
input   s_axi_CONTROL_BUS_BREADY;
output  [1:0] s_axi_CONTROL_BUS_BRESP;
input   ap_clk;
input   ap_rst_n;
output   interrupt;
input  [23:0] INPUT_STREAM_TDATA;
input  [2:0] INPUT_STREAM_TKEEP;
input  [2:0] INPUT_STREAM_TSTRB;
input  [0:0] INPUT_STREAM_TUSER;
input  [0:0] INPUT_STREAM_TLAST;
input  [0:0] INPUT_STREAM_TID;
input  [0:0] INPUT_STREAM_TDEST;
output  [31:0] result_Addr_A;
output   result_EN_A;
output  [31:0] result_Din_A;
input  [31:0] result_Dout_A;
output  [3:0] result_WEN_A;
output   result_Clk_A;
output   result_Rst_A;
input   INPUT_STREAM_TVALID;
output   INPUT_STREAM_TREADY;

 reg    ap_rst_n_inv;
wire    ap_start;
wire    ap_ready;
wire    ap_done;
wire    ap_idle;
wire    AXIvideo2xfMat_24_9_600_1024_1_2_U0_ap_start;
wire    AXIvideo2xfMat_24_9_600_1024_1_2_U0_ap_done;
wire    AXIvideo2xfMat_24_9_600_1024_1_2_U0_ap_continue;
wire    AXIvideo2xfMat_24_9_600_1024_1_2_U0_ap_idle;
wire    AXIvideo2xfMat_24_9_600_1024_1_2_U0_ap_ready;
wire    AXIvideo2xfMat_24_9_600_1024_1_2_U0_start_out;
wire    AXIvideo2xfMat_24_9_600_1024_1_2_U0_start_write;
wire    AXIvideo2xfMat_24_9_600_1024_1_2_U0_INPUT_STREAM_TREADY;
wire   [23:0] AXIvideo2xfMat_24_9_600_1024_1_2_U0_img_0_data14_din;
wire    AXIvideo2xfMat_24_9_600_1024_1_2_U0_img_0_data14_write;
wire   [9:0] AXIvideo2xfMat_24_9_600_1024_1_2_U0_img_0_rows_c_din;
wire    AXIvideo2xfMat_24_9_600_1024_1_2_U0_img_0_rows_c_write;
wire   [10:0] AXIvideo2xfMat_24_9_600_1024_1_2_U0_img_0_cols_c_din;
wire    AXIvideo2xfMat_24_9_600_1024_1_2_U0_img_0_cols_c_write;
wire    rgb2gray_9_0_600_1024_1_2_2_U0_ap_start;
wire    rgb2gray_9_0_600_1024_1_2_2_U0_ap_done;
wire    rgb2gray_9_0_600_1024_1_2_2_U0_ap_continue;
wire    rgb2gray_9_0_600_1024_1_2_2_U0_ap_idle;
wire    rgb2gray_9_0_600_1024_1_2_2_U0_ap_ready;
wire    rgb2gray_9_0_600_1024_1_2_2_U0_start_out;
wire    rgb2gray_9_0_600_1024_1_2_2_U0_start_write;
wire    rgb2gray_9_0_600_1024_1_2_2_U0_p_src_rows_read;
wire    rgb2gray_9_0_600_1024_1_2_2_U0_p_src_cols_read;
wire    rgb2gray_9_0_600_1024_1_2_2_U0_img_0_data14_read;
wire   [7:0] rgb2gray_9_0_600_1024_1_2_2_U0_img_1_data15_din;
wire    rgb2gray_9_0_600_1024_1_2_2_U0_img_1_data15_write;
wire    ImgProcess_0_600_1024_1_2_U0_ap_start;
wire    ImgProcess_0_600_1024_1_2_U0_ap_done;
wire    ImgProcess_0_600_1024_1_2_U0_ap_continue;
wire    ImgProcess_0_600_1024_1_2_U0_ap_idle;
wire    ImgProcess_0_600_1024_1_2_U0_ap_ready;
wire    ImgProcess_0_600_1024_1_2_U0_img_1_data15_read;
wire   [31:0] ImgProcess_0_600_1024_1_2_U0_ap_return_0;
wire   [31:0] ImgProcess_0_600_1024_1_2_U0_ap_return_1;
wire    ap_channel_done_param2;
wire    param2_full_n;
reg    ap_sync_reg_channel_write_param2;
wire    ap_sync_channel_write_param2;
wire    ap_channel_done_param1;
wire    param1_full_n;
reg    ap_sync_reg_channel_write_param1;
wire    ap_sync_channel_write_param1;
wire    Block_entry15_proc_U0_ap_start;
wire    Block_entry15_proc_U0_ap_done;
wire    Block_entry15_proc_U0_ap_continue;
wire    Block_entry15_proc_U0_ap_idle;
wire    Block_entry15_proc_U0_ap_ready;
wire   [31:0] Block_entry15_proc_U0_result_Addr_A;
wire    Block_entry15_proc_U0_result_EN_A;
wire   [3:0] Block_entry15_proc_U0_result_WEN_A;
wire   [31:0] Block_entry15_proc_U0_result_Din_A;
wire    img_0_data_full_n;
wire   [23:0] img_0_data_dout;
wire   [1:0] img_0_data_num_data_valid;
wire   [1:0] img_0_data_fifo_cap;
wire    img_0_data_empty_n;
wire    img_0_rows_c_full_n;
wire   [9:0] img_0_rows_c_dout;
wire   [1:0] img_0_rows_c_num_data_valid;
wire   [1:0] img_0_rows_c_fifo_cap;
wire    img_0_rows_c_empty_n;
wire    img_0_cols_c_full_n;
wire   [10:0] img_0_cols_c_dout;
wire   [1:0] img_0_cols_c_num_data_valid;
wire   [1:0] img_0_cols_c_fifo_cap;
wire    img_0_cols_c_empty_n;
wire    img_1_data_full_n;
wire   [7:0] img_1_data_dout;
wire   [1:0] img_1_data_num_data_valid;
wire   [1:0] img_1_data_fifo_cap;
wire    img_1_data_empty_n;
wire   [31:0] param1_dout;
wire   [1:0] param1_num_data_valid;
wire   [1:0] param1_fifo_cap;
wire    param1_empty_n;
wire   [31:0] param2_dout;
wire   [1:0] param2_num_data_valid;
wire   [1:0] param2_fifo_cap;
wire    param2_empty_n;
wire   [0:0] start_for_rgb2gray_9_0_600_1024_1_2_2_U0_din;
wire    start_for_rgb2gray_9_0_600_1024_1_2_2_U0_full_n;
wire   [0:0] start_for_rgb2gray_9_0_600_1024_1_2_2_U0_dout;
wire    start_for_rgb2gray_9_0_600_1024_1_2_2_U0_empty_n;
wire   [0:0] start_for_ImgProcess_0_600_1024_1_2_U0_din;
wire    start_for_ImgProcess_0_600_1024_1_2_U0_full_n;
wire   [0:0] start_for_ImgProcess_0_600_1024_1_2_U0_dout;
wire    start_for_ImgProcess_0_600_1024_1_2_U0_empty_n;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_sync_reg_channel_write_param2 = 1'b0;
#0 ap_sync_reg_channel_write_param1 = 1'b0;
end

Test_area_prmter_CONTROL_BUS_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CONTROL_BUS_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CONTROL_BUS_DATA_WIDTH ))
CONTROL_BUS_s_axi_U(
    .AWVALID(s_axi_CONTROL_BUS_AWVALID),
    .AWREADY(s_axi_CONTROL_BUS_AWREADY),
    .AWADDR(s_axi_CONTROL_BUS_AWADDR),
    .WVALID(s_axi_CONTROL_BUS_WVALID),
    .WREADY(s_axi_CONTROL_BUS_WREADY),
    .WDATA(s_axi_CONTROL_BUS_WDATA),
    .WSTRB(s_axi_CONTROL_BUS_WSTRB),
    .ARVALID(s_axi_CONTROL_BUS_ARVALID),
    .ARREADY(s_axi_CONTROL_BUS_ARREADY),
    .ARADDR(s_axi_CONTROL_BUS_ARADDR),
    .RVALID(s_axi_CONTROL_BUS_RVALID),
    .RREADY(s_axi_CONTROL_BUS_RREADY),
    .RDATA(s_axi_CONTROL_BUS_RDATA),
    .RRESP(s_axi_CONTROL_BUS_RRESP),
    .BVALID(s_axi_CONTROL_BUS_BVALID),
    .BREADY(s_axi_CONTROL_BUS_BREADY),
    .BRESP(s_axi_CONTROL_BUS_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle)
);

Test_area_prmter_AXIvideo2xfMat_24_9_600_1024_1_2_s AXIvideo2xfMat_24_9_600_1024_1_2_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(AXIvideo2xfMat_24_9_600_1024_1_2_U0_ap_start),
    .start_full_n(start_for_rgb2gray_9_0_600_1024_1_2_2_U0_full_n),
    .ap_done(AXIvideo2xfMat_24_9_600_1024_1_2_U0_ap_done),
    .ap_continue(AXIvideo2xfMat_24_9_600_1024_1_2_U0_ap_continue),
    .ap_idle(AXIvideo2xfMat_24_9_600_1024_1_2_U0_ap_idle),
    .ap_ready(AXIvideo2xfMat_24_9_600_1024_1_2_U0_ap_ready),
    .start_out(AXIvideo2xfMat_24_9_600_1024_1_2_U0_start_out),
    .start_write(AXIvideo2xfMat_24_9_600_1024_1_2_U0_start_write),
    .INPUT_STREAM_TDATA(INPUT_STREAM_TDATA),
    .INPUT_STREAM_TVALID(INPUT_STREAM_TVALID),
    .INPUT_STREAM_TREADY(AXIvideo2xfMat_24_9_600_1024_1_2_U0_INPUT_STREAM_TREADY),
    .INPUT_STREAM_TKEEP(INPUT_STREAM_TKEEP),
    .INPUT_STREAM_TSTRB(INPUT_STREAM_TSTRB),
    .INPUT_STREAM_TUSER(INPUT_STREAM_TUSER),
    .INPUT_STREAM_TLAST(INPUT_STREAM_TLAST),
    .INPUT_STREAM_TID(INPUT_STREAM_TID),
    .INPUT_STREAM_TDEST(INPUT_STREAM_TDEST),
    .img_0_data14_din(AXIvideo2xfMat_24_9_600_1024_1_2_U0_img_0_data14_din),
    .img_0_data14_num_data_valid(img_0_data_num_data_valid),
    .img_0_data14_fifo_cap(img_0_data_fifo_cap),
    .img_0_data14_full_n(img_0_data_full_n),
    .img_0_data14_write(AXIvideo2xfMat_24_9_600_1024_1_2_U0_img_0_data14_write),
    .img_0_rows_c_din(AXIvideo2xfMat_24_9_600_1024_1_2_U0_img_0_rows_c_din),
    .img_0_rows_c_num_data_valid(img_0_rows_c_num_data_valid),
    .img_0_rows_c_fifo_cap(img_0_rows_c_fifo_cap),
    .img_0_rows_c_full_n(img_0_rows_c_full_n),
    .img_0_rows_c_write(AXIvideo2xfMat_24_9_600_1024_1_2_U0_img_0_rows_c_write),
    .img_0_cols_c_din(AXIvideo2xfMat_24_9_600_1024_1_2_U0_img_0_cols_c_din),
    .img_0_cols_c_num_data_valid(img_0_cols_c_num_data_valid),
    .img_0_cols_c_fifo_cap(img_0_cols_c_fifo_cap),
    .img_0_cols_c_full_n(img_0_cols_c_full_n),
    .img_0_cols_c_write(AXIvideo2xfMat_24_9_600_1024_1_2_U0_img_0_cols_c_write)
);

Test_area_prmter_rgb2gray_9_0_600_1024_1_2_2_s rgb2gray_9_0_600_1024_1_2_2_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(rgb2gray_9_0_600_1024_1_2_2_U0_ap_start),
    .start_full_n(start_for_ImgProcess_0_600_1024_1_2_U0_full_n),
    .ap_done(rgb2gray_9_0_600_1024_1_2_2_U0_ap_done),
    .ap_continue(rgb2gray_9_0_600_1024_1_2_2_U0_ap_continue),
    .ap_idle(rgb2gray_9_0_600_1024_1_2_2_U0_ap_idle),
    .ap_ready(rgb2gray_9_0_600_1024_1_2_2_U0_ap_ready),
    .start_out(rgb2gray_9_0_600_1024_1_2_2_U0_start_out),
    .start_write(rgb2gray_9_0_600_1024_1_2_2_U0_start_write),
    .p_src_rows_dout(img_0_rows_c_dout),
    .p_src_rows_num_data_valid(img_0_rows_c_num_data_valid),
    .p_src_rows_fifo_cap(img_0_rows_c_fifo_cap),
    .p_src_rows_empty_n(img_0_rows_c_empty_n),
    .p_src_rows_read(rgb2gray_9_0_600_1024_1_2_2_U0_p_src_rows_read),
    .p_src_cols_dout(img_0_cols_c_dout),
    .p_src_cols_num_data_valid(img_0_cols_c_num_data_valid),
    .p_src_cols_fifo_cap(img_0_cols_c_fifo_cap),
    .p_src_cols_empty_n(img_0_cols_c_empty_n),
    .p_src_cols_read(rgb2gray_9_0_600_1024_1_2_2_U0_p_src_cols_read),
    .img_0_data14_dout(img_0_data_dout),
    .img_0_data14_num_data_valid(img_0_data_num_data_valid),
    .img_0_data14_fifo_cap(img_0_data_fifo_cap),
    .img_0_data14_empty_n(img_0_data_empty_n),
    .img_0_data14_read(rgb2gray_9_0_600_1024_1_2_2_U0_img_0_data14_read),
    .img_1_data15_din(rgb2gray_9_0_600_1024_1_2_2_U0_img_1_data15_din),
    .img_1_data15_num_data_valid(img_1_data_num_data_valid),
    .img_1_data15_fifo_cap(img_1_data_fifo_cap),
    .img_1_data15_full_n(img_1_data_full_n),
    .img_1_data15_write(rgb2gray_9_0_600_1024_1_2_2_U0_img_1_data15_write)
);

Test_area_prmter_ImgProcess_0_600_1024_1_2_s ImgProcess_0_600_1024_1_2_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(ImgProcess_0_600_1024_1_2_U0_ap_start),
    .ap_done(ImgProcess_0_600_1024_1_2_U0_ap_done),
    .ap_continue(ImgProcess_0_600_1024_1_2_U0_ap_continue),
    .ap_idle(ImgProcess_0_600_1024_1_2_U0_ap_idle),
    .ap_ready(ImgProcess_0_600_1024_1_2_U0_ap_ready),
    .img_1_data15_dout(img_1_data_dout),
    .img_1_data15_num_data_valid(img_1_data_num_data_valid),
    .img_1_data15_fifo_cap(img_1_data_fifo_cap),
    .img_1_data15_empty_n(img_1_data_empty_n),
    .img_1_data15_read(ImgProcess_0_600_1024_1_2_U0_img_1_data15_read),
    .ap_return_0(ImgProcess_0_600_1024_1_2_U0_ap_return_0),
    .ap_return_1(ImgProcess_0_600_1024_1_2_U0_ap_return_1)
);

Test_area_prmter_Block_entry15_proc Block_entry15_proc_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(Block_entry15_proc_U0_ap_start),
    .ap_done(Block_entry15_proc_U0_ap_done),
    .ap_continue(Block_entry15_proc_U0_ap_continue),
    .ap_idle(Block_entry15_proc_U0_ap_idle),
    .ap_ready(Block_entry15_proc_U0_ap_ready),
    .p_read(param1_dout),
    .result_Addr_A(Block_entry15_proc_U0_result_Addr_A),
    .result_EN_A(Block_entry15_proc_U0_result_EN_A),
    .result_WEN_A(Block_entry15_proc_U0_result_WEN_A),
    .result_Din_A(Block_entry15_proc_U0_result_Din_A),
    .result_Dout_A(32'd0),
    .p_read1(param2_dout)
);

Test_area_prmter_fifo_w24_d2_S img_0_data_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(AXIvideo2xfMat_24_9_600_1024_1_2_U0_img_0_data14_din),
    .if_full_n(img_0_data_full_n),
    .if_write(AXIvideo2xfMat_24_9_600_1024_1_2_U0_img_0_data14_write),
    .if_dout(img_0_data_dout),
    .if_num_data_valid(img_0_data_num_data_valid),
    .if_fifo_cap(img_0_data_fifo_cap),
    .if_empty_n(img_0_data_empty_n),
    .if_read(rgb2gray_9_0_600_1024_1_2_2_U0_img_0_data14_read)
);

Test_area_prmter_fifo_w10_d2_S img_0_rows_c_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(AXIvideo2xfMat_24_9_600_1024_1_2_U0_img_0_rows_c_din),
    .if_full_n(img_0_rows_c_full_n),
    .if_write(AXIvideo2xfMat_24_9_600_1024_1_2_U0_img_0_rows_c_write),
    .if_dout(img_0_rows_c_dout),
    .if_num_data_valid(img_0_rows_c_num_data_valid),
    .if_fifo_cap(img_0_rows_c_fifo_cap),
    .if_empty_n(img_0_rows_c_empty_n),
    .if_read(rgb2gray_9_0_600_1024_1_2_2_U0_p_src_rows_read)
);

Test_area_prmter_fifo_w11_d2_S img_0_cols_c_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(AXIvideo2xfMat_24_9_600_1024_1_2_U0_img_0_cols_c_din),
    .if_full_n(img_0_cols_c_full_n),
    .if_write(AXIvideo2xfMat_24_9_600_1024_1_2_U0_img_0_cols_c_write),
    .if_dout(img_0_cols_c_dout),
    .if_num_data_valid(img_0_cols_c_num_data_valid),
    .if_fifo_cap(img_0_cols_c_fifo_cap),
    .if_empty_n(img_0_cols_c_empty_n),
    .if_read(rgb2gray_9_0_600_1024_1_2_2_U0_p_src_cols_read)
);

Test_area_prmter_fifo_w8_d2_S img_1_data_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(rgb2gray_9_0_600_1024_1_2_2_U0_img_1_data15_din),
    .if_full_n(img_1_data_full_n),
    .if_write(rgb2gray_9_0_600_1024_1_2_2_U0_img_1_data15_write),
    .if_dout(img_1_data_dout),
    .if_num_data_valid(img_1_data_num_data_valid),
    .if_fifo_cap(img_1_data_fifo_cap),
    .if_empty_n(img_1_data_empty_n),
    .if_read(ImgProcess_0_600_1024_1_2_U0_img_1_data15_read)
);

Test_area_prmter_fifo_w32_d2_S param1_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(ImgProcess_0_600_1024_1_2_U0_ap_return_0),
    .if_full_n(param1_full_n),
    .if_write(ap_channel_done_param1),
    .if_dout(param1_dout),
    .if_num_data_valid(param1_num_data_valid),
    .if_fifo_cap(param1_fifo_cap),
    .if_empty_n(param1_empty_n),
    .if_read(Block_entry15_proc_U0_ap_ready)
);

Test_area_prmter_fifo_w32_d2_S param2_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(ImgProcess_0_600_1024_1_2_U0_ap_return_1),
    .if_full_n(param2_full_n),
    .if_write(ap_channel_done_param2),
    .if_dout(param2_dout),
    .if_num_data_valid(param2_num_data_valid),
    .if_fifo_cap(param2_fifo_cap),
    .if_empty_n(param2_empty_n),
    .if_read(Block_entry15_proc_U0_ap_ready)
);

Test_area_prmter_start_for_rgb2gray_9_0_600_1024_1_2_2_U0 start_for_rgb2gray_9_0_600_1024_1_2_2_U0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_rgb2gray_9_0_600_1024_1_2_2_U0_din),
    .if_full_n(start_for_rgb2gray_9_0_600_1024_1_2_2_U0_full_n),
    .if_write(AXIvideo2xfMat_24_9_600_1024_1_2_U0_start_write),
    .if_dout(start_for_rgb2gray_9_0_600_1024_1_2_2_U0_dout),
    .if_empty_n(start_for_rgb2gray_9_0_600_1024_1_2_2_U0_empty_n),
    .if_read(rgb2gray_9_0_600_1024_1_2_2_U0_ap_ready)
);

Test_area_prmter_start_for_ImgProcess_0_600_1024_1_2_U0 start_for_ImgProcess_0_600_1024_1_2_U0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_ImgProcess_0_600_1024_1_2_U0_din),
    .if_full_n(start_for_ImgProcess_0_600_1024_1_2_U0_full_n),
    .if_write(rgb2gray_9_0_600_1024_1_2_2_U0_start_write),
    .if_dout(start_for_ImgProcess_0_600_1024_1_2_U0_dout),
    .if_empty_n(start_for_ImgProcess_0_600_1024_1_2_U0_empty_n),
    .if_read(ImgProcess_0_600_1024_1_2_U0_ap_ready)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_param1 <= 1'b0;
    end else begin
        if (((ImgProcess_0_600_1024_1_2_U0_ap_done & ImgProcess_0_600_1024_1_2_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_param1 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_param1 <= ap_sync_channel_write_param1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_param2 <= 1'b0;
    end else begin
        if (((ImgProcess_0_600_1024_1_2_U0_ap_done & ImgProcess_0_600_1024_1_2_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_param2 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_param2 <= ap_sync_channel_write_param2;
        end
    end
end

assign AXIvideo2xfMat_24_9_600_1024_1_2_U0_ap_continue = 1'b1;

assign AXIvideo2xfMat_24_9_600_1024_1_2_U0_ap_start = ap_start;

assign Block_entry15_proc_U0_ap_continue = 1'b1;

assign Block_entry15_proc_U0_ap_start = (param2_empty_n & param1_empty_n);

assign INPUT_STREAM_TREADY = AXIvideo2xfMat_24_9_600_1024_1_2_U0_INPUT_STREAM_TREADY;

assign ImgProcess_0_600_1024_1_2_U0_ap_continue = (ap_sync_channel_write_param2 & ap_sync_channel_write_param1);

assign ImgProcess_0_600_1024_1_2_U0_ap_start = start_for_ImgProcess_0_600_1024_1_2_U0_empty_n;

assign ap_channel_done_param1 = ((ap_sync_reg_channel_write_param1 ^ 1'b1) & ImgProcess_0_600_1024_1_2_U0_ap_done);

assign ap_channel_done_param2 = ((ap_sync_reg_channel_write_param2 ^ 1'b1) & ImgProcess_0_600_1024_1_2_U0_ap_done);

assign ap_done = Block_entry15_proc_U0_ap_done;

assign ap_idle = (rgb2gray_9_0_600_1024_1_2_2_U0_ap_idle & (param2_empty_n ^ 1'b1) & (param1_empty_n ^ 1'b1) & ImgProcess_0_600_1024_1_2_U0_ap_idle & Block_entry15_proc_U0_ap_idle & AXIvideo2xfMat_24_9_600_1024_1_2_U0_ap_idle);

assign ap_ready = AXIvideo2xfMat_24_9_600_1024_1_2_U0_ap_ready;

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign ap_sync_channel_write_param1 = ((param1_full_n & ap_channel_done_param1) | ap_sync_reg_channel_write_param1);

assign ap_sync_channel_write_param2 = ((param2_full_n & ap_channel_done_param2) | ap_sync_reg_channel_write_param2);

assign result_Addr_A = Block_entry15_proc_U0_result_Addr_A;

assign result_Clk_A = ap_clk;

assign result_Din_A = Block_entry15_proc_U0_result_Din_A;

assign result_EN_A = Block_entry15_proc_U0_result_EN_A;

assign result_Rst_A = ap_rst_n_inv;

assign result_WEN_A = Block_entry15_proc_U0_result_WEN_A;

assign rgb2gray_9_0_600_1024_1_2_2_U0_ap_continue = 1'b1;

assign rgb2gray_9_0_600_1024_1_2_2_U0_ap_start = start_for_rgb2gray_9_0_600_1024_1_2_2_U0_empty_n;

assign start_for_ImgProcess_0_600_1024_1_2_U0_din = 1'b1;

assign start_for_rgb2gray_9_0_600_1024_1_2_2_U0_din = 1'b1;


reg find_df_deadlock = 0;
// synthesis translate_off
`include "Test_area_prmter_hls_deadlock_detector.vh"
// synthesis translate_on

reg find_kernel_block = 0;
// synthesis translate_off
`include "Test_area_prmter_hls_deadlock_kernel_monitor_top.vh"
// synthesis translate_on

endmodule //Test_area_prmter

