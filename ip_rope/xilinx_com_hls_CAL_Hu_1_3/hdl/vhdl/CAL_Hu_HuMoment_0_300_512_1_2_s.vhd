-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
-- Version: 2022.2
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity CAL_Hu_HuMoment_0_300_512_1_2_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    img_1_data15_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    img_1_data15_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
    img_1_data15_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
    img_1_data15_empty_n : IN STD_LOGIC;
    img_1_data15_read : OUT STD_LOGIC;
    M2int_address0 : OUT STD_LOGIC_VECTOR (0 downto 0);
    M2int_ce0 : OUT STD_LOGIC;
    M2int_we0 : OUT STD_LOGIC;
    M2int_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of CAL_Hu_HuMoment_0_300_512_1_2_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000000000000000000000000000000000000000000000000010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000000000000000000000000000000000000000000000000100000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000000000000000000000000000000000000000000000001000000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000000000000000000000000000000000000000000000010000000000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000000000000000000000000000000000000000000000100000000000000000000000";
    constant ap_ST_fsm_state25 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000000000000000000000000000000000000000000001000000000000000000000000";
    constant ap_ST_fsm_state26 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000000000000000000000000000000000000000000010000000000000000000000000";
    constant ap_ST_fsm_state27 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000000000000000000000000000000000000000000100000000000000000000000000";
    constant ap_ST_fsm_state28 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000000000000000000000000000000000000000001000000000000000000000000000";
    constant ap_ST_fsm_state29 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000000000000000000000000000000000000000010000000000000000000000000000";
    constant ap_ST_fsm_state30 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000000000000000000000000000000000000000100000000000000000000000000000";
    constant ap_ST_fsm_state31 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000000000000000000000000000000000000001000000000000000000000000000000";
    constant ap_ST_fsm_state32 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000000000000000000000000000000000000010000000000000000000000000000000";
    constant ap_ST_fsm_state33 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000000000000000000000000000000000000100000000000000000000000000000000";
    constant ap_ST_fsm_state34 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000000000000000000000000000000000001000000000000000000000000000000000";
    constant ap_ST_fsm_state35 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000000000000000000000000000000000010000000000000000000000000000000000";
    constant ap_ST_fsm_state36 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000000000000000000000000000000000100000000000000000000000000000000000";
    constant ap_ST_fsm_state37 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000000000000000000000000000000001000000000000000000000000000000000000";
    constant ap_ST_fsm_state38 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000000000000000000000000000000010000000000000000000000000000000000000";
    constant ap_ST_fsm_state39 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000000000000000000000000000000100000000000000000000000000000000000000";
    constant ap_ST_fsm_state40 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000000000000000000000000000001000000000000000000000000000000000000000";
    constant ap_ST_fsm_state41 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000000000000000000000000000010000000000000000000000000000000000000000";
    constant ap_ST_fsm_state42 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000000000000000000000000000100000000000000000000000000000000000000000";
    constant ap_ST_fsm_state43 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000000000000000000000000001000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state44 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000000000000000000000000010000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state45 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000000000000000000000000100000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state46 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000000000000000000000001000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state47 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000000000000000000000010000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state48 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000000000000000000000100000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state49 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000000000000000000001000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state50 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000000000000000000010000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state51 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000000000000000000100000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state52 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000000000000000001000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state53 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000000000000000010000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state54 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000000000000000100000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state55 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000000000000001000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state56 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000000000000010000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state57 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000000000000100000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state58 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000000000001000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state59 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000000000010000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state60 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000000000100000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state61 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000000001000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state62 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000000010000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state63 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000000100000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state64 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000001000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state65 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000010000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state66 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000100000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state67 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000001000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state68 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000010000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state69 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000100000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state70 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000001000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state71 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000010000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state72 : STD_LOGIC_VECTOR (81 downto 0) := "0000000000100000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state73 : STD_LOGIC_VECTOR (81 downto 0) := "0000000001000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state74 : STD_LOGIC_VECTOR (81 downto 0) := "0000000010000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state75 : STD_LOGIC_VECTOR (81 downto 0) := "0000000100000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state76 : STD_LOGIC_VECTOR (81 downto 0) := "0000001000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state77 : STD_LOGIC_VECTOR (81 downto 0) := "0000010000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state78 : STD_LOGIC_VECTOR (81 downto 0) := "0000100000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state79 : STD_LOGIC_VECTOR (81 downto 0) := "0001000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state80 : STD_LOGIC_VECTOR (81 downto 0) := "0010000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state81 : STD_LOGIC_VECTOR (81 downto 0) := "0100000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state82 : STD_LOGIC_VECTOR (81 downto 0) := "1000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_3C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111100";
    constant ap_const_lv32_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100111";
    constant ap_const_lv32_2C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101100";
    constant ap_const_lv32_41 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000001";
    constant ap_const_lv32_45 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000101";
    constant ap_const_lv32_4E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001110";
    constant ap_const_lv32_4A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001010";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv32_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100011";
    constant ap_const_lv32_28 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101000";
    constant ap_const_lv32_3D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111101";
    constant ap_const_lv32_46 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000110";
    constant ap_const_lv32_47 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000111";
    constant ap_const_lv32_4F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001111";
    constant ap_const_lv32_50 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_29 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101001";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv32_51 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010001";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv32_2D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101101";
    constant ap_const_lv32_2E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101110";
    constant ap_const_lv32_48 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001000";
    constant ap_const_lv32_40800000 : STD_LOGIC_VECTOR (31 downto 0) := "01000000100000000000000000000000";
    constant ap_const_lv32_4B81B320 : STD_LOGIC_VECTOR (31 downto 0) := "01001011100000011011001100100000";
    constant ap_const_lv32_24 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100100";
    constant ap_const_lv32_3E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111110";
    constant ap_const_lv32_42 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000010";
    constant ap_const_lv32_4B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001011";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv64_3FE0000000000000 : STD_LOGIC_VECTOR (63 downto 0) := "0011111111100000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv9_12C : STD_LOGIC_VECTOR (8 downto 0) := "100101100";
    constant ap_const_lv9_1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_34 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110100";
    constant ap_const_lv12_C01 : STD_LOGIC_VECTOR (11 downto 0) := "110000000001";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv11_3FF : STD_LOGIC_VECTOR (10 downto 0) := "01111111111";
    constant ap_const_lv32_35 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110101";
    constant ap_const_lv32_54 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010100";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv9_181 : STD_LOGIC_VECTOR (8 downto 0) := "110000001";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv8_7F : STD_LOGIC_VECTOR (7 downto 0) := "01111111";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_37 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110111";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";

attribute shreg_extract : string;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (81 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal icmp_ln36_fu_314_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state30 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state30 : signal is "none";
    signal icmp_ln58_fu_643_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_219_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_261 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal ap_CS_fsm_state61 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state61 : signal is "none";
    signal grp_fu_223_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_268 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_204_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_275 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state40 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state40 : signal is "none";
    signal ap_CS_fsm_state45 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state45 : signal is "none";
    signal ap_CS_fsm_state66 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state66 : signal is "none";
    signal ap_CS_fsm_state70 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state70 : signal is "none";
    signal ap_CS_fsm_state79 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state79 : signal is "none";
    signal grp_fu_196_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_284 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state75 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state75 : signal is "none";
    signal j_2_reg_991 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_9_fu_326_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_9_reg_999 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_230_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal conv_reg_1042 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state20 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state20 : signal is "none";
    signal grp_fu_233_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal conv1_reg_1047 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_236_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal dc_reg_1052 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state27 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state27 : signal is "none";
    signal grp_fu_241_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal dc_1_reg_1057 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Result_s_reg_1062 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state28 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state28 : signal is "none";
    signal val_fu_485_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal val_reg_1067 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_2_reg_1073 : STD_LOGIC_VECTOR (0 downto 0);
    signal val_1_fu_610_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal val_1_reg_1078 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_V_14_fu_623_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_V_14_reg_1084 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state29 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state29 : signal is "none";
    signal result_V_15_fu_634_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_V_15_reg_1089 : STD_LOGIC_VECTOR (31 downto 0);
    signal j_3_reg_1094 : STD_LOGIC_VECTOR (8 downto 0);
    signal empty_107_fu_659_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_107_reg_1102 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_227_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal y0_reg_1107 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state36 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state36 : signal is "none";
    signal tmp_2_fu_669_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_2_reg_1114 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_CS_fsm_state41 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state41 : signal is "none";
    signal u11_reg_1128 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state62 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state62 : signal is "none";
    signal grp_fu_200_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal M_reg_1134 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_209_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul4_reg_1139 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_213_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal dc_2_reg_1144 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_4_reg_1149 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state71 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state71 : signal is "none";
    signal p_Result_5_fu_710_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal p_Result_5_reg_1154 : STD_LOGIC_VECTOR (22 downto 0);
    signal isNeg_2_fu_724_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal isNeg_2_reg_1159 : STD_LOGIC_VECTOR (0 downto 0);
    signal ush_2_fu_742_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal ush_2_reg_1164 : STD_LOGIC_VECTOR (8 downto 0);
    signal val_2_fu_804_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal val_2_reg_1169 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state72 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state72 : signal is "none";
    signal p_Result_6_reg_1175 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state80 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state80 : signal is "none";
    signal p_Result_7_fu_845_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal p_Result_7_reg_1180 : STD_LOGIC_VECTOR (22 downto 0);
    signal isNeg_3_fu_859_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal isNeg_3_reg_1185 : STD_LOGIC_VECTOR (0 downto 0);
    signal ush_3_fu_877_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal ush_3_reg_1190 : STD_LOGIC_VECTOR (8 downto 0);
    signal val_3_fu_939_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal val_3_reg_1195 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state81 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state81 : signal is "none";
    signal pBmpBuf_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal pBmpBuf_ce0 : STD_LOGIC;
    signal pBmpBuf_we0 : STD_LOGIC_VECTOR (299 downto 0);
    signal pBmpBuf_q0 : STD_LOGIC_VECTOR (2399 downto 0);
    signal grp_HuMoment_0_300_512_1_2_Pipeline_loop_General_rows_fu_172_ap_start : STD_LOGIC;
    signal grp_HuMoment_0_300_512_1_2_Pipeline_loop_General_rows_fu_172_ap_done : STD_LOGIC;
    signal grp_HuMoment_0_300_512_1_2_Pipeline_loop_General_rows_fu_172_ap_idle : STD_LOGIC;
    signal grp_HuMoment_0_300_512_1_2_Pipeline_loop_General_rows_fu_172_ap_ready : STD_LOGIC;
    signal grp_HuMoment_0_300_512_1_2_Pipeline_loop_General_rows_fu_172_img_1_data15_read : STD_LOGIC;
    signal grp_HuMoment_0_300_512_1_2_Pipeline_loop_General_rows_fu_172_pBmpBuf_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_HuMoment_0_300_512_1_2_Pipeline_loop_General_rows_fu_172_pBmpBuf_ce0 : STD_LOGIC;
    signal grp_HuMoment_0_300_512_1_2_Pipeline_loop_General_rows_fu_172_pBmpBuf_we0 : STD_LOGIC_VECTOR (299 downto 0);
    signal grp_HuMoment_0_300_512_1_2_Pipeline_loop_General_rows_fu_172_pBmpBuf_d0 : STD_LOGIC_VECTOR (2399 downto 0);
    signal grp_HuMoment_0_300_512_1_2_Pipeline_loop_General_rows_fu_172_s00_1_out_o : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_HuMoment_0_300_512_1_2_Pipeline_loop_General_rows_fu_172_s00_1_out_o_ap_vld : STD_LOGIC;
    signal grp_HuMoment_0_300_512_1_2_Pipeline_loop_General_rows_fu_172_s01_1_out_o : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_HuMoment_0_300_512_1_2_Pipeline_loop_General_rows_fu_172_s01_1_out_o_ap_vld : STD_LOGIC;
    signal grp_HuMoment_0_300_512_1_2_Pipeline_loop_General_rows_fu_172_s10_1_out_o : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_HuMoment_0_300_512_1_2_Pipeline_loop_General_rows_fu_172_s10_1_out_o_ap_vld : STD_LOGIC;
    signal grp_HuMoment_0_300_512_1_2_Pipeline_loop_General_rows_fu_172_grp_fu_196_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_HuMoment_0_300_512_1_2_Pipeline_loop_General_rows_fu_172_grp_fu_196_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_HuMoment_0_300_512_1_2_Pipeline_loop_General_rows_fu_172_grp_fu_196_p_opcode : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_HuMoment_0_300_512_1_2_Pipeline_loop_General_rows_fu_172_grp_fu_196_p_ce : STD_LOGIC;
    signal grp_HuMoment_0_300_512_1_2_Pipeline_loop_Center_rows_fu_184_ap_start : STD_LOGIC;
    signal grp_HuMoment_0_300_512_1_2_Pipeline_loop_Center_rows_fu_184_ap_done : STD_LOGIC;
    signal grp_HuMoment_0_300_512_1_2_Pipeline_loop_Center_rows_fu_184_ap_idle : STD_LOGIC;
    signal grp_HuMoment_0_300_512_1_2_Pipeline_loop_Center_rows_fu_184_ap_ready : STD_LOGIC;
    signal grp_HuMoment_0_300_512_1_2_Pipeline_loop_Center_rows_fu_184_pBmpBuf_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_HuMoment_0_300_512_1_2_Pipeline_loop_Center_rows_fu_184_pBmpBuf_ce0 : STD_LOGIC;
    signal grp_HuMoment_0_300_512_1_2_Pipeline_loop_Center_rows_fu_184_m11_1_out_o : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_HuMoment_0_300_512_1_2_Pipeline_loop_Center_rows_fu_184_m11_1_out_o_ap_vld : STD_LOGIC;
    signal grp_HuMoment_0_300_512_1_2_Pipeline_loop_Center_rows_fu_184_m20_1_out_o : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_HuMoment_0_300_512_1_2_Pipeline_loop_Center_rows_fu_184_m20_1_out_o_ap_vld : STD_LOGIC;
    signal grp_HuMoment_0_300_512_1_2_Pipeline_loop_Center_rows_fu_184_m02_1_out_o : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_HuMoment_0_300_512_1_2_Pipeline_loop_Center_rows_fu_184_m02_1_out_o_ap_vld : STD_LOGIC;
    signal grp_HuMoment_0_300_512_1_2_Pipeline_loop_Center_rows_fu_184_grp_fu_204_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_HuMoment_0_300_512_1_2_Pipeline_loop_Center_rows_fu_184_grp_fu_204_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_HuMoment_0_300_512_1_2_Pipeline_loop_Center_rows_fu_184_grp_fu_204_p_ce : STD_LOGIC;
    signal grp_HuMoment_0_300_512_1_2_Pipeline_loop_Center_rows_fu_184_grp_fu_209_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_HuMoment_0_300_512_1_2_Pipeline_loop_Center_rows_fu_184_grp_fu_209_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_HuMoment_0_300_512_1_2_Pipeline_loop_Center_rows_fu_184_grp_fu_209_p_ce : STD_LOGIC;
    signal grp_HuMoment_0_300_512_1_2_Pipeline_loop_Center_rows_fu_184_grp_fu_227_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_HuMoment_0_300_512_1_2_Pipeline_loop_Center_rows_fu_184_grp_fu_227_p_ce : STD_LOGIC;
    signal grp_HuMoment_0_300_512_1_2_Pipeline_loop_Center_rows_fu_184_grp_fu_196_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_HuMoment_0_300_512_1_2_Pipeline_loop_Center_rows_fu_184_grp_fu_196_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_HuMoment_0_300_512_1_2_Pipeline_loop_Center_rows_fu_184_grp_fu_196_p_opcode : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_HuMoment_0_300_512_1_2_Pipeline_loop_Center_rows_fu_184_grp_fu_196_p_ce : STD_LOGIC;
    signal grp_HuMoment_0_300_512_1_2_Pipeline_loop_General_rows_fu_172_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal s00_fu_122 : STD_LOGIC_VECTOR (31 downto 0);
    signal s01_fu_118 : STD_LOGIC_VECTOR (31 downto 0);
    signal s10_fu_114 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_HuMoment_0_300_512_1_2_Pipeline_loop_Center_rows_fu_184_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state42 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state42 : signal is "none";
    signal m11_fu_142 : STD_LOGIC_VECTOR (31 downto 0);
    signal m20_fu_138 : STD_LOGIC_VECTOR (31 downto 0);
    signal m02_fu_134 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state82 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state82 : signal is "none";
    signal ap_block_state1 : BOOLEAN;
    signal j_fu_126 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln36_fu_320_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_CS_fsm_state46 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state46 : signal is "none";
    signal ap_CS_fsm_state47 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state47 : signal is "none";
    signal j_1_fu_146 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln58_fu_649_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_CS_fsm_state73 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state73 : signal is "none";
    signal result_V_fu_816_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_V_16_fu_951_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_196_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_196_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_204_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_204_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state37 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state37 : signal is "none";
    signal ap_CS_fsm_state63 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state63 : signal is "none";
    signal ap_CS_fsm_state67 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state67 : signal is "none";
    signal ap_CS_fsm_state76 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state76 : signal is "none";
    signal grp_fu_209_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_209_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_219_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_219_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_223_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_223_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_227_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state31 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state31 : signal is "none";
    signal ap_CS_fsm_state19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state19 : signal is "none";
    signal ap_CS_fsm_state21 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state21 : signal is "none";
    signal data_V_fu_368_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Result_1_fu_389_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal mantissa_fu_393_p4 : STD_LOGIC_VECTOR (53 downto 0);
    signal xs_exp_V_fu_379_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln515_fu_407_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln515_fu_411_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln1512_fu_425_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal isNeg_fu_417_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln1512_fu_431_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal ush_fu_435_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln1488_fu_443_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln15_fu_403_p1 : STD_LOGIC_VECTOR (136 downto 0);
    signal zext_ln1488_fu_447_p1 : STD_LOGIC_VECTOR (136 downto 0);
    signal r_V_fu_451_p2 : STD_LOGIC_VECTOR (136 downto 0);
    signal tmp_fu_463_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_V_1_fu_457_p2 : STD_LOGIC_VECTOR (136 downto 0);
    signal zext_ln818_fu_471_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_4_fu_475_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal data_V_1_fu_493_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Result_3_fu_514_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal mantissa_1_fu_518_p4 : STD_LOGIC_VECTOR (53 downto 0);
    signal xs_exp_V_1_fu_504_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln515_1_fu_532_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln515_1_fu_536_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln1512_1_fu_550_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal isNeg_1_fu_542_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln1512_1_fu_556_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal ush_1_fu_560_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln1488_1_fu_568_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln15_1_fu_528_p1 : STD_LOGIC_VECTOR (136 downto 0);
    signal zext_ln1488_1_fu_572_p1 : STD_LOGIC_VECTOR (136 downto 0);
    signal r_V_2_fu_576_p2 : STD_LOGIC_VECTOR (136 downto 0);
    signal tmp_5_fu_588_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_V_3_fu_582_p2 : STD_LOGIC_VECTOR (136 downto 0);
    signal zext_ln818_1_fu_596_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_8_fu_600_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_V_2_fu_618_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_V_7_fu_629_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal j_2_cast8_fu_655_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal data_V_2_fu_689_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal xs_exp_V_2_fu_700_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln346_fu_714_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln346_fu_718_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal sub_ln1512_2_fu_732_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal sext_ln1512_2_fu_738_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal mantissa_2_fu_750_p4 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln1488_2_fu_763_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln15_2_fu_759_p1 : STD_LOGIC_VECTOR (78 downto 0);
    signal zext_ln1488_2_fu_766_p1 : STD_LOGIC_VECTOR (78 downto 0);
    signal r_V_4_fu_770_p2 : STD_LOGIC_VECTOR (78 downto 0);
    signal tmp_11_fu_782_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_V_5_fu_776_p2 : STD_LOGIC_VECTOR (78 downto 0);
    signal zext_ln818_2_fu_790_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_s_fu_794_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_V_8_fu_811_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal data_V_3_fu_823_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal xs_exp_V_3_fu_835_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln346_1_fu_849_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln346_1_fu_853_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal sub_ln1512_3_fu_867_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal sext_ln1512_3_fu_873_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal mantissa_3_fu_885_p4 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln1488_3_fu_898_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln15_3_fu_894_p1 : STD_LOGIC_VECTOR (78 downto 0);
    signal zext_ln1488_3_fu_901_p1 : STD_LOGIC_VECTOR (78 downto 0);
    signal r_V_6_fu_905_p2 : STD_LOGIC_VECTOR (78 downto 0);
    signal tmp_17_fu_917_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_V_7_fu_911_p2 : STD_LOGIC_VECTOR (78 downto 0);
    signal zext_ln818_3_fu_925_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_fu_929_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_V_12_fu_946_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_196_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_196_ce : STD_LOGIC;
    signal grp_fu_204_ce : STD_LOGIC;
    signal grp_fu_209_ce : STD_LOGIC;
    signal grp_fu_227_ce : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (81 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_ST_fsm_state11_blk : STD_LOGIC;
    signal ap_ST_fsm_state12_blk : STD_LOGIC;
    signal ap_ST_fsm_state13_blk : STD_LOGIC;
    signal ap_ST_fsm_state14_blk : STD_LOGIC;
    signal ap_ST_fsm_state15_blk : STD_LOGIC;
    signal ap_ST_fsm_state16_blk : STD_LOGIC;
    signal ap_ST_fsm_state17_blk : STD_LOGIC;
    signal ap_ST_fsm_state18_blk : STD_LOGIC;
    signal ap_ST_fsm_state19_blk : STD_LOGIC;
    signal ap_ST_fsm_state20_blk : STD_LOGIC;
    signal ap_ST_fsm_state21_blk : STD_LOGIC;
    signal ap_ST_fsm_state22_blk : STD_LOGIC;
    signal ap_ST_fsm_state23_blk : STD_LOGIC;
    signal ap_ST_fsm_state24_blk : STD_LOGIC;
    signal ap_ST_fsm_state25_blk : STD_LOGIC;
    signal ap_ST_fsm_state26_blk : STD_LOGIC;
    signal ap_ST_fsm_state27_blk : STD_LOGIC;
    signal ap_ST_fsm_state28_blk : STD_LOGIC;
    signal ap_ST_fsm_state29_blk : STD_LOGIC;
    signal ap_ST_fsm_state30_blk : STD_LOGIC;
    signal ap_ST_fsm_state31_blk : STD_LOGIC;
    signal ap_ST_fsm_state32_blk : STD_LOGIC;
    signal ap_ST_fsm_state33_blk : STD_LOGIC;
    signal ap_ST_fsm_state34_blk : STD_LOGIC;
    signal ap_ST_fsm_state35_blk : STD_LOGIC;
    signal ap_ST_fsm_state36_blk : STD_LOGIC;
    signal ap_ST_fsm_state37_blk : STD_LOGIC;
    signal ap_ST_fsm_state38_blk : STD_LOGIC;
    signal ap_ST_fsm_state39_blk : STD_LOGIC;
    signal ap_ST_fsm_state40_blk : STD_LOGIC;
    signal ap_ST_fsm_state41_blk : STD_LOGIC;
    signal ap_ST_fsm_state42_blk : STD_LOGIC;
    signal ap_ST_fsm_state43_blk : STD_LOGIC;
    signal ap_ST_fsm_state44_blk : STD_LOGIC;
    signal ap_ST_fsm_state45_blk : STD_LOGIC;
    signal ap_ST_fsm_state46_blk : STD_LOGIC;
    signal ap_ST_fsm_state47_blk : STD_LOGIC;
    signal ap_ST_fsm_state48_blk : STD_LOGIC;
    signal ap_ST_fsm_state49_blk : STD_LOGIC;
    signal ap_ST_fsm_state50_blk : STD_LOGIC;
    signal ap_ST_fsm_state51_blk : STD_LOGIC;
    signal ap_ST_fsm_state52_blk : STD_LOGIC;
    signal ap_ST_fsm_state53_blk : STD_LOGIC;
    signal ap_ST_fsm_state54_blk : STD_LOGIC;
    signal ap_ST_fsm_state55_blk : STD_LOGIC;
    signal ap_ST_fsm_state56_blk : STD_LOGIC;
    signal ap_ST_fsm_state57_blk : STD_LOGIC;
    signal ap_ST_fsm_state58_blk : STD_LOGIC;
    signal ap_ST_fsm_state59_blk : STD_LOGIC;
    signal ap_ST_fsm_state60_blk : STD_LOGIC;
    signal ap_ST_fsm_state61_blk : STD_LOGIC;
    signal ap_ST_fsm_state62_blk : STD_LOGIC;
    signal ap_ST_fsm_state63_blk : STD_LOGIC;
    signal ap_ST_fsm_state64_blk : STD_LOGIC;
    signal ap_ST_fsm_state65_blk : STD_LOGIC;
    signal ap_ST_fsm_state66_blk : STD_LOGIC;
    signal ap_ST_fsm_state67_blk : STD_LOGIC;
    signal ap_ST_fsm_state68_blk : STD_LOGIC;
    signal ap_ST_fsm_state69_blk : STD_LOGIC;
    signal ap_ST_fsm_state70_blk : STD_LOGIC;
    signal ap_ST_fsm_state71_blk : STD_LOGIC;
    signal ap_ST_fsm_state72_blk : STD_LOGIC;
    signal ap_ST_fsm_state73_blk : STD_LOGIC;
    signal ap_ST_fsm_state74_blk : STD_LOGIC;
    signal ap_ST_fsm_state75_blk : STD_LOGIC;
    signal ap_ST_fsm_state76_blk : STD_LOGIC;
    signal ap_ST_fsm_state77_blk : STD_LOGIC;
    signal ap_ST_fsm_state78_blk : STD_LOGIC;
    signal ap_ST_fsm_state79_blk : STD_LOGIC;
    signal ap_ST_fsm_state80_blk : STD_LOGIC;
    signal ap_ST_fsm_state81_blk : STD_LOGIC;
    signal ap_ST_fsm_state82_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component CAL_Hu_HuMoment_0_300_512_1_2_Pipeline_loop_General_rows IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        img_1_data15_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        img_1_data15_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        img_1_data15_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        img_1_data15_empty_n : IN STD_LOGIC;
        img_1_data15_read : OUT STD_LOGIC;
        tmp_9 : IN STD_LOGIC_VECTOR (17 downto 0);
        pBmpBuf_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        pBmpBuf_ce0 : OUT STD_LOGIC;
        pBmpBuf_we0 : OUT STD_LOGIC_VECTOR (299 downto 0);
        pBmpBuf_d0 : OUT STD_LOGIC_VECTOR (2399 downto 0);
        zext_ln39 : IN STD_LOGIC_VECTOR (8 downto 0);
        s00_1_out_i : IN STD_LOGIC_VECTOR (31 downto 0);
        s00_1_out_o : OUT STD_LOGIC_VECTOR (31 downto 0);
        s00_1_out_o_ap_vld : OUT STD_LOGIC;
        s01_1_out_i : IN STD_LOGIC_VECTOR (31 downto 0);
        s01_1_out_o : OUT STD_LOGIC_VECTOR (31 downto 0);
        s01_1_out_o_ap_vld : OUT STD_LOGIC;
        s10_1_out_i : IN STD_LOGIC_VECTOR (31 downto 0);
        s10_1_out_o : OUT STD_LOGIC_VECTOR (31 downto 0);
        s10_1_out_o_ap_vld : OUT STD_LOGIC;
        grp_fu_196_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_196_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_196_p_opcode : OUT STD_LOGIC_VECTOR (0 downto 0);
        grp_fu_196_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_196_p_ce : OUT STD_LOGIC );
    end component;


    component CAL_Hu_HuMoment_0_300_512_1_2_Pipeline_loop_Center_rows IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        tmp_16 : IN STD_LOGIC_VECTOR (17 downto 0);
        pBmpBuf_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        pBmpBuf_ce0 : OUT STD_LOGIC;
        pBmpBuf_q0 : IN STD_LOGIC_VECTOR (2399 downto 0);
        result_V_11 : IN STD_LOGIC_VECTOR (31 downto 0);
        y0 : IN STD_LOGIC_VECTOR (31 downto 0);
        mul : IN STD_LOGIC_VECTOR (31 downto 0);
        m11_1_out_i : IN STD_LOGIC_VECTOR (31 downto 0);
        m11_1_out_o : OUT STD_LOGIC_VECTOR (31 downto 0);
        m11_1_out_o_ap_vld : OUT STD_LOGIC;
        m20_1_out_i : IN STD_LOGIC_VECTOR (31 downto 0);
        m20_1_out_o : OUT STD_LOGIC_VECTOR (31 downto 0);
        m20_1_out_o_ap_vld : OUT STD_LOGIC;
        m02_1_out_i : IN STD_LOGIC_VECTOR (31 downto 0);
        m02_1_out_o : OUT STD_LOGIC_VECTOR (31 downto 0);
        m02_1_out_o_ap_vld : OUT STD_LOGIC;
        grp_fu_204_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_204_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_204_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_204_p_ce : OUT STD_LOGIC;
        grp_fu_209_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_209_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_209_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_209_p_ce : OUT STD_LOGIC;
        grp_fu_227_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_227_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_227_p_ce : OUT STD_LOGIC;
        grp_fu_196_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_196_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_196_p_opcode : OUT STD_LOGIC_VECTOR (0 downto 0);
        grp_fu_196_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_196_p_ce : OUT STD_LOGIC );
    end component;


    component CAL_Hu_faddfsub_32ns_32ns_32_5_full_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        opcode : IN STD_LOGIC_VECTOR (1 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component CAL_Hu_fadd_32ns_32ns_32_5_full_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component CAL_Hu_fmul_32ns_32ns_32_4_max_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component CAL_Hu_fdiv_32ns_32ns_32_16_no_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component CAL_Hu_sitofp_32ns_32_6_no_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component CAL_Hu_fpext_32ns_64_2_no_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component CAL_Hu_dadd_64ns_64ns_64_7_full_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        din1 : IN STD_LOGIC_VECTOR (63 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component CAL_Hu_HuMoment_0_300_512_1_2_s_pBmpBuf_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC_VECTOR (299 downto 0);
        d0 : IN STD_LOGIC_VECTOR (2399 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (2399 downto 0) );
    end component;



begin
    pBmpBuf_U : component CAL_Hu_HuMoment_0_300_512_1_2_s_pBmpBuf_RAM_AUTO_1R1W
    generic map (
        DataWidth => 2400,
        AddressRange => 512,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => pBmpBuf_address0,
        ce0 => pBmpBuf_ce0,
        we0 => pBmpBuf_we0,
        d0 => grp_HuMoment_0_300_512_1_2_Pipeline_loop_General_rows_fu_172_pBmpBuf_d0,
        q0 => pBmpBuf_q0);

    grp_HuMoment_0_300_512_1_2_Pipeline_loop_General_rows_fu_172 : component CAL_Hu_HuMoment_0_300_512_1_2_Pipeline_loop_General_rows
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_HuMoment_0_300_512_1_2_Pipeline_loop_General_rows_fu_172_ap_start,
        ap_done => grp_HuMoment_0_300_512_1_2_Pipeline_loop_General_rows_fu_172_ap_done,
        ap_idle => grp_HuMoment_0_300_512_1_2_Pipeline_loop_General_rows_fu_172_ap_idle,
        ap_ready => grp_HuMoment_0_300_512_1_2_Pipeline_loop_General_rows_fu_172_ap_ready,
        img_1_data15_dout => img_1_data15_dout,
        img_1_data15_num_data_valid => ap_const_lv2_0,
        img_1_data15_fifo_cap => ap_const_lv2_0,
        img_1_data15_empty_n => img_1_data15_empty_n,
        img_1_data15_read => grp_HuMoment_0_300_512_1_2_Pipeline_loop_General_rows_fu_172_img_1_data15_read,
        tmp_9 => tmp_9_reg_999,
        pBmpBuf_address0 => grp_HuMoment_0_300_512_1_2_Pipeline_loop_General_rows_fu_172_pBmpBuf_address0,
        pBmpBuf_ce0 => grp_HuMoment_0_300_512_1_2_Pipeline_loop_General_rows_fu_172_pBmpBuf_ce0,
        pBmpBuf_we0 => grp_HuMoment_0_300_512_1_2_Pipeline_loop_General_rows_fu_172_pBmpBuf_we0,
        pBmpBuf_d0 => grp_HuMoment_0_300_512_1_2_Pipeline_loop_General_rows_fu_172_pBmpBuf_d0,
        zext_ln39 => j_2_reg_991,
        s00_1_out_i => s00_fu_122,
        s00_1_out_o => grp_HuMoment_0_300_512_1_2_Pipeline_loop_General_rows_fu_172_s00_1_out_o,
        s00_1_out_o_ap_vld => grp_HuMoment_0_300_512_1_2_Pipeline_loop_General_rows_fu_172_s00_1_out_o_ap_vld,
        s01_1_out_i => s01_fu_118,
        s01_1_out_o => grp_HuMoment_0_300_512_1_2_Pipeline_loop_General_rows_fu_172_s01_1_out_o,
        s01_1_out_o_ap_vld => grp_HuMoment_0_300_512_1_2_Pipeline_loop_General_rows_fu_172_s01_1_out_o_ap_vld,
        s10_1_out_i => s10_fu_114,
        s10_1_out_o => grp_HuMoment_0_300_512_1_2_Pipeline_loop_General_rows_fu_172_s10_1_out_o,
        s10_1_out_o_ap_vld => grp_HuMoment_0_300_512_1_2_Pipeline_loop_General_rows_fu_172_s10_1_out_o_ap_vld,
        grp_fu_196_p_din0 => grp_HuMoment_0_300_512_1_2_Pipeline_loop_General_rows_fu_172_grp_fu_196_p_din0,
        grp_fu_196_p_din1 => grp_HuMoment_0_300_512_1_2_Pipeline_loop_General_rows_fu_172_grp_fu_196_p_din1,
        grp_fu_196_p_opcode => grp_HuMoment_0_300_512_1_2_Pipeline_loop_General_rows_fu_172_grp_fu_196_p_opcode,
        grp_fu_196_p_dout0 => grp_fu_196_p2,
        grp_fu_196_p_ce => grp_HuMoment_0_300_512_1_2_Pipeline_loop_General_rows_fu_172_grp_fu_196_p_ce);

    grp_HuMoment_0_300_512_1_2_Pipeline_loop_Center_rows_fu_184 : component CAL_Hu_HuMoment_0_300_512_1_2_Pipeline_loop_Center_rows
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_HuMoment_0_300_512_1_2_Pipeline_loop_Center_rows_fu_184_ap_start,
        ap_done => grp_HuMoment_0_300_512_1_2_Pipeline_loop_Center_rows_fu_184_ap_done,
        ap_idle => grp_HuMoment_0_300_512_1_2_Pipeline_loop_Center_rows_fu_184_ap_idle,
        ap_ready => grp_HuMoment_0_300_512_1_2_Pipeline_loop_Center_rows_fu_184_ap_ready,
        tmp_16 => tmp_2_reg_1114,
        pBmpBuf_address0 => grp_HuMoment_0_300_512_1_2_Pipeline_loop_Center_rows_fu_184_pBmpBuf_address0,
        pBmpBuf_ce0 => grp_HuMoment_0_300_512_1_2_Pipeline_loop_Center_rows_fu_184_pBmpBuf_ce0,
        pBmpBuf_q0 => pBmpBuf_q0,
        result_V_11 => result_V_14_reg_1084,
        y0 => y0_reg_1107,
        mul => reg_275,
        m11_1_out_i => m11_fu_142,
        m11_1_out_o => grp_HuMoment_0_300_512_1_2_Pipeline_loop_Center_rows_fu_184_m11_1_out_o,
        m11_1_out_o_ap_vld => grp_HuMoment_0_300_512_1_2_Pipeline_loop_Center_rows_fu_184_m11_1_out_o_ap_vld,
        m20_1_out_i => m20_fu_138,
        m20_1_out_o => grp_HuMoment_0_300_512_1_2_Pipeline_loop_Center_rows_fu_184_m20_1_out_o,
        m20_1_out_o_ap_vld => grp_HuMoment_0_300_512_1_2_Pipeline_loop_Center_rows_fu_184_m20_1_out_o_ap_vld,
        m02_1_out_i => m02_fu_134,
        m02_1_out_o => grp_HuMoment_0_300_512_1_2_Pipeline_loop_Center_rows_fu_184_m02_1_out_o,
        m02_1_out_o_ap_vld => grp_HuMoment_0_300_512_1_2_Pipeline_loop_Center_rows_fu_184_m02_1_out_o_ap_vld,
        grp_fu_204_p_din0 => grp_HuMoment_0_300_512_1_2_Pipeline_loop_Center_rows_fu_184_grp_fu_204_p_din0,
        grp_fu_204_p_din1 => grp_HuMoment_0_300_512_1_2_Pipeline_loop_Center_rows_fu_184_grp_fu_204_p_din1,
        grp_fu_204_p_dout0 => grp_fu_204_p2,
        grp_fu_204_p_ce => grp_HuMoment_0_300_512_1_2_Pipeline_loop_Center_rows_fu_184_grp_fu_204_p_ce,
        grp_fu_209_p_din0 => grp_HuMoment_0_300_512_1_2_Pipeline_loop_Center_rows_fu_184_grp_fu_209_p_din0,
        grp_fu_209_p_din1 => grp_HuMoment_0_300_512_1_2_Pipeline_loop_Center_rows_fu_184_grp_fu_209_p_din1,
        grp_fu_209_p_dout0 => grp_fu_209_p2,
        grp_fu_209_p_ce => grp_HuMoment_0_300_512_1_2_Pipeline_loop_Center_rows_fu_184_grp_fu_209_p_ce,
        grp_fu_227_p_din0 => grp_HuMoment_0_300_512_1_2_Pipeline_loop_Center_rows_fu_184_grp_fu_227_p_din0,
        grp_fu_227_p_dout0 => grp_fu_227_p1,
        grp_fu_227_p_ce => grp_HuMoment_0_300_512_1_2_Pipeline_loop_Center_rows_fu_184_grp_fu_227_p_ce,
        grp_fu_196_p_din0 => grp_HuMoment_0_300_512_1_2_Pipeline_loop_Center_rows_fu_184_grp_fu_196_p_din0,
        grp_fu_196_p_din1 => grp_HuMoment_0_300_512_1_2_Pipeline_loop_Center_rows_fu_184_grp_fu_196_p_din1,
        grp_fu_196_p_opcode => grp_HuMoment_0_300_512_1_2_Pipeline_loop_Center_rows_fu_184_grp_fu_196_p_opcode,
        grp_fu_196_p_dout0 => grp_fu_196_p2,
        grp_fu_196_p_ce => grp_HuMoment_0_300_512_1_2_Pipeline_loop_Center_rows_fu_184_grp_fu_196_p_ce);

    faddfsub_32ns_32ns_32_5_full_dsp_1_U92 : component CAL_Hu_faddfsub_32ns_32ns_32_5_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_196_p0,
        din1 => grp_fu_196_p1,
        opcode => grp_fu_196_opcode,
        ce => grp_fu_196_ce,
        dout => grp_fu_196_p2);

    fadd_32ns_32ns_32_5_full_dsp_1_U93 : component CAL_Hu_fadd_32ns_32ns_32_5_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => reg_261,
        din1 => reg_268,
        ce => ap_const_logic_1,
        dout => grp_fu_200_p2);

    fmul_32ns_32ns_32_4_max_dsp_1_U94 : component CAL_Hu_fmul_32ns_32ns_32_4_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_204_p0,
        din1 => grp_fu_204_p1,
        ce => grp_fu_204_ce,
        dout => grp_fu_204_p2);

    fmul_32ns_32ns_32_4_max_dsp_1_U95 : component CAL_Hu_fmul_32ns_32ns_32_4_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_209_p0,
        din1 => grp_fu_209_p1,
        ce => grp_fu_209_ce,
        dout => grp_fu_209_p2);

    fmul_32ns_32ns_32_4_max_dsp_1_U96 : component CAL_Hu_fmul_32ns_32ns_32_4_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => M_reg_1134,
        din1 => ap_const_lv32_4B81B320,
        ce => ap_const_logic_1,
        dout => grp_fu_213_p2);

    fdiv_32ns_32ns_32_16_no_dsp_1_U97 : component CAL_Hu_fdiv_32ns_32ns_32_16_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 16,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_219_p0,
        din1 => grp_fu_219_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_219_p2);

    fdiv_32ns_32ns_32_16_no_dsp_1_U98 : component CAL_Hu_fdiv_32ns_32ns_32_16_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 16,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_223_p0,
        din1 => grp_fu_223_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_223_p2);

    sitofp_32ns_32_6_no_dsp_1_U99 : component CAL_Hu_sitofp_32ns_32_6_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 6,
        din0_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_227_p0,
        ce => grp_fu_227_ce,
        dout => grp_fu_227_p1);

    fpext_32ns_64_2_no_dsp_1_U100 : component CAL_Hu_fpext_32ns_64_2_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => reg_261,
        ce => ap_const_logic_1,
        dout => grp_fu_230_p1);

    fpext_32ns_64_2_no_dsp_1_U101 : component CAL_Hu_fpext_32ns_64_2_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => reg_268,
        ce => ap_const_logic_1,
        dout => grp_fu_233_p1);

    dadd_64ns_64ns_64_7_full_dsp_1_U102 : component CAL_Hu_dadd_64ns_64ns_64_7_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 7,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => conv_reg_1042,
        din1 => ap_const_lv64_3FE0000000000000,
        ce => ap_const_logic_1,
        dout => grp_fu_236_p2);

    dadd_64ns_64ns_64_7_full_dsp_1_U103 : component CAL_Hu_dadd_64ns_64ns_64_7_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 7,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => conv1_reg_1047,
        din1 => ap_const_lv64_3FE0000000000000,
        ce => ap_const_logic_1,
        dout => grp_fu_241_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    grp_HuMoment_0_300_512_1_2_Pipeline_loop_Center_rows_fu_184_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_HuMoment_0_300_512_1_2_Pipeline_loop_Center_rows_fu_184_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
                    grp_HuMoment_0_300_512_1_2_Pipeline_loop_Center_rows_fu_184_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_HuMoment_0_300_512_1_2_Pipeline_loop_Center_rows_fu_184_ap_ready = ap_const_logic_1)) then 
                    grp_HuMoment_0_300_512_1_2_Pipeline_loop_Center_rows_fu_184_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_HuMoment_0_300_512_1_2_Pipeline_loop_General_rows_fu_172_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_HuMoment_0_300_512_1_2_Pipeline_loop_General_rows_fu_172_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln36_fu_314_p2 = ap_const_lv1_0))) then 
                    grp_HuMoment_0_300_512_1_2_Pipeline_loop_General_rows_fu_172_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_HuMoment_0_300_512_1_2_Pipeline_loop_General_rows_fu_172_ap_ready = ap_const_logic_1)) then 
                    grp_HuMoment_0_300_512_1_2_Pipeline_loop_General_rows_fu_172_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    j_1_fu_146_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln36_fu_314_p2 = ap_const_lv1_1))) then 
                j_1_fu_146 <= ap_const_lv9_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state30) and (icmp_ln58_fu_643_p2 = ap_const_lv1_0))) then 
                j_1_fu_146 <= add_ln58_fu_649_p2;
            end if; 
        end if;
    end process;

    j_fu_126_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                j_fu_126 <= ap_const_lv9_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln36_fu_314_p2 = ap_const_lv1_0))) then 
                j_fu_126 <= add_ln36_fu_320_p2;
            end if; 
        end if;
    end process;

    m02_fu_134_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln36_fu_314_p2 = ap_const_lv1_1))) then 
                m02_fu_134 <= ap_const_lv32_0;
            elsif (((grp_HuMoment_0_300_512_1_2_Pipeline_loop_Center_rows_fu_184_m02_1_out_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state42))) then 
                m02_fu_134 <= grp_HuMoment_0_300_512_1_2_Pipeline_loop_Center_rows_fu_184_m02_1_out_o;
            end if; 
        end if;
    end process;

    m11_fu_142_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln36_fu_314_p2 = ap_const_lv1_1))) then 
                m11_fu_142 <= ap_const_lv32_0;
            elsif (((grp_HuMoment_0_300_512_1_2_Pipeline_loop_Center_rows_fu_184_m11_1_out_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state42))) then 
                m11_fu_142 <= grp_HuMoment_0_300_512_1_2_Pipeline_loop_Center_rows_fu_184_m11_1_out_o;
            end if; 
        end if;
    end process;

    m20_fu_138_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln36_fu_314_p2 = ap_const_lv1_1))) then 
                m20_fu_138 <= ap_const_lv32_0;
            elsif (((grp_HuMoment_0_300_512_1_2_Pipeline_loop_Center_rows_fu_184_m20_1_out_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state42))) then 
                m20_fu_138 <= grp_HuMoment_0_300_512_1_2_Pipeline_loop_Center_rows_fu_184_m20_1_out_o;
            end if; 
        end if;
    end process;

    s00_fu_122_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                s00_fu_122 <= ap_const_lv32_0;
            elsif (((grp_HuMoment_0_300_512_1_2_Pipeline_loop_General_rows_fu_172_s00_1_out_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                s00_fu_122 <= grp_HuMoment_0_300_512_1_2_Pipeline_loop_General_rows_fu_172_s00_1_out_o;
            end if; 
        end if;
    end process;

    s01_fu_118_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                s01_fu_118 <= ap_const_lv32_0;
            elsif (((grp_HuMoment_0_300_512_1_2_Pipeline_loop_General_rows_fu_172_s01_1_out_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                s01_fu_118 <= grp_HuMoment_0_300_512_1_2_Pipeline_loop_General_rows_fu_172_s01_1_out_o;
            end if; 
        end if;
    end process;

    s10_fu_114_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                s10_fu_114 <= ap_const_lv32_0;
            elsif (((grp_HuMoment_0_300_512_1_2_Pipeline_loop_General_rows_fu_172_s10_1_out_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                s10_fu_114 <= grp_HuMoment_0_300_512_1_2_Pipeline_loop_General_rows_fu_172_s10_1_out_o;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state66)) then
                M_reg_1134 <= grp_fu_200_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state20)) then
                conv1_reg_1047 <= grp_fu_233_p1;
                conv_reg_1042 <= grp_fu_230_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state27)) then
                dc_1_reg_1057 <= grp_fu_241_p2;
                dc_reg_1052 <= grp_fu_236_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state70)) then
                dc_2_reg_1144 <= grp_fu_213_p2;
                mul4_reg_1139 <= grp_fu_209_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state30) and (icmp_ln58_fu_643_p2 = ap_const_lv1_0))) then
                empty_107_reg_1102 <= empty_107_fu_659_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state71)) then
                isNeg_2_reg_1159 <= add_ln346_fu_718_p2(8 downto 8);
                p_Result_4_reg_1149 <= data_V_2_fu_689_p1(31 downto 31);
                p_Result_5_reg_1154 <= p_Result_5_fu_710_p1;
                ush_2_reg_1164 <= ush_2_fu_742_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state80)) then
                isNeg_3_reg_1185 <= add_ln346_1_fu_853_p2(8 downto 8);
                p_Result_6_reg_1175 <= data_V_3_fu_823_p1(31 downto 31);
                p_Result_7_reg_1180 <= p_Result_7_fu_845_p1;
                ush_3_reg_1190 <= ush_3_fu_877_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                j_2_reg_991 <= j_fu_126;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state30)) then
                j_3_reg_1094 <= j_1_fu_146;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state28)) then
                p_Result_2_reg_1073 <= data_V_1_fu_493_p1(63 downto 63);
                p_Result_s_reg_1062 <= data_V_fu_368_p1(63 downto 63);
                val_1_reg_1078 <= val_1_fu_610_p3;
                val_reg_1067 <= val_fu_485_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state61) or (ap_const_logic_1 = ap_CS_fsm_state18))) then
                reg_261 <= grp_fu_219_p2;
                reg_268 <= grp_fu_223_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state79) or (ap_const_logic_1 = ap_CS_fsm_state70) or (ap_const_logic_1 = ap_CS_fsm_state66) or (ap_const_logic_1 = ap_CS_fsm_state45) or (ap_const_logic_1 = ap_CS_fsm_state40))) then
                reg_275 <= grp_fu_204_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state75) or (ap_const_logic_1 = ap_CS_fsm_state66))) then
                reg_284 <= grp_fu_196_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state29)) then
                result_V_14_reg_1084 <= result_V_14_fu_623_p3;
                result_V_15_reg_1089 <= result_V_15_fu_634_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state41)) then
                    tmp_2_reg_1114(17 downto 9) <= tmp_2_fu_669_p3(17 downto 9);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln36_fu_314_p2 = ap_const_lv1_0))) then
                    tmp_9_reg_999(17 downto 9) <= tmp_9_fu_326_p3(17 downto 9);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state62)) then
                u11_reg_1128 <= grp_fu_219_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state72)) then
                val_2_reg_1169 <= val_2_fu_804_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state81)) then
                val_3_reg_1195 <= val_3_fu_939_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state36)) then
                y0_reg_1107 <= grp_fu_227_p1;
            end if;
        end if;
    end process;
    tmp_9_reg_999(8 downto 0) <= "000000000";
    tmp_2_reg_1114(8 downto 0) <= "000000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state2, icmp_ln36_fu_314_p2, ap_CS_fsm_state30, icmp_ln58_fu_643_p2, grp_HuMoment_0_300_512_1_2_Pipeline_loop_General_rows_fu_172_ap_done, grp_HuMoment_0_300_512_1_2_Pipeline_loop_Center_rows_fu_184_ap_done, ap_CS_fsm_state3, ap_CS_fsm_state42)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln36_fu_314_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                if (((grp_HuMoment_0_300_512_1_2_Pipeline_loop_General_rows_fu_172_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state16;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state18;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state19;
            when ap_ST_fsm_state19 => 
                ap_NS_fsm <= ap_ST_fsm_state20;
            when ap_ST_fsm_state20 => 
                ap_NS_fsm <= ap_ST_fsm_state21;
            when ap_ST_fsm_state21 => 
                ap_NS_fsm <= ap_ST_fsm_state22;
            when ap_ST_fsm_state22 => 
                ap_NS_fsm <= ap_ST_fsm_state23;
            when ap_ST_fsm_state23 => 
                ap_NS_fsm <= ap_ST_fsm_state24;
            when ap_ST_fsm_state24 => 
                ap_NS_fsm <= ap_ST_fsm_state25;
            when ap_ST_fsm_state25 => 
                ap_NS_fsm <= ap_ST_fsm_state26;
            when ap_ST_fsm_state26 => 
                ap_NS_fsm <= ap_ST_fsm_state27;
            when ap_ST_fsm_state27 => 
                ap_NS_fsm <= ap_ST_fsm_state28;
            when ap_ST_fsm_state28 => 
                ap_NS_fsm <= ap_ST_fsm_state29;
            when ap_ST_fsm_state29 => 
                ap_NS_fsm <= ap_ST_fsm_state30;
            when ap_ST_fsm_state30 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state30) and (icmp_ln58_fu_643_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state43;
                else
                    ap_NS_fsm <= ap_ST_fsm_state31;
                end if;
            when ap_ST_fsm_state31 => 
                ap_NS_fsm <= ap_ST_fsm_state32;
            when ap_ST_fsm_state32 => 
                ap_NS_fsm <= ap_ST_fsm_state33;
            when ap_ST_fsm_state33 => 
                ap_NS_fsm <= ap_ST_fsm_state34;
            when ap_ST_fsm_state34 => 
                ap_NS_fsm <= ap_ST_fsm_state35;
            when ap_ST_fsm_state35 => 
                ap_NS_fsm <= ap_ST_fsm_state36;
            when ap_ST_fsm_state36 => 
                ap_NS_fsm <= ap_ST_fsm_state37;
            when ap_ST_fsm_state37 => 
                ap_NS_fsm <= ap_ST_fsm_state38;
            when ap_ST_fsm_state38 => 
                ap_NS_fsm <= ap_ST_fsm_state39;
            when ap_ST_fsm_state39 => 
                ap_NS_fsm <= ap_ST_fsm_state40;
            when ap_ST_fsm_state40 => 
                ap_NS_fsm <= ap_ST_fsm_state41;
            when ap_ST_fsm_state41 => 
                ap_NS_fsm <= ap_ST_fsm_state42;
            when ap_ST_fsm_state42 => 
                if (((grp_HuMoment_0_300_512_1_2_Pipeline_loop_Center_rows_fu_184_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state42))) then
                    ap_NS_fsm <= ap_ST_fsm_state30;
                else
                    ap_NS_fsm <= ap_ST_fsm_state42;
                end if;
            when ap_ST_fsm_state43 => 
                ap_NS_fsm <= ap_ST_fsm_state44;
            when ap_ST_fsm_state44 => 
                ap_NS_fsm <= ap_ST_fsm_state45;
            when ap_ST_fsm_state45 => 
                ap_NS_fsm <= ap_ST_fsm_state46;
            when ap_ST_fsm_state46 => 
                ap_NS_fsm <= ap_ST_fsm_state47;
            when ap_ST_fsm_state47 => 
                ap_NS_fsm <= ap_ST_fsm_state48;
            when ap_ST_fsm_state48 => 
                ap_NS_fsm <= ap_ST_fsm_state49;
            when ap_ST_fsm_state49 => 
                ap_NS_fsm <= ap_ST_fsm_state50;
            when ap_ST_fsm_state50 => 
                ap_NS_fsm <= ap_ST_fsm_state51;
            when ap_ST_fsm_state51 => 
                ap_NS_fsm <= ap_ST_fsm_state52;
            when ap_ST_fsm_state52 => 
                ap_NS_fsm <= ap_ST_fsm_state53;
            when ap_ST_fsm_state53 => 
                ap_NS_fsm <= ap_ST_fsm_state54;
            when ap_ST_fsm_state54 => 
                ap_NS_fsm <= ap_ST_fsm_state55;
            when ap_ST_fsm_state55 => 
                ap_NS_fsm <= ap_ST_fsm_state56;
            when ap_ST_fsm_state56 => 
                ap_NS_fsm <= ap_ST_fsm_state57;
            when ap_ST_fsm_state57 => 
                ap_NS_fsm <= ap_ST_fsm_state58;
            when ap_ST_fsm_state58 => 
                ap_NS_fsm <= ap_ST_fsm_state59;
            when ap_ST_fsm_state59 => 
                ap_NS_fsm <= ap_ST_fsm_state60;
            when ap_ST_fsm_state60 => 
                ap_NS_fsm <= ap_ST_fsm_state61;
            when ap_ST_fsm_state61 => 
                ap_NS_fsm <= ap_ST_fsm_state62;
            when ap_ST_fsm_state62 => 
                ap_NS_fsm <= ap_ST_fsm_state63;
            when ap_ST_fsm_state63 => 
                ap_NS_fsm <= ap_ST_fsm_state64;
            when ap_ST_fsm_state64 => 
                ap_NS_fsm <= ap_ST_fsm_state65;
            when ap_ST_fsm_state65 => 
                ap_NS_fsm <= ap_ST_fsm_state66;
            when ap_ST_fsm_state66 => 
                ap_NS_fsm <= ap_ST_fsm_state67;
            when ap_ST_fsm_state67 => 
                ap_NS_fsm <= ap_ST_fsm_state68;
            when ap_ST_fsm_state68 => 
                ap_NS_fsm <= ap_ST_fsm_state69;
            when ap_ST_fsm_state69 => 
                ap_NS_fsm <= ap_ST_fsm_state70;
            when ap_ST_fsm_state70 => 
                ap_NS_fsm <= ap_ST_fsm_state71;
            when ap_ST_fsm_state71 => 
                ap_NS_fsm <= ap_ST_fsm_state72;
            when ap_ST_fsm_state72 => 
                ap_NS_fsm <= ap_ST_fsm_state73;
            when ap_ST_fsm_state73 => 
                ap_NS_fsm <= ap_ST_fsm_state74;
            when ap_ST_fsm_state74 => 
                ap_NS_fsm <= ap_ST_fsm_state75;
            when ap_ST_fsm_state75 => 
                ap_NS_fsm <= ap_ST_fsm_state76;
            when ap_ST_fsm_state76 => 
                ap_NS_fsm <= ap_ST_fsm_state77;
            when ap_ST_fsm_state77 => 
                ap_NS_fsm <= ap_ST_fsm_state78;
            when ap_ST_fsm_state78 => 
                ap_NS_fsm <= ap_ST_fsm_state79;
            when ap_ST_fsm_state79 => 
                ap_NS_fsm <= ap_ST_fsm_state80;
            when ap_ST_fsm_state80 => 
                ap_NS_fsm <= ap_ST_fsm_state81;
            when ap_ST_fsm_state81 => 
                ap_NS_fsm <= ap_ST_fsm_state82;
            when ap_ST_fsm_state82 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;

    M2int_address0_assign_proc : process(ap_CS_fsm_state82, ap_CS_fsm_state73)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
            M2int_address0 <= ap_const_lv64_1(1 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state73)) then 
            M2int_address0 <= ap_const_lv64_0(1 - 1 downto 0);
        else 
            M2int_address0 <= "X";
        end if; 
    end process;


    M2int_ce0_assign_proc : process(ap_CS_fsm_state82, ap_CS_fsm_state73)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state73) or (ap_const_logic_1 = ap_CS_fsm_state82))) then 
            M2int_ce0 <= ap_const_logic_1;
        else 
            M2int_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    M2int_d0_assign_proc : process(ap_CS_fsm_state82, ap_CS_fsm_state73, result_V_fu_816_p3, result_V_16_fu_951_p3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
            M2int_d0 <= result_V_16_fu_951_p3;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state73)) then 
            M2int_d0 <= result_V_fu_816_p3;
        else 
            M2int_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    M2int_we0_assign_proc : process(ap_CS_fsm_state82, ap_CS_fsm_state73)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state73) or (ap_const_logic_1 = ap_CS_fsm_state82))) then 
            M2int_we0 <= ap_const_logic_1;
        else 
            M2int_we0 <= ap_const_logic_0;
        end if; 
    end process;

    add_ln346_1_fu_853_p2 <= std_logic_vector(unsigned(zext_ln346_1_fu_849_p1) + unsigned(ap_const_lv9_181));
    add_ln346_fu_718_p2 <= std_logic_vector(unsigned(zext_ln346_fu_714_p1) + unsigned(ap_const_lv9_181));
    add_ln36_fu_320_p2 <= std_logic_vector(unsigned(j_fu_126) + unsigned(ap_const_lv9_1));
    add_ln515_1_fu_536_p2 <= std_logic_vector(unsigned(zext_ln515_1_fu_532_p1) + unsigned(ap_const_lv12_C01));
    add_ln515_fu_411_p2 <= std_logic_vector(unsigned(zext_ln515_fu_407_p1) + unsigned(ap_const_lv12_C01));
    add_ln58_fu_649_p2 <= std_logic_vector(unsigned(j_1_fu_146) + unsigned(ap_const_lv9_1));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state18 <= ap_CS_fsm(17);
    ap_CS_fsm_state19 <= ap_CS_fsm(18);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state20 <= ap_CS_fsm(19);
    ap_CS_fsm_state21 <= ap_CS_fsm(20);
    ap_CS_fsm_state27 <= ap_CS_fsm(26);
    ap_CS_fsm_state28 <= ap_CS_fsm(27);
    ap_CS_fsm_state29 <= ap_CS_fsm(28);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state30 <= ap_CS_fsm(29);
    ap_CS_fsm_state31 <= ap_CS_fsm(30);
    ap_CS_fsm_state36 <= ap_CS_fsm(35);
    ap_CS_fsm_state37 <= ap_CS_fsm(36);
    ap_CS_fsm_state40 <= ap_CS_fsm(39);
    ap_CS_fsm_state41 <= ap_CS_fsm(40);
    ap_CS_fsm_state42 <= ap_CS_fsm(41);
    ap_CS_fsm_state45 <= ap_CS_fsm(44);
    ap_CS_fsm_state46 <= ap_CS_fsm(45);
    ap_CS_fsm_state47 <= ap_CS_fsm(46);
    ap_CS_fsm_state61 <= ap_CS_fsm(60);
    ap_CS_fsm_state62 <= ap_CS_fsm(61);
    ap_CS_fsm_state63 <= ap_CS_fsm(62);
    ap_CS_fsm_state66 <= ap_CS_fsm(65);
    ap_CS_fsm_state67 <= ap_CS_fsm(66);
    ap_CS_fsm_state70 <= ap_CS_fsm(69);
    ap_CS_fsm_state71 <= ap_CS_fsm(70);
    ap_CS_fsm_state72 <= ap_CS_fsm(71);
    ap_CS_fsm_state73 <= ap_CS_fsm(72);
    ap_CS_fsm_state75 <= ap_CS_fsm(74);
    ap_CS_fsm_state76 <= ap_CS_fsm(75);
    ap_CS_fsm_state79 <= ap_CS_fsm(78);
    ap_CS_fsm_state80 <= ap_CS_fsm(79);
    ap_CS_fsm_state81 <= ap_CS_fsm(80);
    ap_CS_fsm_state82 <= ap_CS_fsm(81);
    ap_ST_fsm_state10_blk <= ap_const_logic_0;
    ap_ST_fsm_state11_blk <= ap_const_logic_0;
    ap_ST_fsm_state12_blk <= ap_const_logic_0;
    ap_ST_fsm_state13_blk <= ap_const_logic_0;
    ap_ST_fsm_state14_blk <= ap_const_logic_0;
    ap_ST_fsm_state15_blk <= ap_const_logic_0;
    ap_ST_fsm_state16_blk <= ap_const_logic_0;
    ap_ST_fsm_state17_blk <= ap_const_logic_0;
    ap_ST_fsm_state18_blk <= ap_const_logic_0;
    ap_ST_fsm_state19_blk <= ap_const_logic_0;

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start, ap_done_reg)
    begin
        if (((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state20_blk <= ap_const_logic_0;
    ap_ST_fsm_state21_blk <= ap_const_logic_0;
    ap_ST_fsm_state22_blk <= ap_const_logic_0;
    ap_ST_fsm_state23_blk <= ap_const_logic_0;
    ap_ST_fsm_state24_blk <= ap_const_logic_0;
    ap_ST_fsm_state25_blk <= ap_const_logic_0;
    ap_ST_fsm_state26_blk <= ap_const_logic_0;
    ap_ST_fsm_state27_blk <= ap_const_logic_0;
    ap_ST_fsm_state28_blk <= ap_const_logic_0;
    ap_ST_fsm_state29_blk <= ap_const_logic_0;
    ap_ST_fsm_state2_blk <= ap_const_logic_0;
    ap_ST_fsm_state30_blk <= ap_const_logic_0;
    ap_ST_fsm_state31_blk <= ap_const_logic_0;
    ap_ST_fsm_state32_blk <= ap_const_logic_0;
    ap_ST_fsm_state33_blk <= ap_const_logic_0;
    ap_ST_fsm_state34_blk <= ap_const_logic_0;
    ap_ST_fsm_state35_blk <= ap_const_logic_0;
    ap_ST_fsm_state36_blk <= ap_const_logic_0;
    ap_ST_fsm_state37_blk <= ap_const_logic_0;
    ap_ST_fsm_state38_blk <= ap_const_logic_0;
    ap_ST_fsm_state39_blk <= ap_const_logic_0;

    ap_ST_fsm_state3_blk_assign_proc : process(grp_HuMoment_0_300_512_1_2_Pipeline_loop_General_rows_fu_172_ap_done)
    begin
        if ((grp_HuMoment_0_300_512_1_2_Pipeline_loop_General_rows_fu_172_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state3_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state3_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state40_blk <= ap_const_logic_0;
    ap_ST_fsm_state41_blk <= ap_const_logic_0;

    ap_ST_fsm_state42_blk_assign_proc : process(grp_HuMoment_0_300_512_1_2_Pipeline_loop_Center_rows_fu_184_ap_done)
    begin
        if ((grp_HuMoment_0_300_512_1_2_Pipeline_loop_Center_rows_fu_184_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state42_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state42_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state43_blk <= ap_const_logic_0;
    ap_ST_fsm_state44_blk <= ap_const_logic_0;
    ap_ST_fsm_state45_blk <= ap_const_logic_0;
    ap_ST_fsm_state46_blk <= ap_const_logic_0;
    ap_ST_fsm_state47_blk <= ap_const_logic_0;
    ap_ST_fsm_state48_blk <= ap_const_logic_0;
    ap_ST_fsm_state49_blk <= ap_const_logic_0;
    ap_ST_fsm_state4_blk <= ap_const_logic_0;
    ap_ST_fsm_state50_blk <= ap_const_logic_0;
    ap_ST_fsm_state51_blk <= ap_const_logic_0;
    ap_ST_fsm_state52_blk <= ap_const_logic_0;
    ap_ST_fsm_state53_blk <= ap_const_logic_0;
    ap_ST_fsm_state54_blk <= ap_const_logic_0;
    ap_ST_fsm_state55_blk <= ap_const_logic_0;
    ap_ST_fsm_state56_blk <= ap_const_logic_0;
    ap_ST_fsm_state57_blk <= ap_const_logic_0;
    ap_ST_fsm_state58_blk <= ap_const_logic_0;
    ap_ST_fsm_state59_blk <= ap_const_logic_0;
    ap_ST_fsm_state5_blk <= ap_const_logic_0;
    ap_ST_fsm_state60_blk <= ap_const_logic_0;
    ap_ST_fsm_state61_blk <= ap_const_logic_0;
    ap_ST_fsm_state62_blk <= ap_const_logic_0;
    ap_ST_fsm_state63_blk <= ap_const_logic_0;
    ap_ST_fsm_state64_blk <= ap_const_logic_0;
    ap_ST_fsm_state65_blk <= ap_const_logic_0;
    ap_ST_fsm_state66_blk <= ap_const_logic_0;
    ap_ST_fsm_state67_blk <= ap_const_logic_0;
    ap_ST_fsm_state68_blk <= ap_const_logic_0;
    ap_ST_fsm_state69_blk <= ap_const_logic_0;
    ap_ST_fsm_state6_blk <= ap_const_logic_0;
    ap_ST_fsm_state70_blk <= ap_const_logic_0;
    ap_ST_fsm_state71_blk <= ap_const_logic_0;
    ap_ST_fsm_state72_blk <= ap_const_logic_0;
    ap_ST_fsm_state73_blk <= ap_const_logic_0;
    ap_ST_fsm_state74_blk <= ap_const_logic_0;
    ap_ST_fsm_state75_blk <= ap_const_logic_0;
    ap_ST_fsm_state76_blk <= ap_const_logic_0;
    ap_ST_fsm_state77_blk <= ap_const_logic_0;
    ap_ST_fsm_state78_blk <= ap_const_logic_0;
    ap_ST_fsm_state79_blk <= ap_const_logic_0;
    ap_ST_fsm_state7_blk <= ap_const_logic_0;
    ap_ST_fsm_state80_blk <= ap_const_logic_0;
    ap_ST_fsm_state81_blk <= ap_const_logic_0;
    ap_ST_fsm_state82_blk <= ap_const_logic_0;
    ap_ST_fsm_state8_blk <= ap_const_logic_0;
    ap_ST_fsm_state9_blk <= ap_const_logic_0;

    ap_block_state1_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_block_state1 <= ((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0));
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state82)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state82)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    data_V_1_fu_493_p1 <= dc_1_reg_1057;
    data_V_2_fu_689_p1 <= dc_2_reg_1144;
    data_V_3_fu_823_p1 <= reg_275;
    data_V_fu_368_p1 <= dc_reg_1052;
    empty_107_fu_659_p2 <= std_logic_vector(unsigned(j_2_cast8_fu_655_p1) - unsigned(result_V_15_reg_1089));
    grp_HuMoment_0_300_512_1_2_Pipeline_loop_Center_rows_fu_184_ap_start <= grp_HuMoment_0_300_512_1_2_Pipeline_loop_Center_rows_fu_184_ap_start_reg;
    grp_HuMoment_0_300_512_1_2_Pipeline_loop_General_rows_fu_172_ap_start <= grp_HuMoment_0_300_512_1_2_Pipeline_loop_General_rows_fu_172_ap_start_reg;

    grp_fu_196_ce_assign_proc : process(grp_HuMoment_0_300_512_1_2_Pipeline_loop_General_rows_fu_172_grp_fu_196_p_ce, grp_HuMoment_0_300_512_1_2_Pipeline_loop_Center_rows_fu_184_grp_fu_196_p_ce, ap_CS_fsm_state3, ap_CS_fsm_state42)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
            grp_fu_196_ce <= grp_HuMoment_0_300_512_1_2_Pipeline_loop_Center_rows_fu_184_grp_fu_196_p_ce;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_fu_196_ce <= grp_HuMoment_0_300_512_1_2_Pipeline_loop_General_rows_fu_172_grp_fu_196_p_ce;
        else 
            grp_fu_196_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_196_opcode_assign_proc : process(ap_CS_fsm_state62, ap_CS_fsm_state71, grp_HuMoment_0_300_512_1_2_Pipeline_loop_General_rows_fu_172_grp_fu_196_p_opcode, grp_HuMoment_0_300_512_1_2_Pipeline_loop_Center_rows_fu_184_grp_fu_196_p_opcode, ap_CS_fsm_state3, ap_CS_fsm_state42)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
            grp_fu_196_opcode <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_HuMoment_0_300_512_1_2_Pipeline_loop_Center_rows_fu_184_grp_fu_196_p_opcode),2));
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_fu_196_opcode <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_HuMoment_0_300_512_1_2_Pipeline_loop_General_rows_fu_172_grp_fu_196_p_opcode),2));
        elsif ((ap_const_logic_1 = ap_CS_fsm_state62)) then 
            grp_fu_196_opcode <= ap_const_lv2_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state71)) then 
            grp_fu_196_opcode <= ap_const_lv2_0;
        else 
            grp_fu_196_opcode <= "XX";
        end if; 
    end process;


    grp_fu_196_p0_assign_proc : process(reg_261, reg_275, ap_CS_fsm_state62, ap_CS_fsm_state71, grp_HuMoment_0_300_512_1_2_Pipeline_loop_General_rows_fu_172_grp_fu_196_p_din0, grp_HuMoment_0_300_512_1_2_Pipeline_loop_Center_rows_fu_184_grp_fu_196_p_din0, ap_CS_fsm_state3, ap_CS_fsm_state42)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
            grp_fu_196_p0 <= grp_HuMoment_0_300_512_1_2_Pipeline_loop_Center_rows_fu_184_grp_fu_196_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_fu_196_p0 <= grp_HuMoment_0_300_512_1_2_Pipeline_loop_General_rows_fu_172_grp_fu_196_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state71)) then 
            grp_fu_196_p0 <= reg_275;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state62)) then 
            grp_fu_196_p0 <= reg_261;
        else 
            grp_fu_196_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_196_p1_assign_proc : process(reg_268, ap_CS_fsm_state62, mul4_reg_1139, ap_CS_fsm_state71, grp_HuMoment_0_300_512_1_2_Pipeline_loop_General_rows_fu_172_grp_fu_196_p_din1, grp_HuMoment_0_300_512_1_2_Pipeline_loop_Center_rows_fu_184_grp_fu_196_p_din1, ap_CS_fsm_state3, ap_CS_fsm_state42)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
            grp_fu_196_p1 <= grp_HuMoment_0_300_512_1_2_Pipeline_loop_Center_rows_fu_184_grp_fu_196_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_fu_196_p1 <= grp_HuMoment_0_300_512_1_2_Pipeline_loop_General_rows_fu_172_grp_fu_196_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state71)) then 
            grp_fu_196_p1 <= mul4_reg_1139;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state62)) then 
            grp_fu_196_p1 <= reg_268;
        else 
            grp_fu_196_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_204_ce_assign_proc : process(grp_HuMoment_0_300_512_1_2_Pipeline_loop_Center_rows_fu_184_grp_fu_204_p_ce, ap_CS_fsm_state42)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
            grp_fu_204_ce <= grp_HuMoment_0_300_512_1_2_Pipeline_loop_Center_rows_fu_184_grp_fu_204_p_ce;
        else 
            grp_fu_204_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_204_p0_assign_proc : process(ap_CS_fsm_state30, reg_284, y0_reg_1107, u11_reg_1128, grp_HuMoment_0_300_512_1_2_Pipeline_loop_Center_rows_fu_184_grp_fu_204_p_din0, s00_fu_122, ap_CS_fsm_state42, ap_CS_fsm_state37, ap_CS_fsm_state63, ap_CS_fsm_state67, ap_CS_fsm_state76)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
            grp_fu_204_p0 <= grp_HuMoment_0_300_512_1_2_Pipeline_loop_Center_rows_fu_184_grp_fu_204_p_din0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state76) or (ap_const_logic_1 = ap_CS_fsm_state67))) then 
            grp_fu_204_p0 <= reg_284;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state63)) then 
            grp_fu_204_p0 <= u11_reg_1128;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            grp_fu_204_p0 <= y0_reg_1107;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
            grp_fu_204_p0 <= s00_fu_122;
        else 
            grp_fu_204_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_204_p1_assign_proc : process(ap_CS_fsm_state30, reg_284, y0_reg_1107, grp_HuMoment_0_300_512_1_2_Pipeline_loop_Center_rows_fu_184_grp_fu_204_p_din1, s00_fu_122, ap_CS_fsm_state42, ap_CS_fsm_state37, ap_CS_fsm_state63, ap_CS_fsm_state67, ap_CS_fsm_state76)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
            grp_fu_204_p1 <= grp_HuMoment_0_300_512_1_2_Pipeline_loop_Center_rows_fu_184_grp_fu_204_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state76)) then 
            grp_fu_204_p1 <= ap_const_lv32_4B81B320;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state67)) then 
            grp_fu_204_p1 <= reg_284;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state63)) then 
            grp_fu_204_p1 <= ap_const_lv32_40800000;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            grp_fu_204_p1 <= y0_reg_1107;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
            grp_fu_204_p1 <= s00_fu_122;
        else 
            grp_fu_204_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_209_ce_assign_proc : process(grp_HuMoment_0_300_512_1_2_Pipeline_loop_Center_rows_fu_184_grp_fu_209_p_ce, ap_CS_fsm_state42)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
            grp_fu_209_ce <= grp_HuMoment_0_300_512_1_2_Pipeline_loop_Center_rows_fu_184_grp_fu_209_p_ce;
        else 
            grp_fu_209_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_209_p0_assign_proc : process(reg_275, grp_HuMoment_0_300_512_1_2_Pipeline_loop_Center_rows_fu_184_grp_fu_209_p_din0, ap_CS_fsm_state42, ap_CS_fsm_state67)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
            grp_fu_209_p0 <= grp_HuMoment_0_300_512_1_2_Pipeline_loop_Center_rows_fu_184_grp_fu_209_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state67)) then 
            grp_fu_209_p0 <= reg_275;
        else 
            grp_fu_209_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_209_p1_assign_proc : process(u11_reg_1128, grp_HuMoment_0_300_512_1_2_Pipeline_loop_Center_rows_fu_184_grp_fu_209_p_din1, ap_CS_fsm_state42, ap_CS_fsm_state67)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
            grp_fu_209_p1 <= grp_HuMoment_0_300_512_1_2_Pipeline_loop_Center_rows_fu_184_grp_fu_209_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state67)) then 
            grp_fu_209_p1 <= u11_reg_1128;
        else 
            grp_fu_209_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_219_p0_assign_proc : process(ap_CS_fsm_state2, s10_fu_114, m11_fu_142, m20_fu_138, ap_CS_fsm_state46, ap_CS_fsm_state47)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state47)) then 
            grp_fu_219_p0 <= m11_fu_142;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state46)) then 
            grp_fu_219_p0 <= m20_fu_138;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_219_p0 <= s10_fu_114;
        else 
            grp_fu_219_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_219_p1_assign_proc : process(ap_CS_fsm_state2, reg_275, s00_fu_122, ap_CS_fsm_state46, ap_CS_fsm_state47)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state47) or (ap_const_logic_1 = ap_CS_fsm_state46))) then 
            grp_fu_219_p1 <= reg_275;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_219_p1 <= s00_fu_122;
        else 
            grp_fu_219_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_223_p0_assign_proc : process(ap_CS_fsm_state2, s01_fu_118, m02_fu_134, ap_CS_fsm_state46)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state46)) then 
            grp_fu_223_p0 <= m02_fu_134;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_223_p0 <= s01_fu_118;
        else 
            grp_fu_223_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_223_p1_assign_proc : process(ap_CS_fsm_state2, reg_275, s00_fu_122, ap_CS_fsm_state46)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state46)) then 
            grp_fu_223_p1 <= reg_275;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_223_p1 <= s00_fu_122;
        else 
            grp_fu_223_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_227_ce_assign_proc : process(grp_HuMoment_0_300_512_1_2_Pipeline_loop_Center_rows_fu_184_grp_fu_227_p_ce, ap_CS_fsm_state42)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
            grp_fu_227_ce <= grp_HuMoment_0_300_512_1_2_Pipeline_loop_Center_rows_fu_184_grp_fu_227_p_ce;
        else 
            grp_fu_227_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_227_p0_assign_proc : process(empty_107_reg_1102, grp_HuMoment_0_300_512_1_2_Pipeline_loop_Center_rows_fu_184_grp_fu_227_p_din0, ap_CS_fsm_state42, ap_CS_fsm_state31)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
            grp_fu_227_p0 <= grp_HuMoment_0_300_512_1_2_Pipeline_loop_Center_rows_fu_184_grp_fu_227_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
            grp_fu_227_p0 <= empty_107_reg_1102;
        else 
            grp_fu_227_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    icmp_ln36_fu_314_p2 <= "1" when (j_fu_126 = ap_const_lv9_12C) else "0";
    icmp_ln58_fu_643_p2 <= "1" when (j_1_fu_146 = ap_const_lv9_12C) else "0";

    img_1_data15_read_assign_proc : process(grp_HuMoment_0_300_512_1_2_Pipeline_loop_General_rows_fu_172_img_1_data15_read, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            img_1_data15_read <= grp_HuMoment_0_300_512_1_2_Pipeline_loop_General_rows_fu_172_img_1_data15_read;
        else 
            img_1_data15_read <= ap_const_logic_0;
        end if; 
    end process;

    isNeg_1_fu_542_p3 <= add_ln515_1_fu_536_p2(11 downto 11);
    isNeg_2_fu_724_p3 <= add_ln346_fu_718_p2(8 downto 8);
    isNeg_3_fu_859_p3 <= add_ln346_1_fu_853_p2(8 downto 8);
    isNeg_fu_417_p3 <= add_ln515_fu_411_p2(11 downto 11);
    j_2_cast8_fu_655_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(j_1_fu_146),32));
    mantissa_1_fu_518_p4 <= ((ap_const_lv1_1 & p_Result_3_fu_514_p1) & ap_const_lv1_0);
    mantissa_2_fu_750_p4 <= ((ap_const_lv1_1 & p_Result_5_reg_1154) & ap_const_lv1_0);
    mantissa_3_fu_885_p4 <= ((ap_const_lv1_1 & p_Result_7_reg_1180) & ap_const_lv1_0);
    mantissa_fu_393_p4 <= ((ap_const_lv1_1 & p_Result_1_fu_389_p1) & ap_const_lv1_0);

    pBmpBuf_address0_assign_proc : process(grp_HuMoment_0_300_512_1_2_Pipeline_loop_General_rows_fu_172_pBmpBuf_address0, grp_HuMoment_0_300_512_1_2_Pipeline_loop_Center_rows_fu_184_pBmpBuf_address0, ap_CS_fsm_state3, ap_CS_fsm_state42)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
            pBmpBuf_address0 <= grp_HuMoment_0_300_512_1_2_Pipeline_loop_Center_rows_fu_184_pBmpBuf_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            pBmpBuf_address0 <= grp_HuMoment_0_300_512_1_2_Pipeline_loop_General_rows_fu_172_pBmpBuf_address0;
        else 
            pBmpBuf_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    pBmpBuf_ce0_assign_proc : process(grp_HuMoment_0_300_512_1_2_Pipeline_loop_General_rows_fu_172_pBmpBuf_ce0, grp_HuMoment_0_300_512_1_2_Pipeline_loop_Center_rows_fu_184_pBmpBuf_ce0, ap_CS_fsm_state3, ap_CS_fsm_state42)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
            pBmpBuf_ce0 <= grp_HuMoment_0_300_512_1_2_Pipeline_loop_Center_rows_fu_184_pBmpBuf_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            pBmpBuf_ce0 <= grp_HuMoment_0_300_512_1_2_Pipeline_loop_General_rows_fu_172_pBmpBuf_ce0;
        else 
            pBmpBuf_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    pBmpBuf_we0_assign_proc : process(grp_HuMoment_0_300_512_1_2_Pipeline_loop_General_rows_fu_172_pBmpBuf_we0, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            pBmpBuf_we0 <= grp_HuMoment_0_300_512_1_2_Pipeline_loop_General_rows_fu_172_pBmpBuf_we0;
        else 
            pBmpBuf_we0 <= (0=>ap_const_logic_0, others=>'-');
        end if; 
    end process;

    p_Result_1_fu_389_p1 <= data_V_fu_368_p1(52 - 1 downto 0);
    p_Result_3_fu_514_p1 <= data_V_1_fu_493_p1(52 - 1 downto 0);
    p_Result_5_fu_710_p1 <= data_V_2_fu_689_p1(23 - 1 downto 0);
    p_Result_7_fu_845_p1 <= data_V_3_fu_823_p1(23 - 1 downto 0);
    r_V_1_fu_457_p2 <= std_logic_vector(shift_left(unsigned(zext_ln15_fu_403_p1),to_integer(unsigned('0' & zext_ln1488_fu_447_p1(31-1 downto 0)))));
    r_V_2_fu_576_p2 <= std_logic_vector(shift_right(unsigned(zext_ln15_1_fu_528_p1),to_integer(unsigned('0' & zext_ln1488_1_fu_572_p1(31-1 downto 0)))));
    r_V_3_fu_582_p2 <= std_logic_vector(shift_left(unsigned(zext_ln15_1_fu_528_p1),to_integer(unsigned('0' & zext_ln1488_1_fu_572_p1(31-1 downto 0)))));
    r_V_4_fu_770_p2 <= std_logic_vector(shift_right(unsigned(zext_ln15_2_fu_759_p1),to_integer(unsigned('0' & zext_ln1488_2_fu_766_p1(31-1 downto 0)))));
    r_V_5_fu_776_p2 <= std_logic_vector(shift_left(unsigned(zext_ln15_2_fu_759_p1),to_integer(unsigned('0' & zext_ln1488_2_fu_766_p1(31-1 downto 0)))));
    r_V_6_fu_905_p2 <= std_logic_vector(shift_right(unsigned(zext_ln15_3_fu_894_p1),to_integer(unsigned('0' & zext_ln1488_3_fu_901_p1(31-1 downto 0)))));
    r_V_7_fu_911_p2 <= std_logic_vector(shift_left(unsigned(zext_ln15_3_fu_894_p1),to_integer(unsigned('0' & zext_ln1488_3_fu_901_p1(31-1 downto 0)))));
    r_V_fu_451_p2 <= std_logic_vector(shift_right(unsigned(zext_ln15_fu_403_p1),to_integer(unsigned('0' & zext_ln1488_fu_447_p1(31-1 downto 0)))));
    result_V_12_fu_946_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(val_3_reg_1195));
    result_V_14_fu_623_p3 <= 
        result_V_2_fu_618_p2 when (p_Result_s_reg_1062(0) = '1') else 
        val_reg_1067;
    result_V_15_fu_634_p3 <= 
        result_V_7_fu_629_p2 when (p_Result_2_reg_1073(0) = '1') else 
        val_1_reg_1078;
    result_V_16_fu_951_p3 <= 
        result_V_12_fu_946_p2 when (p_Result_6_reg_1175(0) = '1') else 
        val_3_reg_1195;
    result_V_2_fu_618_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(val_reg_1067));
    result_V_7_fu_629_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(val_1_reg_1078));
    result_V_8_fu_811_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(val_2_reg_1169));
    result_V_fu_816_p3 <= 
        result_V_8_fu_811_p2 when (p_Result_4_reg_1149(0) = '1') else 
        val_2_reg_1169;
        sext_ln1488_1_fu_568_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ush_1_fu_560_p3),32));

        sext_ln1488_2_fu_763_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ush_2_reg_1164),32));

        sext_ln1488_3_fu_898_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ush_3_reg_1190),32));

        sext_ln1488_fu_443_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ush_fu_435_p3),32));

        sext_ln1512_1_fu_556_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln1512_1_fu_550_p2),12));

        sext_ln1512_2_fu_738_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln1512_2_fu_732_p2),9));

        sext_ln1512_3_fu_873_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln1512_3_fu_867_p2),9));

        sext_ln1512_fu_431_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln1512_fu_425_p2),12));

    sub_ln1512_1_fu_550_p2 <= std_logic_vector(unsigned(ap_const_lv11_3FF) - unsigned(xs_exp_V_1_fu_504_p4));
    sub_ln1512_2_fu_732_p2 <= std_logic_vector(unsigned(ap_const_lv8_7F) - unsigned(xs_exp_V_2_fu_700_p4));
    sub_ln1512_3_fu_867_p2 <= std_logic_vector(unsigned(ap_const_lv8_7F) - unsigned(xs_exp_V_3_fu_835_p4));
    sub_ln1512_fu_425_p2 <= std_logic_vector(unsigned(ap_const_lv11_3FF) - unsigned(xs_exp_V_fu_379_p4));
    tmp_11_fu_782_p3 <= r_V_4_fu_770_p2(24 downto 24);
    tmp_17_fu_917_p3 <= r_V_6_fu_905_p2(24 downto 24);
    tmp_1_fu_929_p4 <= r_V_7_fu_911_p2(55 downto 24);
    tmp_2_fu_669_p3 <= (j_3_reg_1094 & ap_const_lv9_0);
    tmp_4_fu_475_p4 <= r_V_1_fu_457_p2(84 downto 53);
    tmp_5_fu_588_p3 <= r_V_2_fu_576_p2(53 downto 53);
    tmp_8_fu_600_p4 <= r_V_3_fu_582_p2(84 downto 53);
    tmp_9_fu_326_p3 <= (j_fu_126 & ap_const_lv9_0);
    tmp_fu_463_p3 <= r_V_fu_451_p2(53 downto 53);
    tmp_s_fu_794_p4 <= r_V_5_fu_776_p2(55 downto 24);
    ush_1_fu_560_p3 <= 
        sext_ln1512_1_fu_556_p1 when (isNeg_1_fu_542_p3(0) = '1') else 
        add_ln515_1_fu_536_p2;
    ush_2_fu_742_p3 <= 
        sext_ln1512_2_fu_738_p1 when (isNeg_2_fu_724_p3(0) = '1') else 
        add_ln346_fu_718_p2;
    ush_3_fu_877_p3 <= 
        sext_ln1512_3_fu_873_p1 when (isNeg_3_fu_859_p3(0) = '1') else 
        add_ln346_1_fu_853_p2;
    ush_fu_435_p3 <= 
        sext_ln1512_fu_431_p1 when (isNeg_fu_417_p3(0) = '1') else 
        add_ln515_fu_411_p2;
    val_1_fu_610_p3 <= 
        zext_ln818_1_fu_596_p1 when (isNeg_1_fu_542_p3(0) = '1') else 
        tmp_8_fu_600_p4;
    val_2_fu_804_p3 <= 
        zext_ln818_2_fu_790_p1 when (isNeg_2_reg_1159(0) = '1') else 
        tmp_s_fu_794_p4;
    val_3_fu_939_p3 <= 
        zext_ln818_3_fu_925_p1 when (isNeg_3_reg_1185(0) = '1') else 
        tmp_1_fu_929_p4;
    val_fu_485_p3 <= 
        zext_ln818_fu_471_p1 when (isNeg_fu_417_p3(0) = '1') else 
        tmp_4_fu_475_p4;
    xs_exp_V_1_fu_504_p4 <= data_V_1_fu_493_p1(62 downto 52);
    xs_exp_V_2_fu_700_p4 <= data_V_2_fu_689_p1(30 downto 23);
    xs_exp_V_3_fu_835_p4 <= data_V_3_fu_823_p1(30 downto 23);
    xs_exp_V_fu_379_p4 <= data_V_fu_368_p1(62 downto 52);
    zext_ln1488_1_fu_572_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln1488_1_fu_568_p1),137));
    zext_ln1488_2_fu_766_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln1488_2_fu_763_p1),79));
    zext_ln1488_3_fu_901_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln1488_3_fu_898_p1),79));
    zext_ln1488_fu_447_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln1488_fu_443_p1),137));
    zext_ln15_1_fu_528_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mantissa_1_fu_518_p4),137));
    zext_ln15_2_fu_759_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mantissa_2_fu_750_p4),79));
    zext_ln15_3_fu_894_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mantissa_3_fu_885_p4),79));
    zext_ln15_fu_403_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mantissa_fu_393_p4),137));
    zext_ln346_1_fu_849_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(xs_exp_V_3_fu_835_p4),9));
    zext_ln346_fu_714_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(xs_exp_V_2_fu_700_p4),9));
    zext_ln515_1_fu_532_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(xs_exp_V_1_fu_504_p4),12));
    zext_ln515_fu_407_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(xs_exp_V_fu_379_p4),12));
    zext_ln818_1_fu_596_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_5_fu_588_p3),32));
    zext_ln818_2_fu_790_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_11_fu_782_p3),32));
    zext_ln818_3_fu_925_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_17_fu_917_p3),32));
    zext_ln818_fu_471_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_fu_463_p3),32));
end behav;
