-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
-- Version: 2022.2
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity test_Hu is
generic (
    C_S_AXI_CONTROL_BUS_ADDR_WIDTH : INTEGER := 4;
    C_S_AXI_CONTROL_BUS_DATA_WIDTH : INTEGER := 32 );
port (
    s_axi_CONTROL_BUS_AWVALID : IN STD_LOGIC;
    s_axi_CONTROL_BUS_AWREADY : OUT STD_LOGIC;
    s_axi_CONTROL_BUS_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_BUS_ADDR_WIDTH-1 downto 0);
    s_axi_CONTROL_BUS_WVALID : IN STD_LOGIC;
    s_axi_CONTROL_BUS_WREADY : OUT STD_LOGIC;
    s_axi_CONTROL_BUS_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_BUS_DATA_WIDTH-1 downto 0);
    s_axi_CONTROL_BUS_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_BUS_DATA_WIDTH/8-1 downto 0);
    s_axi_CONTROL_BUS_ARVALID : IN STD_LOGIC;
    s_axi_CONTROL_BUS_ARREADY : OUT STD_LOGIC;
    s_axi_CONTROL_BUS_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_BUS_ADDR_WIDTH-1 downto 0);
    s_axi_CONTROL_BUS_RVALID : OUT STD_LOGIC;
    s_axi_CONTROL_BUS_RREADY : IN STD_LOGIC;
    s_axi_CONTROL_BUS_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_CONTROL_BUS_DATA_WIDTH-1 downto 0);
    s_axi_CONTROL_BUS_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_CONTROL_BUS_BVALID : OUT STD_LOGIC;
    s_axi_CONTROL_BUS_BREADY : IN STD_LOGIC;
    s_axi_CONTROL_BUS_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    interrupt : OUT STD_LOGIC;
    INPUT_STREAM_TDATA : IN STD_LOGIC_VECTOR (23 downto 0);
    INPUT_STREAM_TKEEP : IN STD_LOGIC_VECTOR (2 downto 0);
    INPUT_STREAM_TSTRB : IN STD_LOGIC_VECTOR (2 downto 0);
    INPUT_STREAM_TUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    INPUT_STREAM_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    INPUT_STREAM_TID : IN STD_LOGIC_VECTOR (0 downto 0);
    INPUT_STREAM_TDEST : IN STD_LOGIC_VECTOR (0 downto 0);
    OUPUT_STREAM_TDATA : OUT STD_LOGIC_VECTOR (23 downto 0);
    OUPUT_STREAM_TKEEP : OUT STD_LOGIC_VECTOR (2 downto 0);
    OUPUT_STREAM_TSTRB : OUT STD_LOGIC_VECTOR (2 downto 0);
    OUPUT_STREAM_TUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    OUPUT_STREAM_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
    OUPUT_STREAM_TID : OUT STD_LOGIC_VECTOR (0 downto 0);
    OUPUT_STREAM_TDEST : OUT STD_LOGIC_VECTOR (0 downto 0);
    INPUT_STREAM_TVALID : IN STD_LOGIC;
    INPUT_STREAM_TREADY : OUT STD_LOGIC;
    OUPUT_STREAM_TVALID : OUT STD_LOGIC;
    OUPUT_STREAM_TREADY : IN STD_LOGIC );
end;


architecture behav of test_Hu is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "test_Hu_test_Hu,hls_ip_2022_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=7.268000,HLS_SYN_LAT=622041,HLS_SYN_TPT=622031,HLS_SYN_MEM=4,HLS_SYN_DSP=0,HLS_SYN_FF=3404,HLS_SYN_LUT=6051,HLS_VERSION=2022_2}";
    constant C_S_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';

    signal ap_rst_n_inv : STD_LOGIC;
    signal ap_start : STD_LOGIC;
    signal ap_ready : STD_LOGIC;
    signal ap_done : STD_LOGIC;
    signal ap_idle : STD_LOGIC;
    signal AXIvideo2xfMat_24_9_600_1024_1_2_U0_ap_start : STD_LOGIC;
    signal AXIvideo2xfMat_24_9_600_1024_1_2_U0_ap_done : STD_LOGIC;
    signal AXIvideo2xfMat_24_9_600_1024_1_2_U0_ap_continue : STD_LOGIC;
    signal AXIvideo2xfMat_24_9_600_1024_1_2_U0_ap_idle : STD_LOGIC;
    signal AXIvideo2xfMat_24_9_600_1024_1_2_U0_ap_ready : STD_LOGIC;
    signal AXIvideo2xfMat_24_9_600_1024_1_2_U0_start_out : STD_LOGIC;
    signal AXIvideo2xfMat_24_9_600_1024_1_2_U0_start_write : STD_LOGIC;
    signal AXIvideo2xfMat_24_9_600_1024_1_2_U0_INPUT_STREAM_TREADY : STD_LOGIC;
    signal AXIvideo2xfMat_24_9_600_1024_1_2_U0_img_0_data64_din : STD_LOGIC_VECTOR (23 downto 0);
    signal AXIvideo2xfMat_24_9_600_1024_1_2_U0_img_0_data64_write : STD_LOGIC;
    signal AXIvideo2xfMat_24_9_600_1024_1_2_U0_img_0_rows_c_din : STD_LOGIC_VECTOR (9 downto 0);
    signal AXIvideo2xfMat_24_9_600_1024_1_2_U0_img_0_rows_c_write : STD_LOGIC;
    signal AXIvideo2xfMat_24_9_600_1024_1_2_U0_img_0_cols_c_din : STD_LOGIC_VECTOR (10 downto 0);
    signal AXIvideo2xfMat_24_9_600_1024_1_2_U0_img_0_cols_c_write : STD_LOGIC;
    signal rgb2gray_9_0_600_1024_1_2_2_U0_ap_start : STD_LOGIC;
    signal rgb2gray_9_0_600_1024_1_2_2_U0_ap_done : STD_LOGIC;
    signal rgb2gray_9_0_600_1024_1_2_2_U0_ap_continue : STD_LOGIC;
    signal rgb2gray_9_0_600_1024_1_2_2_U0_ap_idle : STD_LOGIC;
    signal rgb2gray_9_0_600_1024_1_2_2_U0_ap_ready : STD_LOGIC;
    signal rgb2gray_9_0_600_1024_1_2_2_U0_start_out : STD_LOGIC;
    signal rgb2gray_9_0_600_1024_1_2_2_U0_start_write : STD_LOGIC;
    signal rgb2gray_9_0_600_1024_1_2_2_U0_p_src_rows_read : STD_LOGIC;
    signal rgb2gray_9_0_600_1024_1_2_2_U0_p_src_cols_read : STD_LOGIC;
    signal rgb2gray_9_0_600_1024_1_2_2_U0_img_0_data64_read : STD_LOGIC;
    signal rgb2gray_9_0_600_1024_1_2_2_U0_img_1_data65_din : STD_LOGIC_VECTOR (7 downto 0);
    signal rgb2gray_9_0_600_1024_1_2_2_U0_img_1_data65_write : STD_LOGIC;
    signal Sobel_0_3_0_0_600_1024_1_false_2_2_2_U0_ap_start : STD_LOGIC;
    signal Sobel_0_3_0_0_600_1024_1_false_2_2_2_U0_ap_done : STD_LOGIC;
    signal Sobel_0_3_0_0_600_1024_1_false_2_2_2_U0_ap_continue : STD_LOGIC;
    signal Sobel_0_3_0_0_600_1024_1_false_2_2_2_U0_ap_idle : STD_LOGIC;
    signal Sobel_0_3_0_0_600_1024_1_false_2_2_2_U0_ap_ready : STD_LOGIC;
    signal Sobel_0_3_0_0_600_1024_1_false_2_2_2_U0_start_out : STD_LOGIC;
    signal Sobel_0_3_0_0_600_1024_1_false_2_2_2_U0_start_write : STD_LOGIC;
    signal Sobel_0_3_0_0_600_1024_1_false_2_2_2_U0_img_1_data65_read : STD_LOGIC;
    signal Sobel_0_3_0_0_600_1024_1_false_2_2_2_U0_img_2x_data66_din : STD_LOGIC_VECTOR (7 downto 0);
    signal Sobel_0_3_0_0_600_1024_1_false_2_2_2_U0_img_2x_data66_write : STD_LOGIC;
    signal Sobel_0_3_0_0_600_1024_1_false_2_2_2_U0_img_2y_data67_din : STD_LOGIC_VECTOR (7 downto 0);
    signal Sobel_0_3_0_0_600_1024_1_false_2_2_2_U0_img_2y_data67_write : STD_LOGIC;
    signal addWeighted_0_0_600_1024_1_2_2_2_U0_ap_start : STD_LOGIC;
    signal addWeighted_0_0_600_1024_1_2_2_2_U0_ap_done : STD_LOGIC;
    signal addWeighted_0_0_600_1024_1_2_2_2_U0_ap_continue : STD_LOGIC;
    signal addWeighted_0_0_600_1024_1_2_2_2_U0_ap_idle : STD_LOGIC;
    signal addWeighted_0_0_600_1024_1_2_2_2_U0_ap_ready : STD_LOGIC;
    signal addWeighted_0_0_600_1024_1_2_2_2_U0_start_out : STD_LOGIC;
    signal addWeighted_0_0_600_1024_1_2_2_2_U0_start_write : STD_LOGIC;
    signal addWeighted_0_0_600_1024_1_2_2_2_U0_img_2x_data66_read : STD_LOGIC;
    signal addWeighted_0_0_600_1024_1_2_2_2_U0_img_2y_data67_read : STD_LOGIC;
    signal addWeighted_0_0_600_1024_1_2_2_2_U0_img_3_data68_din : STD_LOGIC_VECTOR (7 downto 0);
    signal addWeighted_0_0_600_1024_1_2_2_2_U0_img_3_data68_write : STD_LOGIC;
    signal resize_2_0_600_1024_300_512_1_2_2_2_U0_ap_start : STD_LOGIC;
    signal resize_2_0_600_1024_300_512_1_2_2_2_U0_ap_done : STD_LOGIC;
    signal resize_2_0_600_1024_300_512_1_2_2_2_U0_ap_continue : STD_LOGIC;
    signal resize_2_0_600_1024_300_512_1_2_2_2_U0_ap_idle : STD_LOGIC;
    signal resize_2_0_600_1024_300_512_1_2_2_2_U0_ap_ready : STD_LOGIC;
    signal resize_2_0_600_1024_300_512_1_2_2_2_U0_start_out : STD_LOGIC;
    signal resize_2_0_600_1024_300_512_1_2_2_2_U0_start_write : STD_LOGIC;
    signal resize_2_0_600_1024_300_512_1_2_2_2_U0_img_3_data68_read : STD_LOGIC;
    signal resize_2_0_600_1024_300_512_1_2_2_2_U0_img_4_data69_din : STD_LOGIC_VECTOR (7 downto 0);
    signal resize_2_0_600_1024_300_512_1_2_2_2_U0_img_4_data69_write : STD_LOGIC;
    signal resize_2_0_600_1024_300_512_1_2_2_2_U0_img_4_rows_c_din : STD_LOGIC_VECTOR (8 downto 0);
    signal resize_2_0_600_1024_300_512_1_2_2_2_U0_img_4_rows_c_write : STD_LOGIC;
    signal resize_2_0_600_1024_300_512_1_2_2_2_U0_img_4_cols_c_din : STD_LOGIC_VECTOR (9 downto 0);
    signal resize_2_0_600_1024_300_512_1_2_2_2_U0_img_4_cols_c_write : STD_LOGIC;
    signal gray2rgb_0_9_300_512_1_2_2_U0_ap_start : STD_LOGIC;
    signal gray2rgb_0_9_300_512_1_2_2_U0_ap_done : STD_LOGIC;
    signal gray2rgb_0_9_300_512_1_2_2_U0_ap_continue : STD_LOGIC;
    signal gray2rgb_0_9_300_512_1_2_2_U0_ap_idle : STD_LOGIC;
    signal gray2rgb_0_9_300_512_1_2_2_U0_ap_ready : STD_LOGIC;
    signal gray2rgb_0_9_300_512_1_2_2_U0_start_out : STD_LOGIC;
    signal gray2rgb_0_9_300_512_1_2_2_U0_start_write : STD_LOGIC;
    signal gray2rgb_0_9_300_512_1_2_2_U0_p_src_rows_read : STD_LOGIC;
    signal gray2rgb_0_9_300_512_1_2_2_U0_p_src_cols_read : STD_LOGIC;
    signal gray2rgb_0_9_300_512_1_2_2_U0_img_4_data69_read : STD_LOGIC;
    signal gray2rgb_0_9_300_512_1_2_2_U0_img_5_data70_din : STD_LOGIC_VECTOR (23 downto 0);
    signal gray2rgb_0_9_300_512_1_2_2_U0_img_5_data70_write : STD_LOGIC;
    signal xfMat2AXIvideo_24_9_300_512_1_2_U0_ap_start : STD_LOGIC;
    signal xfMat2AXIvideo_24_9_300_512_1_2_U0_ap_done : STD_LOGIC;
    signal xfMat2AXIvideo_24_9_300_512_1_2_U0_ap_continue : STD_LOGIC;
    signal xfMat2AXIvideo_24_9_300_512_1_2_U0_ap_idle : STD_LOGIC;
    signal xfMat2AXIvideo_24_9_300_512_1_2_U0_ap_ready : STD_LOGIC;
    signal xfMat2AXIvideo_24_9_300_512_1_2_U0_img_5_data70_read : STD_LOGIC;
    signal xfMat2AXIvideo_24_9_300_512_1_2_U0_OUPUT_STREAM_TDATA : STD_LOGIC_VECTOR (23 downto 0);
    signal xfMat2AXIvideo_24_9_300_512_1_2_U0_OUPUT_STREAM_TVALID : STD_LOGIC;
    signal xfMat2AXIvideo_24_9_300_512_1_2_U0_OUPUT_STREAM_TKEEP : STD_LOGIC_VECTOR (2 downto 0);
    signal xfMat2AXIvideo_24_9_300_512_1_2_U0_OUPUT_STREAM_TSTRB : STD_LOGIC_VECTOR (2 downto 0);
    signal xfMat2AXIvideo_24_9_300_512_1_2_U0_OUPUT_STREAM_TUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal xfMat2AXIvideo_24_9_300_512_1_2_U0_OUPUT_STREAM_TLAST : STD_LOGIC_VECTOR (0 downto 0);
    signal xfMat2AXIvideo_24_9_300_512_1_2_U0_OUPUT_STREAM_TID : STD_LOGIC_VECTOR (0 downto 0);
    signal xfMat2AXIvideo_24_9_300_512_1_2_U0_OUPUT_STREAM_TDEST : STD_LOGIC_VECTOR (0 downto 0);
    signal img_0_data_full_n : STD_LOGIC;
    signal img_0_data_dout : STD_LOGIC_VECTOR (23 downto 0);
    signal img_0_data_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal img_0_data_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal img_0_data_empty_n : STD_LOGIC;
    signal img_0_rows_c_full_n : STD_LOGIC;
    signal img_0_rows_c_dout : STD_LOGIC_VECTOR (9 downto 0);
    signal img_0_rows_c_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal img_0_rows_c_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal img_0_rows_c_empty_n : STD_LOGIC;
    signal img_0_cols_c_full_n : STD_LOGIC;
    signal img_0_cols_c_dout : STD_LOGIC_VECTOR (10 downto 0);
    signal img_0_cols_c_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal img_0_cols_c_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal img_0_cols_c_empty_n : STD_LOGIC;
    signal img_1_data_full_n : STD_LOGIC;
    signal img_1_data_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal img_1_data_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal img_1_data_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal img_1_data_empty_n : STD_LOGIC;
    signal img_2x_data_full_n : STD_LOGIC;
    signal img_2x_data_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal img_2x_data_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal img_2x_data_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal img_2x_data_empty_n : STD_LOGIC;
    signal img_2y_data_full_n : STD_LOGIC;
    signal img_2y_data_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal img_2y_data_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal img_2y_data_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal img_2y_data_empty_n : STD_LOGIC;
    signal img_3_data_full_n : STD_LOGIC;
    signal img_3_data_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal img_3_data_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal img_3_data_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal img_3_data_empty_n : STD_LOGIC;
    signal img_4_data_full_n : STD_LOGIC;
    signal img_4_data_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal img_4_data_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal img_4_data_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal img_4_data_empty_n : STD_LOGIC;
    signal img_4_rows_c_full_n : STD_LOGIC;
    signal img_4_rows_c_dout : STD_LOGIC_VECTOR (8 downto 0);
    signal img_4_rows_c_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal img_4_rows_c_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal img_4_rows_c_empty_n : STD_LOGIC;
    signal img_4_cols_c_full_n : STD_LOGIC;
    signal img_4_cols_c_dout : STD_LOGIC_VECTOR (9 downto 0);
    signal img_4_cols_c_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal img_4_cols_c_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal img_4_cols_c_empty_n : STD_LOGIC;
    signal img_5_data_full_n : STD_LOGIC;
    signal img_5_data_dout : STD_LOGIC_VECTOR (23 downto 0);
    signal img_5_data_num_data_valid : STD_LOGIC_VECTOR (1 downto 0);
    signal img_5_data_fifo_cap : STD_LOGIC_VECTOR (1 downto 0);
    signal img_5_data_empty_n : STD_LOGIC;
    signal start_for_rgb2gray_9_0_600_1024_1_2_2_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_rgb2gray_9_0_600_1024_1_2_2_U0_full_n : STD_LOGIC;
    signal start_for_rgb2gray_9_0_600_1024_1_2_2_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_rgb2gray_9_0_600_1024_1_2_2_U0_empty_n : STD_LOGIC;
    signal start_for_Sobel_0_3_0_0_600_1024_1_false_2_2_2_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_Sobel_0_3_0_0_600_1024_1_false_2_2_2_U0_full_n : STD_LOGIC;
    signal start_for_Sobel_0_3_0_0_600_1024_1_false_2_2_2_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_Sobel_0_3_0_0_600_1024_1_false_2_2_2_U0_empty_n : STD_LOGIC;
    signal start_for_addWeighted_0_0_600_1024_1_2_2_2_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_addWeighted_0_0_600_1024_1_2_2_2_U0_full_n : STD_LOGIC;
    signal start_for_addWeighted_0_0_600_1024_1_2_2_2_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_addWeighted_0_0_600_1024_1_2_2_2_U0_empty_n : STD_LOGIC;
    signal start_for_resize_2_0_600_1024_300_512_1_2_2_2_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_resize_2_0_600_1024_300_512_1_2_2_2_U0_full_n : STD_LOGIC;
    signal start_for_resize_2_0_600_1024_300_512_1_2_2_2_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_resize_2_0_600_1024_300_512_1_2_2_2_U0_empty_n : STD_LOGIC;
    signal start_for_gray2rgb_0_9_300_512_1_2_2_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_gray2rgb_0_9_300_512_1_2_2_U0_full_n : STD_LOGIC;
    signal start_for_gray2rgb_0_9_300_512_1_2_2_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_gray2rgb_0_9_300_512_1_2_2_U0_empty_n : STD_LOGIC;
    signal start_for_xfMat2AXIvideo_24_9_300_512_1_2_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_xfMat2AXIvideo_24_9_300_512_1_2_U0_full_n : STD_LOGIC;
    signal start_for_xfMat2AXIvideo_24_9_300_512_1_2_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_xfMat2AXIvideo_24_9_300_512_1_2_U0_empty_n : STD_LOGIC;

    component test_Hu_AXIvideo2xfMat_24_9_600_1024_1_2_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        INPUT_STREAM_TDATA : IN STD_LOGIC_VECTOR (23 downto 0);
        INPUT_STREAM_TVALID : IN STD_LOGIC;
        INPUT_STREAM_TREADY : OUT STD_LOGIC;
        INPUT_STREAM_TKEEP : IN STD_LOGIC_VECTOR (2 downto 0);
        INPUT_STREAM_TSTRB : IN STD_LOGIC_VECTOR (2 downto 0);
        INPUT_STREAM_TUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        INPUT_STREAM_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
        INPUT_STREAM_TID : IN STD_LOGIC_VECTOR (0 downto 0);
        INPUT_STREAM_TDEST : IN STD_LOGIC_VECTOR (0 downto 0);
        img_0_data64_din : OUT STD_LOGIC_VECTOR (23 downto 0);
        img_0_data64_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        img_0_data64_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        img_0_data64_full_n : IN STD_LOGIC;
        img_0_data64_write : OUT STD_LOGIC;
        img_0_rows_c_din : OUT STD_LOGIC_VECTOR (9 downto 0);
        img_0_rows_c_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        img_0_rows_c_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        img_0_rows_c_full_n : IN STD_LOGIC;
        img_0_rows_c_write : OUT STD_LOGIC;
        img_0_cols_c_din : OUT STD_LOGIC_VECTOR (10 downto 0);
        img_0_cols_c_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        img_0_cols_c_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        img_0_cols_c_full_n : IN STD_LOGIC;
        img_0_cols_c_write : OUT STD_LOGIC );
    end component;


    component test_Hu_rgb2gray_9_0_600_1024_1_2_2_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        p_src_rows_dout : IN STD_LOGIC_VECTOR (9 downto 0);
        p_src_rows_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        p_src_rows_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        p_src_rows_empty_n : IN STD_LOGIC;
        p_src_rows_read : OUT STD_LOGIC;
        p_src_cols_dout : IN STD_LOGIC_VECTOR (10 downto 0);
        p_src_cols_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        p_src_cols_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        p_src_cols_empty_n : IN STD_LOGIC;
        p_src_cols_read : OUT STD_LOGIC;
        img_0_data64_dout : IN STD_LOGIC_VECTOR (23 downto 0);
        img_0_data64_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        img_0_data64_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        img_0_data64_empty_n : IN STD_LOGIC;
        img_0_data64_read : OUT STD_LOGIC;
        img_1_data65_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        img_1_data65_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        img_1_data65_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        img_1_data65_full_n : IN STD_LOGIC;
        img_1_data65_write : OUT STD_LOGIC );
    end component;


    component test_Hu_Sobel_0_3_0_0_600_1024_1_false_2_2_2_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        img_1_data65_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        img_1_data65_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        img_1_data65_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        img_1_data65_empty_n : IN STD_LOGIC;
        img_1_data65_read : OUT STD_LOGIC;
        img_2x_data66_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        img_2x_data66_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        img_2x_data66_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        img_2x_data66_full_n : IN STD_LOGIC;
        img_2x_data66_write : OUT STD_LOGIC;
        img_2y_data67_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        img_2y_data67_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        img_2y_data67_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        img_2y_data67_full_n : IN STD_LOGIC;
        img_2y_data67_write : OUT STD_LOGIC );
    end component;


    component test_Hu_addWeighted_0_0_600_1024_1_2_2_2_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        img_2x_data66_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        img_2x_data66_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        img_2x_data66_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        img_2x_data66_empty_n : IN STD_LOGIC;
        img_2x_data66_read : OUT STD_LOGIC;
        img_2y_data67_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        img_2y_data67_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        img_2y_data67_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        img_2y_data67_empty_n : IN STD_LOGIC;
        img_2y_data67_read : OUT STD_LOGIC;
        img_3_data68_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        img_3_data68_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        img_3_data68_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        img_3_data68_full_n : IN STD_LOGIC;
        img_3_data68_write : OUT STD_LOGIC );
    end component;


    component test_Hu_resize_2_0_600_1024_300_512_1_2_2_2_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        img_3_data68_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        img_3_data68_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        img_3_data68_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        img_3_data68_empty_n : IN STD_LOGIC;
        img_3_data68_read : OUT STD_LOGIC;
        img_4_data69_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        img_4_data69_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        img_4_data69_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        img_4_data69_full_n : IN STD_LOGIC;
        img_4_data69_write : OUT STD_LOGIC;
        img_4_rows_c_din : OUT STD_LOGIC_VECTOR (8 downto 0);
        img_4_rows_c_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        img_4_rows_c_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        img_4_rows_c_full_n : IN STD_LOGIC;
        img_4_rows_c_write : OUT STD_LOGIC;
        img_4_cols_c_din : OUT STD_LOGIC_VECTOR (9 downto 0);
        img_4_cols_c_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        img_4_cols_c_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        img_4_cols_c_full_n : IN STD_LOGIC;
        img_4_cols_c_write : OUT STD_LOGIC );
    end component;


    component test_Hu_gray2rgb_0_9_300_512_1_2_2_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        p_src_rows_dout : IN STD_LOGIC_VECTOR (8 downto 0);
        p_src_rows_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        p_src_rows_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        p_src_rows_empty_n : IN STD_LOGIC;
        p_src_rows_read : OUT STD_LOGIC;
        p_src_cols_dout : IN STD_LOGIC_VECTOR (9 downto 0);
        p_src_cols_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        p_src_cols_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        p_src_cols_empty_n : IN STD_LOGIC;
        p_src_cols_read : OUT STD_LOGIC;
        img_4_data69_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        img_4_data69_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        img_4_data69_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        img_4_data69_empty_n : IN STD_LOGIC;
        img_4_data69_read : OUT STD_LOGIC;
        img_5_data70_din : OUT STD_LOGIC_VECTOR (23 downto 0);
        img_5_data70_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        img_5_data70_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        img_5_data70_full_n : IN STD_LOGIC;
        img_5_data70_write : OUT STD_LOGIC );
    end component;


    component test_Hu_xfMat2AXIvideo_24_9_300_512_1_2_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        img_5_data70_dout : IN STD_LOGIC_VECTOR (23 downto 0);
        img_5_data70_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        img_5_data70_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        img_5_data70_empty_n : IN STD_LOGIC;
        img_5_data70_read : OUT STD_LOGIC;
        OUPUT_STREAM_TDATA : OUT STD_LOGIC_VECTOR (23 downto 0);
        OUPUT_STREAM_TVALID : OUT STD_LOGIC;
        OUPUT_STREAM_TREADY : IN STD_LOGIC;
        OUPUT_STREAM_TKEEP : OUT STD_LOGIC_VECTOR (2 downto 0);
        OUPUT_STREAM_TSTRB : OUT STD_LOGIC_VECTOR (2 downto 0);
        OUPUT_STREAM_TUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        OUPUT_STREAM_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
        OUPUT_STREAM_TID : OUT STD_LOGIC_VECTOR (0 downto 0);
        OUPUT_STREAM_TDEST : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component test_Hu_fifo_w24_d2_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (23 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (23 downto 0);
        if_num_data_valid : OUT STD_LOGIC_VECTOR (1 downto 0);
        if_fifo_cap : OUT STD_LOGIC_VECTOR (1 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component test_Hu_fifo_w10_d2_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (9 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (9 downto 0);
        if_num_data_valid : OUT STD_LOGIC_VECTOR (1 downto 0);
        if_fifo_cap : OUT STD_LOGIC_VECTOR (1 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component test_Hu_fifo_w11_d2_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (10 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (10 downto 0);
        if_num_data_valid : OUT STD_LOGIC_VECTOR (1 downto 0);
        if_fifo_cap : OUT STD_LOGIC_VECTOR (1 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component test_Hu_fifo_w8_d2_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (7 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (7 downto 0);
        if_num_data_valid : OUT STD_LOGIC_VECTOR (1 downto 0);
        if_fifo_cap : OUT STD_LOGIC_VECTOR (1 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component test_Hu_fifo_w9_d2_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (8 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (8 downto 0);
        if_num_data_valid : OUT STD_LOGIC_VECTOR (1 downto 0);
        if_fifo_cap : OUT STD_LOGIC_VECTOR (1 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component test_Hu_start_for_rgb2gray_9_0_600_1024_1_2_2_U0 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component test_Hu_start_for_Sobel_0_3_0_0_600_1024_1_false_2_2_2_U0 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component test_Hu_start_for_addWeighted_0_0_600_1024_1_2_2_2_U0 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component test_Hu_start_for_resize_2_0_600_1024_300_512_1_2_2_2_U0 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component test_Hu_start_for_gray2rgb_0_9_300_512_1_2_2_U0 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component test_Hu_start_for_xfMat2AXIvideo_24_9_300_512_1_2_U0 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component test_Hu_CONTROL_BUS_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        ap_start : OUT STD_LOGIC;
        interrupt : OUT STD_LOGIC;
        ap_ready : IN STD_LOGIC;
        ap_done : IN STD_LOGIC;
        ap_idle : IN STD_LOGIC );
    end component;



begin
    CONTROL_BUS_s_axi_U : component test_Hu_CONTROL_BUS_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_CONTROL_BUS_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_CONTROL_BUS_DATA_WIDTH)
    port map (
        AWVALID => s_axi_CONTROL_BUS_AWVALID,
        AWREADY => s_axi_CONTROL_BUS_AWREADY,
        AWADDR => s_axi_CONTROL_BUS_AWADDR,
        WVALID => s_axi_CONTROL_BUS_WVALID,
        WREADY => s_axi_CONTROL_BUS_WREADY,
        WDATA => s_axi_CONTROL_BUS_WDATA,
        WSTRB => s_axi_CONTROL_BUS_WSTRB,
        ARVALID => s_axi_CONTROL_BUS_ARVALID,
        ARREADY => s_axi_CONTROL_BUS_ARREADY,
        ARADDR => s_axi_CONTROL_BUS_ARADDR,
        RVALID => s_axi_CONTROL_BUS_RVALID,
        RREADY => s_axi_CONTROL_BUS_RREADY,
        RDATA => s_axi_CONTROL_BUS_RDATA,
        RRESP => s_axi_CONTROL_BUS_RRESP,
        BVALID => s_axi_CONTROL_BUS_BVALID,
        BREADY => s_axi_CONTROL_BUS_BREADY,
        BRESP => s_axi_CONTROL_BUS_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        ap_start => ap_start,
        interrupt => interrupt,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_idle => ap_idle);

    AXIvideo2xfMat_24_9_600_1024_1_2_U0 : component test_Hu_AXIvideo2xfMat_24_9_600_1024_1_2_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => AXIvideo2xfMat_24_9_600_1024_1_2_U0_ap_start,
        start_full_n => start_for_rgb2gray_9_0_600_1024_1_2_2_U0_full_n,
        ap_done => AXIvideo2xfMat_24_9_600_1024_1_2_U0_ap_done,
        ap_continue => AXIvideo2xfMat_24_9_600_1024_1_2_U0_ap_continue,
        ap_idle => AXIvideo2xfMat_24_9_600_1024_1_2_U0_ap_idle,
        ap_ready => AXIvideo2xfMat_24_9_600_1024_1_2_U0_ap_ready,
        start_out => AXIvideo2xfMat_24_9_600_1024_1_2_U0_start_out,
        start_write => AXIvideo2xfMat_24_9_600_1024_1_2_U0_start_write,
        INPUT_STREAM_TDATA => INPUT_STREAM_TDATA,
        INPUT_STREAM_TVALID => INPUT_STREAM_TVALID,
        INPUT_STREAM_TREADY => AXIvideo2xfMat_24_9_600_1024_1_2_U0_INPUT_STREAM_TREADY,
        INPUT_STREAM_TKEEP => INPUT_STREAM_TKEEP,
        INPUT_STREAM_TSTRB => INPUT_STREAM_TSTRB,
        INPUT_STREAM_TUSER => INPUT_STREAM_TUSER,
        INPUT_STREAM_TLAST => INPUT_STREAM_TLAST,
        INPUT_STREAM_TID => INPUT_STREAM_TID,
        INPUT_STREAM_TDEST => INPUT_STREAM_TDEST,
        img_0_data64_din => AXIvideo2xfMat_24_9_600_1024_1_2_U0_img_0_data64_din,
        img_0_data64_num_data_valid => img_0_data_num_data_valid,
        img_0_data64_fifo_cap => img_0_data_fifo_cap,
        img_0_data64_full_n => img_0_data_full_n,
        img_0_data64_write => AXIvideo2xfMat_24_9_600_1024_1_2_U0_img_0_data64_write,
        img_0_rows_c_din => AXIvideo2xfMat_24_9_600_1024_1_2_U0_img_0_rows_c_din,
        img_0_rows_c_num_data_valid => img_0_rows_c_num_data_valid,
        img_0_rows_c_fifo_cap => img_0_rows_c_fifo_cap,
        img_0_rows_c_full_n => img_0_rows_c_full_n,
        img_0_rows_c_write => AXIvideo2xfMat_24_9_600_1024_1_2_U0_img_0_rows_c_write,
        img_0_cols_c_din => AXIvideo2xfMat_24_9_600_1024_1_2_U0_img_0_cols_c_din,
        img_0_cols_c_num_data_valid => img_0_cols_c_num_data_valid,
        img_0_cols_c_fifo_cap => img_0_cols_c_fifo_cap,
        img_0_cols_c_full_n => img_0_cols_c_full_n,
        img_0_cols_c_write => AXIvideo2xfMat_24_9_600_1024_1_2_U0_img_0_cols_c_write);

    rgb2gray_9_0_600_1024_1_2_2_U0 : component test_Hu_rgb2gray_9_0_600_1024_1_2_2_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => rgb2gray_9_0_600_1024_1_2_2_U0_ap_start,
        start_full_n => start_for_Sobel_0_3_0_0_600_1024_1_false_2_2_2_U0_full_n,
        ap_done => rgb2gray_9_0_600_1024_1_2_2_U0_ap_done,
        ap_continue => rgb2gray_9_0_600_1024_1_2_2_U0_ap_continue,
        ap_idle => rgb2gray_9_0_600_1024_1_2_2_U0_ap_idle,
        ap_ready => rgb2gray_9_0_600_1024_1_2_2_U0_ap_ready,
        start_out => rgb2gray_9_0_600_1024_1_2_2_U0_start_out,
        start_write => rgb2gray_9_0_600_1024_1_2_2_U0_start_write,
        p_src_rows_dout => img_0_rows_c_dout,
        p_src_rows_num_data_valid => img_0_rows_c_num_data_valid,
        p_src_rows_fifo_cap => img_0_rows_c_fifo_cap,
        p_src_rows_empty_n => img_0_rows_c_empty_n,
        p_src_rows_read => rgb2gray_9_0_600_1024_1_2_2_U0_p_src_rows_read,
        p_src_cols_dout => img_0_cols_c_dout,
        p_src_cols_num_data_valid => img_0_cols_c_num_data_valid,
        p_src_cols_fifo_cap => img_0_cols_c_fifo_cap,
        p_src_cols_empty_n => img_0_cols_c_empty_n,
        p_src_cols_read => rgb2gray_9_0_600_1024_1_2_2_U0_p_src_cols_read,
        img_0_data64_dout => img_0_data_dout,
        img_0_data64_num_data_valid => img_0_data_num_data_valid,
        img_0_data64_fifo_cap => img_0_data_fifo_cap,
        img_0_data64_empty_n => img_0_data_empty_n,
        img_0_data64_read => rgb2gray_9_0_600_1024_1_2_2_U0_img_0_data64_read,
        img_1_data65_din => rgb2gray_9_0_600_1024_1_2_2_U0_img_1_data65_din,
        img_1_data65_num_data_valid => img_1_data_num_data_valid,
        img_1_data65_fifo_cap => img_1_data_fifo_cap,
        img_1_data65_full_n => img_1_data_full_n,
        img_1_data65_write => rgb2gray_9_0_600_1024_1_2_2_U0_img_1_data65_write);

    Sobel_0_3_0_0_600_1024_1_false_2_2_2_U0 : component test_Hu_Sobel_0_3_0_0_600_1024_1_false_2_2_2_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => Sobel_0_3_0_0_600_1024_1_false_2_2_2_U0_ap_start,
        start_full_n => start_for_addWeighted_0_0_600_1024_1_2_2_2_U0_full_n,
        ap_done => Sobel_0_3_0_0_600_1024_1_false_2_2_2_U0_ap_done,
        ap_continue => Sobel_0_3_0_0_600_1024_1_false_2_2_2_U0_ap_continue,
        ap_idle => Sobel_0_3_0_0_600_1024_1_false_2_2_2_U0_ap_idle,
        ap_ready => Sobel_0_3_0_0_600_1024_1_false_2_2_2_U0_ap_ready,
        start_out => Sobel_0_3_0_0_600_1024_1_false_2_2_2_U0_start_out,
        start_write => Sobel_0_3_0_0_600_1024_1_false_2_2_2_U0_start_write,
        img_1_data65_dout => img_1_data_dout,
        img_1_data65_num_data_valid => img_1_data_num_data_valid,
        img_1_data65_fifo_cap => img_1_data_fifo_cap,
        img_1_data65_empty_n => img_1_data_empty_n,
        img_1_data65_read => Sobel_0_3_0_0_600_1024_1_false_2_2_2_U0_img_1_data65_read,
        img_2x_data66_din => Sobel_0_3_0_0_600_1024_1_false_2_2_2_U0_img_2x_data66_din,
        img_2x_data66_num_data_valid => img_2x_data_num_data_valid,
        img_2x_data66_fifo_cap => img_2x_data_fifo_cap,
        img_2x_data66_full_n => img_2x_data_full_n,
        img_2x_data66_write => Sobel_0_3_0_0_600_1024_1_false_2_2_2_U0_img_2x_data66_write,
        img_2y_data67_din => Sobel_0_3_0_0_600_1024_1_false_2_2_2_U0_img_2y_data67_din,
        img_2y_data67_num_data_valid => img_2y_data_num_data_valid,
        img_2y_data67_fifo_cap => img_2y_data_fifo_cap,
        img_2y_data67_full_n => img_2y_data_full_n,
        img_2y_data67_write => Sobel_0_3_0_0_600_1024_1_false_2_2_2_U0_img_2y_data67_write);

    addWeighted_0_0_600_1024_1_2_2_2_U0 : component test_Hu_addWeighted_0_0_600_1024_1_2_2_2_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => addWeighted_0_0_600_1024_1_2_2_2_U0_ap_start,
        start_full_n => start_for_resize_2_0_600_1024_300_512_1_2_2_2_U0_full_n,
        ap_done => addWeighted_0_0_600_1024_1_2_2_2_U0_ap_done,
        ap_continue => addWeighted_0_0_600_1024_1_2_2_2_U0_ap_continue,
        ap_idle => addWeighted_0_0_600_1024_1_2_2_2_U0_ap_idle,
        ap_ready => addWeighted_0_0_600_1024_1_2_2_2_U0_ap_ready,
        start_out => addWeighted_0_0_600_1024_1_2_2_2_U0_start_out,
        start_write => addWeighted_0_0_600_1024_1_2_2_2_U0_start_write,
        img_2x_data66_dout => img_2x_data_dout,
        img_2x_data66_num_data_valid => img_2x_data_num_data_valid,
        img_2x_data66_fifo_cap => img_2x_data_fifo_cap,
        img_2x_data66_empty_n => img_2x_data_empty_n,
        img_2x_data66_read => addWeighted_0_0_600_1024_1_2_2_2_U0_img_2x_data66_read,
        img_2y_data67_dout => img_2y_data_dout,
        img_2y_data67_num_data_valid => img_2y_data_num_data_valid,
        img_2y_data67_fifo_cap => img_2y_data_fifo_cap,
        img_2y_data67_empty_n => img_2y_data_empty_n,
        img_2y_data67_read => addWeighted_0_0_600_1024_1_2_2_2_U0_img_2y_data67_read,
        img_3_data68_din => addWeighted_0_0_600_1024_1_2_2_2_U0_img_3_data68_din,
        img_3_data68_num_data_valid => img_3_data_num_data_valid,
        img_3_data68_fifo_cap => img_3_data_fifo_cap,
        img_3_data68_full_n => img_3_data_full_n,
        img_3_data68_write => addWeighted_0_0_600_1024_1_2_2_2_U0_img_3_data68_write);

    resize_2_0_600_1024_300_512_1_2_2_2_U0 : component test_Hu_resize_2_0_600_1024_300_512_1_2_2_2_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => resize_2_0_600_1024_300_512_1_2_2_2_U0_ap_start,
        start_full_n => start_for_gray2rgb_0_9_300_512_1_2_2_U0_full_n,
        ap_done => resize_2_0_600_1024_300_512_1_2_2_2_U0_ap_done,
        ap_continue => resize_2_0_600_1024_300_512_1_2_2_2_U0_ap_continue,
        ap_idle => resize_2_0_600_1024_300_512_1_2_2_2_U0_ap_idle,
        ap_ready => resize_2_0_600_1024_300_512_1_2_2_2_U0_ap_ready,
        start_out => resize_2_0_600_1024_300_512_1_2_2_2_U0_start_out,
        start_write => resize_2_0_600_1024_300_512_1_2_2_2_U0_start_write,
        img_3_data68_dout => img_3_data_dout,
        img_3_data68_num_data_valid => img_3_data_num_data_valid,
        img_3_data68_fifo_cap => img_3_data_fifo_cap,
        img_3_data68_empty_n => img_3_data_empty_n,
        img_3_data68_read => resize_2_0_600_1024_300_512_1_2_2_2_U0_img_3_data68_read,
        img_4_data69_din => resize_2_0_600_1024_300_512_1_2_2_2_U0_img_4_data69_din,
        img_4_data69_num_data_valid => img_4_data_num_data_valid,
        img_4_data69_fifo_cap => img_4_data_fifo_cap,
        img_4_data69_full_n => img_4_data_full_n,
        img_4_data69_write => resize_2_0_600_1024_300_512_1_2_2_2_U0_img_4_data69_write,
        img_4_rows_c_din => resize_2_0_600_1024_300_512_1_2_2_2_U0_img_4_rows_c_din,
        img_4_rows_c_num_data_valid => img_4_rows_c_num_data_valid,
        img_4_rows_c_fifo_cap => img_4_rows_c_fifo_cap,
        img_4_rows_c_full_n => img_4_rows_c_full_n,
        img_4_rows_c_write => resize_2_0_600_1024_300_512_1_2_2_2_U0_img_4_rows_c_write,
        img_4_cols_c_din => resize_2_0_600_1024_300_512_1_2_2_2_U0_img_4_cols_c_din,
        img_4_cols_c_num_data_valid => img_4_cols_c_num_data_valid,
        img_4_cols_c_fifo_cap => img_4_cols_c_fifo_cap,
        img_4_cols_c_full_n => img_4_cols_c_full_n,
        img_4_cols_c_write => resize_2_0_600_1024_300_512_1_2_2_2_U0_img_4_cols_c_write);

    gray2rgb_0_9_300_512_1_2_2_U0 : component test_Hu_gray2rgb_0_9_300_512_1_2_2_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => gray2rgb_0_9_300_512_1_2_2_U0_ap_start,
        start_full_n => start_for_xfMat2AXIvideo_24_9_300_512_1_2_U0_full_n,
        ap_done => gray2rgb_0_9_300_512_1_2_2_U0_ap_done,
        ap_continue => gray2rgb_0_9_300_512_1_2_2_U0_ap_continue,
        ap_idle => gray2rgb_0_9_300_512_1_2_2_U0_ap_idle,
        ap_ready => gray2rgb_0_9_300_512_1_2_2_U0_ap_ready,
        start_out => gray2rgb_0_9_300_512_1_2_2_U0_start_out,
        start_write => gray2rgb_0_9_300_512_1_2_2_U0_start_write,
        p_src_rows_dout => img_4_rows_c_dout,
        p_src_rows_num_data_valid => img_4_rows_c_num_data_valid,
        p_src_rows_fifo_cap => img_4_rows_c_fifo_cap,
        p_src_rows_empty_n => img_4_rows_c_empty_n,
        p_src_rows_read => gray2rgb_0_9_300_512_1_2_2_U0_p_src_rows_read,
        p_src_cols_dout => img_4_cols_c_dout,
        p_src_cols_num_data_valid => img_4_cols_c_num_data_valid,
        p_src_cols_fifo_cap => img_4_cols_c_fifo_cap,
        p_src_cols_empty_n => img_4_cols_c_empty_n,
        p_src_cols_read => gray2rgb_0_9_300_512_1_2_2_U0_p_src_cols_read,
        img_4_data69_dout => img_4_data_dout,
        img_4_data69_num_data_valid => img_4_data_num_data_valid,
        img_4_data69_fifo_cap => img_4_data_fifo_cap,
        img_4_data69_empty_n => img_4_data_empty_n,
        img_4_data69_read => gray2rgb_0_9_300_512_1_2_2_U0_img_4_data69_read,
        img_5_data70_din => gray2rgb_0_9_300_512_1_2_2_U0_img_5_data70_din,
        img_5_data70_num_data_valid => img_5_data_num_data_valid,
        img_5_data70_fifo_cap => img_5_data_fifo_cap,
        img_5_data70_full_n => img_5_data_full_n,
        img_5_data70_write => gray2rgb_0_9_300_512_1_2_2_U0_img_5_data70_write);

    xfMat2AXIvideo_24_9_300_512_1_2_U0 : component test_Hu_xfMat2AXIvideo_24_9_300_512_1_2_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => xfMat2AXIvideo_24_9_300_512_1_2_U0_ap_start,
        ap_done => xfMat2AXIvideo_24_9_300_512_1_2_U0_ap_done,
        ap_continue => xfMat2AXIvideo_24_9_300_512_1_2_U0_ap_continue,
        ap_idle => xfMat2AXIvideo_24_9_300_512_1_2_U0_ap_idle,
        ap_ready => xfMat2AXIvideo_24_9_300_512_1_2_U0_ap_ready,
        img_5_data70_dout => img_5_data_dout,
        img_5_data70_num_data_valid => img_5_data_num_data_valid,
        img_5_data70_fifo_cap => img_5_data_fifo_cap,
        img_5_data70_empty_n => img_5_data_empty_n,
        img_5_data70_read => xfMat2AXIvideo_24_9_300_512_1_2_U0_img_5_data70_read,
        OUPUT_STREAM_TDATA => xfMat2AXIvideo_24_9_300_512_1_2_U0_OUPUT_STREAM_TDATA,
        OUPUT_STREAM_TVALID => xfMat2AXIvideo_24_9_300_512_1_2_U0_OUPUT_STREAM_TVALID,
        OUPUT_STREAM_TREADY => OUPUT_STREAM_TREADY,
        OUPUT_STREAM_TKEEP => xfMat2AXIvideo_24_9_300_512_1_2_U0_OUPUT_STREAM_TKEEP,
        OUPUT_STREAM_TSTRB => xfMat2AXIvideo_24_9_300_512_1_2_U0_OUPUT_STREAM_TSTRB,
        OUPUT_STREAM_TUSER => xfMat2AXIvideo_24_9_300_512_1_2_U0_OUPUT_STREAM_TUSER,
        OUPUT_STREAM_TLAST => xfMat2AXIvideo_24_9_300_512_1_2_U0_OUPUT_STREAM_TLAST,
        OUPUT_STREAM_TID => xfMat2AXIvideo_24_9_300_512_1_2_U0_OUPUT_STREAM_TID,
        OUPUT_STREAM_TDEST => xfMat2AXIvideo_24_9_300_512_1_2_U0_OUPUT_STREAM_TDEST);

    img_0_data_U : component test_Hu_fifo_w24_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => AXIvideo2xfMat_24_9_600_1024_1_2_U0_img_0_data64_din,
        if_full_n => img_0_data_full_n,
        if_write => AXIvideo2xfMat_24_9_600_1024_1_2_U0_img_0_data64_write,
        if_dout => img_0_data_dout,
        if_num_data_valid => img_0_data_num_data_valid,
        if_fifo_cap => img_0_data_fifo_cap,
        if_empty_n => img_0_data_empty_n,
        if_read => rgb2gray_9_0_600_1024_1_2_2_U0_img_0_data64_read);

    img_0_rows_c_U : component test_Hu_fifo_w10_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => AXIvideo2xfMat_24_9_600_1024_1_2_U0_img_0_rows_c_din,
        if_full_n => img_0_rows_c_full_n,
        if_write => AXIvideo2xfMat_24_9_600_1024_1_2_U0_img_0_rows_c_write,
        if_dout => img_0_rows_c_dout,
        if_num_data_valid => img_0_rows_c_num_data_valid,
        if_fifo_cap => img_0_rows_c_fifo_cap,
        if_empty_n => img_0_rows_c_empty_n,
        if_read => rgb2gray_9_0_600_1024_1_2_2_U0_p_src_rows_read);

    img_0_cols_c_U : component test_Hu_fifo_w11_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => AXIvideo2xfMat_24_9_600_1024_1_2_U0_img_0_cols_c_din,
        if_full_n => img_0_cols_c_full_n,
        if_write => AXIvideo2xfMat_24_9_600_1024_1_2_U0_img_0_cols_c_write,
        if_dout => img_0_cols_c_dout,
        if_num_data_valid => img_0_cols_c_num_data_valid,
        if_fifo_cap => img_0_cols_c_fifo_cap,
        if_empty_n => img_0_cols_c_empty_n,
        if_read => rgb2gray_9_0_600_1024_1_2_2_U0_p_src_cols_read);

    img_1_data_U : component test_Hu_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => rgb2gray_9_0_600_1024_1_2_2_U0_img_1_data65_din,
        if_full_n => img_1_data_full_n,
        if_write => rgb2gray_9_0_600_1024_1_2_2_U0_img_1_data65_write,
        if_dout => img_1_data_dout,
        if_num_data_valid => img_1_data_num_data_valid,
        if_fifo_cap => img_1_data_fifo_cap,
        if_empty_n => img_1_data_empty_n,
        if_read => Sobel_0_3_0_0_600_1024_1_false_2_2_2_U0_img_1_data65_read);

    img_2x_data_U : component test_Hu_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Sobel_0_3_0_0_600_1024_1_false_2_2_2_U0_img_2x_data66_din,
        if_full_n => img_2x_data_full_n,
        if_write => Sobel_0_3_0_0_600_1024_1_false_2_2_2_U0_img_2x_data66_write,
        if_dout => img_2x_data_dout,
        if_num_data_valid => img_2x_data_num_data_valid,
        if_fifo_cap => img_2x_data_fifo_cap,
        if_empty_n => img_2x_data_empty_n,
        if_read => addWeighted_0_0_600_1024_1_2_2_2_U0_img_2x_data66_read);

    img_2y_data_U : component test_Hu_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Sobel_0_3_0_0_600_1024_1_false_2_2_2_U0_img_2y_data67_din,
        if_full_n => img_2y_data_full_n,
        if_write => Sobel_0_3_0_0_600_1024_1_false_2_2_2_U0_img_2y_data67_write,
        if_dout => img_2y_data_dout,
        if_num_data_valid => img_2y_data_num_data_valid,
        if_fifo_cap => img_2y_data_fifo_cap,
        if_empty_n => img_2y_data_empty_n,
        if_read => addWeighted_0_0_600_1024_1_2_2_2_U0_img_2y_data67_read);

    img_3_data_U : component test_Hu_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => addWeighted_0_0_600_1024_1_2_2_2_U0_img_3_data68_din,
        if_full_n => img_3_data_full_n,
        if_write => addWeighted_0_0_600_1024_1_2_2_2_U0_img_3_data68_write,
        if_dout => img_3_data_dout,
        if_num_data_valid => img_3_data_num_data_valid,
        if_fifo_cap => img_3_data_fifo_cap,
        if_empty_n => img_3_data_empty_n,
        if_read => resize_2_0_600_1024_300_512_1_2_2_2_U0_img_3_data68_read);

    img_4_data_U : component test_Hu_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => resize_2_0_600_1024_300_512_1_2_2_2_U0_img_4_data69_din,
        if_full_n => img_4_data_full_n,
        if_write => resize_2_0_600_1024_300_512_1_2_2_2_U0_img_4_data69_write,
        if_dout => img_4_data_dout,
        if_num_data_valid => img_4_data_num_data_valid,
        if_fifo_cap => img_4_data_fifo_cap,
        if_empty_n => img_4_data_empty_n,
        if_read => gray2rgb_0_9_300_512_1_2_2_U0_img_4_data69_read);

    img_4_rows_c_U : component test_Hu_fifo_w9_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => resize_2_0_600_1024_300_512_1_2_2_2_U0_img_4_rows_c_din,
        if_full_n => img_4_rows_c_full_n,
        if_write => resize_2_0_600_1024_300_512_1_2_2_2_U0_img_4_rows_c_write,
        if_dout => img_4_rows_c_dout,
        if_num_data_valid => img_4_rows_c_num_data_valid,
        if_fifo_cap => img_4_rows_c_fifo_cap,
        if_empty_n => img_4_rows_c_empty_n,
        if_read => gray2rgb_0_9_300_512_1_2_2_U0_p_src_rows_read);

    img_4_cols_c_U : component test_Hu_fifo_w10_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => resize_2_0_600_1024_300_512_1_2_2_2_U0_img_4_cols_c_din,
        if_full_n => img_4_cols_c_full_n,
        if_write => resize_2_0_600_1024_300_512_1_2_2_2_U0_img_4_cols_c_write,
        if_dout => img_4_cols_c_dout,
        if_num_data_valid => img_4_cols_c_num_data_valid,
        if_fifo_cap => img_4_cols_c_fifo_cap,
        if_empty_n => img_4_cols_c_empty_n,
        if_read => gray2rgb_0_9_300_512_1_2_2_U0_p_src_cols_read);

    img_5_data_U : component test_Hu_fifo_w24_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => gray2rgb_0_9_300_512_1_2_2_U0_img_5_data70_din,
        if_full_n => img_5_data_full_n,
        if_write => gray2rgb_0_9_300_512_1_2_2_U0_img_5_data70_write,
        if_dout => img_5_data_dout,
        if_num_data_valid => img_5_data_num_data_valid,
        if_fifo_cap => img_5_data_fifo_cap,
        if_empty_n => img_5_data_empty_n,
        if_read => xfMat2AXIvideo_24_9_300_512_1_2_U0_img_5_data70_read);

    start_for_rgb2gray_9_0_600_1024_1_2_2_U0_U : component test_Hu_start_for_rgb2gray_9_0_600_1024_1_2_2_U0
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_rgb2gray_9_0_600_1024_1_2_2_U0_din,
        if_full_n => start_for_rgb2gray_9_0_600_1024_1_2_2_U0_full_n,
        if_write => AXIvideo2xfMat_24_9_600_1024_1_2_U0_start_write,
        if_dout => start_for_rgb2gray_9_0_600_1024_1_2_2_U0_dout,
        if_empty_n => start_for_rgb2gray_9_0_600_1024_1_2_2_U0_empty_n,
        if_read => rgb2gray_9_0_600_1024_1_2_2_U0_ap_ready);

    start_for_Sobel_0_3_0_0_600_1024_1_false_2_2_2_U0_U : component test_Hu_start_for_Sobel_0_3_0_0_600_1024_1_false_2_2_2_U0
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_Sobel_0_3_0_0_600_1024_1_false_2_2_2_U0_din,
        if_full_n => start_for_Sobel_0_3_0_0_600_1024_1_false_2_2_2_U0_full_n,
        if_write => rgb2gray_9_0_600_1024_1_2_2_U0_start_write,
        if_dout => start_for_Sobel_0_3_0_0_600_1024_1_false_2_2_2_U0_dout,
        if_empty_n => start_for_Sobel_0_3_0_0_600_1024_1_false_2_2_2_U0_empty_n,
        if_read => Sobel_0_3_0_0_600_1024_1_false_2_2_2_U0_ap_ready);

    start_for_addWeighted_0_0_600_1024_1_2_2_2_U0_U : component test_Hu_start_for_addWeighted_0_0_600_1024_1_2_2_2_U0
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_addWeighted_0_0_600_1024_1_2_2_2_U0_din,
        if_full_n => start_for_addWeighted_0_0_600_1024_1_2_2_2_U0_full_n,
        if_write => Sobel_0_3_0_0_600_1024_1_false_2_2_2_U0_start_write,
        if_dout => start_for_addWeighted_0_0_600_1024_1_2_2_2_U0_dout,
        if_empty_n => start_for_addWeighted_0_0_600_1024_1_2_2_2_U0_empty_n,
        if_read => addWeighted_0_0_600_1024_1_2_2_2_U0_ap_ready);

    start_for_resize_2_0_600_1024_300_512_1_2_2_2_U0_U : component test_Hu_start_for_resize_2_0_600_1024_300_512_1_2_2_2_U0
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_resize_2_0_600_1024_300_512_1_2_2_2_U0_din,
        if_full_n => start_for_resize_2_0_600_1024_300_512_1_2_2_2_U0_full_n,
        if_write => addWeighted_0_0_600_1024_1_2_2_2_U0_start_write,
        if_dout => start_for_resize_2_0_600_1024_300_512_1_2_2_2_U0_dout,
        if_empty_n => start_for_resize_2_0_600_1024_300_512_1_2_2_2_U0_empty_n,
        if_read => resize_2_0_600_1024_300_512_1_2_2_2_U0_ap_ready);

    start_for_gray2rgb_0_9_300_512_1_2_2_U0_U : component test_Hu_start_for_gray2rgb_0_9_300_512_1_2_2_U0
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_gray2rgb_0_9_300_512_1_2_2_U0_din,
        if_full_n => start_for_gray2rgb_0_9_300_512_1_2_2_U0_full_n,
        if_write => resize_2_0_600_1024_300_512_1_2_2_2_U0_start_write,
        if_dout => start_for_gray2rgb_0_9_300_512_1_2_2_U0_dout,
        if_empty_n => start_for_gray2rgb_0_9_300_512_1_2_2_U0_empty_n,
        if_read => gray2rgb_0_9_300_512_1_2_2_U0_ap_ready);

    start_for_xfMat2AXIvideo_24_9_300_512_1_2_U0_U : component test_Hu_start_for_xfMat2AXIvideo_24_9_300_512_1_2_U0
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_xfMat2AXIvideo_24_9_300_512_1_2_U0_din,
        if_full_n => start_for_xfMat2AXIvideo_24_9_300_512_1_2_U0_full_n,
        if_write => gray2rgb_0_9_300_512_1_2_2_U0_start_write,
        if_dout => start_for_xfMat2AXIvideo_24_9_300_512_1_2_U0_dout,
        if_empty_n => start_for_xfMat2AXIvideo_24_9_300_512_1_2_U0_empty_n,
        if_read => xfMat2AXIvideo_24_9_300_512_1_2_U0_ap_ready);




    AXIvideo2xfMat_24_9_600_1024_1_2_U0_ap_continue <= ap_const_logic_1;
    AXIvideo2xfMat_24_9_600_1024_1_2_U0_ap_start <= ap_start;
    INPUT_STREAM_TREADY <= AXIvideo2xfMat_24_9_600_1024_1_2_U0_INPUT_STREAM_TREADY;
    OUPUT_STREAM_TDATA <= xfMat2AXIvideo_24_9_300_512_1_2_U0_OUPUT_STREAM_TDATA;
    OUPUT_STREAM_TDEST <= xfMat2AXIvideo_24_9_300_512_1_2_U0_OUPUT_STREAM_TDEST;
    OUPUT_STREAM_TID <= xfMat2AXIvideo_24_9_300_512_1_2_U0_OUPUT_STREAM_TID;
    OUPUT_STREAM_TKEEP <= xfMat2AXIvideo_24_9_300_512_1_2_U0_OUPUT_STREAM_TKEEP;
    OUPUT_STREAM_TLAST <= xfMat2AXIvideo_24_9_300_512_1_2_U0_OUPUT_STREAM_TLAST;
    OUPUT_STREAM_TSTRB <= xfMat2AXIvideo_24_9_300_512_1_2_U0_OUPUT_STREAM_TSTRB;
    OUPUT_STREAM_TUSER <= xfMat2AXIvideo_24_9_300_512_1_2_U0_OUPUT_STREAM_TUSER;
    OUPUT_STREAM_TVALID <= xfMat2AXIvideo_24_9_300_512_1_2_U0_OUPUT_STREAM_TVALID;
    Sobel_0_3_0_0_600_1024_1_false_2_2_2_U0_ap_continue <= ap_const_logic_1;
    Sobel_0_3_0_0_600_1024_1_false_2_2_2_U0_ap_start <= start_for_Sobel_0_3_0_0_600_1024_1_false_2_2_2_U0_empty_n;
    addWeighted_0_0_600_1024_1_2_2_2_U0_ap_continue <= ap_const_logic_1;
    addWeighted_0_0_600_1024_1_2_2_2_U0_ap_start <= start_for_addWeighted_0_0_600_1024_1_2_2_2_U0_empty_n;
    ap_done <= xfMat2AXIvideo_24_9_300_512_1_2_U0_ap_done;
    ap_idle <= (xfMat2AXIvideo_24_9_300_512_1_2_U0_ap_idle and rgb2gray_9_0_600_1024_1_2_2_U0_ap_idle and resize_2_0_600_1024_300_512_1_2_2_2_U0_ap_idle and gray2rgb_0_9_300_512_1_2_2_U0_ap_idle and addWeighted_0_0_600_1024_1_2_2_2_U0_ap_idle and Sobel_0_3_0_0_600_1024_1_false_2_2_2_U0_ap_idle and AXIvideo2xfMat_24_9_600_1024_1_2_U0_ap_idle);
    ap_ready <= AXIvideo2xfMat_24_9_600_1024_1_2_U0_ap_ready;

    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;

    gray2rgb_0_9_300_512_1_2_2_U0_ap_continue <= ap_const_logic_1;
    gray2rgb_0_9_300_512_1_2_2_U0_ap_start <= start_for_gray2rgb_0_9_300_512_1_2_2_U0_empty_n;
    resize_2_0_600_1024_300_512_1_2_2_2_U0_ap_continue <= ap_const_logic_1;
    resize_2_0_600_1024_300_512_1_2_2_2_U0_ap_start <= start_for_resize_2_0_600_1024_300_512_1_2_2_2_U0_empty_n;
    rgb2gray_9_0_600_1024_1_2_2_U0_ap_continue <= ap_const_logic_1;
    rgb2gray_9_0_600_1024_1_2_2_U0_ap_start <= start_for_rgb2gray_9_0_600_1024_1_2_2_U0_empty_n;
    start_for_Sobel_0_3_0_0_600_1024_1_false_2_2_2_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_addWeighted_0_0_600_1024_1_2_2_2_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_gray2rgb_0_9_300_512_1_2_2_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_resize_2_0_600_1024_300_512_1_2_2_2_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_rgb2gray_9_0_600_1024_1_2_2_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_xfMat2AXIvideo_24_9_300_512_1_2_U0_din <= (0=>ap_const_logic_1, others=>'-');
    xfMat2AXIvideo_24_9_300_512_1_2_U0_ap_continue <= ap_const_logic_1;
    xfMat2AXIvideo_24_9_300_512_1_2_U0_ap_start <= start_for_xfMat2AXIvideo_24_9_300_512_1_2_U0_empty_n;
end behav;
