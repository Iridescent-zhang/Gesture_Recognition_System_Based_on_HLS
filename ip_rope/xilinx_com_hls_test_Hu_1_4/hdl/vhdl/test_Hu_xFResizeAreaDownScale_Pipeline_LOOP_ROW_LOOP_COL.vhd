-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
-- Version: 2022.2
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity test_Hu_xFResizeAreaDownScale_Pipeline_LOOP_ROW_LOOP_COL is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    img_3_data68_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    img_3_data68_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
    img_3_data68_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
    img_3_data68_empty_n : IN STD_LOGIC;
    img_3_data68_read : OUT STD_LOGIC;
    img_4_data69_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    img_4_data69_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
    img_4_data69_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
    img_4_data69_full_n : IN STD_LOGIC;
    img_4_data69_write : OUT STD_LOGIC;
    out_div_4_cast15 : IN STD_LOGIC_VECTOR (24 downto 0);
    out_div_4_cast8 : IN STD_LOGIC_VECTOR (15 downto 0);
    conv3_i_i243_cast : IN STD_LOGIC_VECTOR (15 downto 0);
    ouput_buffer_V_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    ouput_buffer_V_ce0 : OUT STD_LOGIC;
    ouput_buffer_V_we0 : OUT STD_LOGIC;
    ouput_buffer_V_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ouput_buffer_V_address1 : OUT STD_LOGIC_VECTOR (8 downto 0);
    ouput_buffer_V_ce1 : OUT STD_LOGIC;
    ouput_buffer_V_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
    out_div_3 : IN STD_LOGIC_VECTOR (15 downto 0) );
end;


architecture behav of test_Hu_xFResizeAreaDownScale_Pipeline_LOOP_ROW_LOOP_COL is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv16_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv20_0 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv20_96000 : STD_LOGIC_VECTOR (19 downto 0) := "10010110000000000000";
    constant ap_const_lv20_1 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000001";
    constant ap_const_lv11_400 : STD_LOGIC_VECTOR (10 downto 0) := "10000000000";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_const_lv32_8000 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000001000000000000000";
    constant ap_const_lv32_10000 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000010000000000000000";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv16_41 : STD_LOGIC_VECTOR (15 downto 0) := "0000000001000001";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv16_FFFF : STD_LOGIC_VECTOR (15 downto 0) := "1111111111111111";
    constant ap_const_lv17_1 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000001";
    constant ap_const_lv32_FFFF7FBF : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111110111111110111111";
    constant ap_const_lv32_FFFFFFBF : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111110111111";
    constant ap_const_lv17_1FFFF : STD_LOGIC_VECTOR (16 downto 0) := "11111111111111111";
    constant ap_const_lv17_8000 : STD_LOGIC_VECTOR (16 downto 0) := "01000000000000000";
    constant ap_const_lv17_41 : STD_LOGIC_VECTOR (16 downto 0) := "00000000001000001";
    constant ap_const_lv32_41 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000001";
    constant ap_const_lv16_8000 : STD_LOGIC_VECTOR (15 downto 0) := "1000000000000000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv11_3FF : STD_LOGIC_VECTOR (10 downto 0) := "01111111111";
    constant ap_const_lv17_10000 : STD_LOGIC_VECTOR (16 downto 0) := "10000000000000000";
    constant ap_const_lv17_42 : STD_LOGIC_VECTOR (16 downto 0) := "00000000001000010";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv10_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_const_lv10_257 : STD_LOGIC_VECTOR (9 downto 0) := "1001010111";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv23_1 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000000001";
    constant ap_const_lv16_80 : STD_LOGIC_VECTOR (15 downto 0) := "0000000010000000";
    constant ap_const_lv24_80 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000010000000";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter9 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter10 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter11 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal icmp_ln1027_reg_1655 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1027_reg_1655_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state4_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter9 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter10 : BOOLEAN;
    signal DDR_wr_en_tmp_reg_1910 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln811_reg_1925 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op294_write_state12 : BOOLEAN;
    signal ap_block_state12_pp0_stage0_iter11 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal icmp_ln1027_fu_333_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage0 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal img_3_data68_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal img_4_data69_blk_n : STD_LOGIC;
    signal Yaxis_overlap_en_2_reg_250 : STD_LOGIC_VECTOR (0 downto 0);
    signal Yaxis_overlap_en_2_reg_250_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal Yaxis_overlap_en_2_reg_250_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal Yaxis_overlap_en_2_reg_250_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal conv3_i_i243_cast_cast_fu_262_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal conv3_i_i243_cast_cast_reg_1642 : STD_LOGIC_VECTOR (16 downto 0);
    signal out_div_4_cast15_cast_fu_266_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_div_4_cast15_cast_reg_1649 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln1027_reg_1655_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1027_reg_1655_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1027_reg_1655_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1027_reg_1655_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1027_reg_1655_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1027_reg_1655_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1027_reg_1655_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1027_reg_1655_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln694_fu_348_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln694_reg_1659 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln694_reg_1659_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln694_reg_1659_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln694_reg_1659_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln694_reg_1659_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln694_reg_1659_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln694_reg_1659_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln694_reg_1659_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln694_reg_1659_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln694_reg_1659_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln610_fu_354_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal select_ln610_reg_1665 : STD_LOGIC_VECTOR (10 downto 0);
    signal select_ln610_reg_1665_pp0_iter1_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal select_ln610_reg_1665_pp0_iter2_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal select_ln610_reg_1665_pp0_iter3_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal select_ln610_reg_1665_pp0_iter4_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal cmp152_fu_362_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp152_reg_1670 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp152_reg_1670_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp152_reg_1670_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp152_reg_1670_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp152_reg_1670_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp152_reg_1670_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp152_reg_1670_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp152_reg_1670_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp152_reg_1670_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp152_reg_1670_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_2_fu_390_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_2_reg_1681 : STD_LOGIC_VECTOR (31 downto 0);
    signal index_fract_value_V_fu_404_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal index_fract_value_V_reg_1688 : STD_LOGIC_VECTOR (15 downto 0);
    signal sub_value_V_fu_408_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal sub_value_V_reg_1696 : STD_LOGIC_VECTOR (15 downto 0);
    signal xor_ln1027_fu_421_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1027_reg_1701 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1027_reg_1701_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1035_fu_427_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1035_reg_1707 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp9_fu_433_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp9_reg_1712 : STD_LOGIC_VECTOR (15 downto 0);
    signal output_buffer_index_start_V_fu_443_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal output_buffer_index_start_V_reg_1718 : STD_LOGIC_VECTOR (15 downto 0);
    signal output_buffer_index_next_V_2_fu_500_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal output_buffer_index_next_V_2_reg_1723 : STD_LOGIC_VECTOR (15 downto 0);
    signal output_buffer_index_next_V_2_reg_1723_pp0_iter2_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal output_buffer_index_next_V_2_reg_1723_pp0_iter3_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal output_buffer_index_next_V_2_reg_1723_pp0_iter4_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal output_buffer_index_next_V_2_reg_1723_pp0_iter5_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal output_buffer_index_next_V_2_reg_1723_pp0_iter6_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal output_buffer_index_next_V_2_reg_1723_pp0_iter7_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal output_buffer_index_next_V_2_reg_1723_pp0_iter8_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln72_fu_540_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln72_reg_1730 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln72_reg_1730_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln72_reg_1730_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln72_reg_1730_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln72_reg_1730_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln72_reg_1730_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln72_reg_1730_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln72_reg_1730_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal t1_fu_595_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal t1_reg_1740 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1019_fu_611_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1019_reg_1745 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1019_2_fu_623_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1019_2_reg_1750 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1035_2_fu_638_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1035_2_reg_1755 : STD_LOGIC_VECTOR (0 downto 0);
    signal Wx_for_Nplus1_Procblock_fu_677_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal Wx_for_Nplus1_Procblock_reg_1760 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln237_fu_700_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln237_reg_1765 : STD_LOGIC_VECTOR (15 downto 0);
    signal out_index_val_V_fu_707_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal out_index_val_V_reg_1770 : STD_LOGIC_VECTOR (0 downto 0);
    signal out_index_val_V_reg_1770_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal out_index_val_V_reg_1770_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal out_index_val_V_reg_1770_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal out_index_val_V_reg_1770_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal out_index_val_V_reg_1770_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal out_index_val_V_reg_1770_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal out_index_val_V_reg_1770_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal Yindex_output_V_4_reg_1801 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln219_fu_755_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln219_reg_1807 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln219_reg_1807_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln219_reg_1807_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln219_reg_1807_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln219_reg_1807_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_s_fu_773_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_s_reg_1816 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln1027_1_fu_777_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1027_1_reg_1821 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_2_reg_1826 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_2_reg_1826_pp0_iter7_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_2_reg_1826_pp0_iter8_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_2_reg_1826_pp0_iter9_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln1039_1_fu_809_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1039_1_reg_1831 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1039_1_reg_1831_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1039_1_reg_1831_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1039_1_reg_1831_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln1494_fu_844_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln1494_1_fu_848_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln1494_2_fu_861_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln1494_3_fu_865_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal Yaxis_overlap_en_fu_883_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Yaxis_overlap_en_reg_1860 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_3_fu_894_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_3_reg_1865 : STD_LOGIC_VECTOR (0 downto 0);
    signal out_buffer_wr_en_fu_909_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal out_buffer_wr_en_reg_1873 : STD_LOGIC_VECTOR (0 downto 0);
    signal out_buffer_wr_en_reg_1873_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal procBlock_out_V_reg_1880 : STD_LOGIC_VECTOR (15 downto 0);
    signal PB_out_V_reg_1886 : STD_LOGIC_VECTOR (15 downto 0);
    signal procBlock_out_V_1_reg_1892 : STD_LOGIC_VECTOR (15 downto 0);
    signal PB_out_overlap_V_reg_1898 : STD_LOGIC_VECTOR (15 downto 0);
    signal ouput_buffer_V_addr_reg_1904 : STD_LOGIC_VECTOR (8 downto 0);
    signal ouput_buffer_V_addr_reg_1904_pp0_iter10_reg : STD_LOGIC_VECTOR (8 downto 0);
    signal DDR_wr_en_tmp_fu_1121_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal temp_sum_V_fu_1372_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal temp_sum_V_reg_1914 : STD_LOGIC_VECTOR (15 downto 0);
    signal buffer_data_temp_fu_1385_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal buffer_data_temp_reg_1920 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln811_fu_1403_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter10_stage0 : STD_LOGIC;
    signal ap_phi_mux_Yaxis_overlap_en_2_phi_fu_254_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal conv_i109_i_fu_971_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal Xindex_output_next_V_fu_140 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln694_1_fu_514_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal Yindex_output_V_1_fu_144 : STD_LOGIC_VECTOR (31 downto 0);
    signal Yindex_output_V_3_fu_765_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal Yindex_output_prev_V_2_fu_148 : STD_LOGIC_VECTOR (31 downto 0);
    signal Yindex_output_prev_V_4_fu_1432_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal write_col_index_V_3_fu_152 : STD_LOGIC_VECTOR (15 downto 0);
    signal write_col_index_V_5_fu_993_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal ouput_index_write_counter_V_fu_156 : STD_LOGIC_VECTOR (15 downto 0);
    signal ouput_index_write_counter_V_3_fu_928_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal col_index_1_fu_160 : STD_LOGIC_VECTOR (10 downto 0);
    signal col_index_fu_368_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_sig_allocacmp_col_index_1_load : STD_LOGIC_VECTOR (10 downto 0);
    signal add_i425112_fu_164 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln694_fu_508_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal data_previous_V_fu_168 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln488_1_fu_1244_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_previous_overlap_V_fu_172 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln488_fu_1236_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_0_0_01086_1118_fu_176 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln488_3_fu_1357_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_0_0_01085_1120_fu_180 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln488_2_fu_1349_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal row_index_V_fu_184 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln1027_fu_1056_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal indvar_flatten_fu_188 : STD_LOGIC_VECTOR (19 downto 0);
    signal add_ln1027_fu_339_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal ap_sig_allocacmp_indvar_flatten_load : STD_LOGIC_VECTOR (19 downto 0);
    signal out_col_index_fu_192 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_col_index_5_fu_1415_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal tmp_fu_413_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal Xindex_output_next_V_1_fu_397_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal index_fract_value_V_1_fu_449_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_1_fu_458_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_value_V_1_fu_453_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_s_fu_478_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln1035_1_fu_472_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1027_1_fu_466_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln89_fu_494_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal output_buffer_index_next_V_fu_488_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal and_ln72_fu_530_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal output_buffer_index_start_V_1_fu_534_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln1495_fu_544_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal ret_V_1_fu_554_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal int_bits_Xindex_out_previous_V_fu_559_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal int_bits_Xindex_out_previous_V_2_fu_569_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal ret_V_2_fu_580_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal int_bits_Xindex_out_V_fu_585_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln186_fu_601_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal rhs_V_1_fu_576_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal ret_V_fu_605_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal ret_V_3_fu_617_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal zext_ln1496_fu_629_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal ret_V_4_fu_632_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal r_V_fu_644_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln1495_fu_548_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal zext_ln1019_fu_656_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal overlap_next_pixel_V_fu_651_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln1019_3_fu_659_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1035_3_fu_665_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln166_fu_671_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1019_4_fu_689_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln237_fu_684_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Wx_V_fu_694_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal and_ln132_fu_715_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln132_1_fu_711_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal t2_fu_719_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal inflag_TA_fu_725_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal in_data_V_fu_733_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal Yindex_output_V_fu_760_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_1_fu_787_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln628_fu_790_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal Yindex_output_precision_error_V_fu_794_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub_ln186_fu_815_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_fu_1485_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal Wy0_fu_820_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal r_V_1_fu_835_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal r_V_3_fu_852_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_1494_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal r_V_3_fu_852_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal Wy1_fu_827_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln1496_1_fu_869_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal ret_V_7_fu_872_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal icmp_ln1035_5_fu_877_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1039_fu_898_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1039_fu_903_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ouput_index_write_counter_V_1_fu_914_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal ouput_index_write_counter_V_2_fu_920_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1501_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal PB_out_V_fu_944_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1510_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1517_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal PB_out_overlap_V_fu_962_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1526_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal write_col_index_V_fu_979_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal write_col_index_V_4_fu_985_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln840_fu_1031_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal cmp_i_i114_i_mid1_fu_1037_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp_i_i114_i12_fu_1043_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_2_fu_1063_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln628_1_fu_1067_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_3_fu_1077_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal Yindex_output_prev_precision_error_V_fu_1071_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal icmp_ln530_fu_1087_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln610_1_fu_1049_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln201_1_fu_1103_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln201_fu_1098_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1035_4_fu_1092_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln201_2_fu_1109_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln201_fu_1115_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1019_fu_1131_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal data_mux_out_V_1_fu_1136_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_mux_out_overlap_V_1_fu_1142_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_5_fu_1156_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_Result_4_fu_1148_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal data_mux_out_status_V_2_fu_1176_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal data_mux_out_V_3_fu_1164_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_previous_V_1_fu_1183_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_mux_out_overlap_V_3_fu_1170_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_previous_overlap_V_1_fu_1190_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln1023_fu_1197_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln186_1_fu_1209_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln186_fu_1203_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal cmp92_i_fu_1126_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln488_fu_1231_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal update_overlap_fu_1215_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal update_fu_1223_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_mux_out_V_4_fu_1252_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_mux_out_overlap_V_4_fu_1258_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_7_fu_1271_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_Result_6_fu_1264_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal data_mux_out_status_V_5_fu_1290_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal data_mux_out_V_5_fu_1278_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_previous_V_2_fu_1297_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_mux_out_overlap_V_5_fu_1284_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_previous_overlap_V_2_fu_1304_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln1023_1_fu_1311_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln186_3_fu_1323_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln186_2_fu_1317_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal and_ln488_1_fu_1345_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal update_overlap_1_fu_1329_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal update_1_fu_1337_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal DDR_write1_temp_V_1_fu_1365_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln529_fu_1378_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_4_fu_1393_p4 : STD_LOGIC_VECTOR (22 downto 0);
    signal out_col_index_4_fu_1409_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal Yindex_output_prev_V_fu_1427_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sum_rounding_V_fu_1469_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1485_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1485_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1485_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1494_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1494_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1501_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1501_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_fu_1501_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1510_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1510_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_fu_1517_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1517_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1517_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1526_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1526_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1485_ce : STD_LOGIC;
    signal grp_fu_1494_ce : STD_LOGIC;
    signal grp_fu_1501_ce : STD_LOGIC;
    signal grp_fu_1510_ce : STD_LOGIC;
    signal grp_fu_1517_ce : STD_LOGIC;
    signal grp_fu_1526_ce : STD_LOGIC;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter1_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter2_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter3_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter4_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter5_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter6_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter7_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter8_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter9_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter10_reg : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0 : BOOLEAN;
    signal ap_enable_operation_195 : BOOLEAN;
    signal ap_enable_state10_pp0_iter9_stage0 : BOOLEAN;
    signal ap_enable_operation_265 : BOOLEAN;
    signal ap_enable_state11_pp0_iter10_stage0 : BOOLEAN;
    signal ap_predicate_op289_store_state12 : BOOLEAN;
    signal ap_enable_operation_289 : BOOLEAN;
    signal ap_enable_state12_pp0_iter11_stage0 : BOOLEAN;
    signal ap_enable_operation_293 : BOOLEAN;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal grp_fu_1485_p00 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_1485_p10 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_1494_p00 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_1494_p10 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_condition_1445 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;

    component test_Hu_mac_muladd_16ns_8ns_8ns_24_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (23 downto 0) );
    end component;


    component test_Hu_mul_mul_16ns_8ns_24_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (23 downto 0) );
    end component;


    component test_Hu_mac_muladd_16ns_17ns_16ns_32_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (16 downto 0);
        din2 : IN STD_LOGIC_VECTOR (15 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component test_Hu_mul_mul_16ns_17ns_32_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (16 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component test_Hu_mac_muladd_16ns_16ns_16ns_32_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        din2 : IN STD_LOGIC_VECTOR (15 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component test_Hu_mul_mul_16ns_16ns_32_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component test_Hu_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    mac_muladd_16ns_8ns_8ns_24_4_1_U125 : component test_Hu_mac_muladd_16ns_8ns_8ns_24_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1485_p0,
        din1 => grp_fu_1485_p1,
        din2 => grp_fu_1485_p2,
        ce => grp_fu_1485_ce,
        dout => grp_fu_1485_p3);

    mul_mul_16ns_8ns_24_4_1_U126 : component test_Hu_mul_mul_16ns_8ns_24_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 8,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1494_p0,
        din1 => grp_fu_1494_p1,
        ce => grp_fu_1494_ce,
        dout => grp_fu_1494_p2);

    mac_muladd_16ns_17ns_16ns_32_4_1_U127 : component test_Hu_mac_muladd_16ns_17ns_16ns_32_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 17,
        din2_WIDTH => 16,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1501_p0,
        din1 => grp_fu_1501_p1,
        din2 => grp_fu_1501_p2,
        ce => grp_fu_1501_ce,
        dout => grp_fu_1501_p3);

    mul_mul_16ns_17ns_32_4_1_U128 : component test_Hu_mul_mul_16ns_17ns_32_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 17,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1510_p0,
        din1 => grp_fu_1510_p1,
        ce => grp_fu_1510_ce,
        dout => grp_fu_1510_p2);

    mac_muladd_16ns_16ns_16ns_32_4_1_U129 : component test_Hu_mac_muladd_16ns_16ns_16ns_32_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 16,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1517_p0,
        din1 => grp_fu_1517_p1,
        din2 => grp_fu_1517_p2,
        ce => grp_fu_1517_ce,
        dout => grp_fu_1517_p3);

    mul_mul_16ns_16ns_32_4_1_U130 : component test_Hu_mul_mul_16ns_16ns_32_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1526_p0,
        din1 => grp_fu_1526_p1,
        ce => grp_fu_1526_ce,
        dout => grp_fu_1526_p2);

    flow_control_loop_pipe_sequential_init_U : component test_Hu_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage0,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_loop_exit_ready_pp0_iter10_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter10 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter11 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter10_stage0)) then 
                    ap_enable_reg_pp0_iter11 <= ap_const_logic_0;
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
                end if; 
            end if;
        end if;
    end process;


    Yaxis_overlap_en_2_reg_250_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (icmp_ln1027_reg_1655_pp0_iter6_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                Yaxis_overlap_en_2_reg_250 <= Yaxis_overlap_en_reg_1860;
            elsif (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                Yaxis_overlap_en_2_reg_250 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    Yindex_output_V_1_fu_144_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    Yindex_output_V_1_fu_144 <= out_div_4_cast15_cast_fu_266_p1;
                elsif (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (icmp_ln1027_reg_1655_pp0_iter4_reg = ap_const_lv1_0))) then 
                    Yindex_output_V_1_fu_144 <= Yindex_output_V_3_fu_765_p3;
                end if;
            end if; 
        end if;
    end process;

    Yindex_output_prev_V_2_fu_148_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    Yindex_output_prev_V_2_fu_148 <= ap_const_lv32_0;
                elsif (((ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (icmp_ln1027_reg_1655_pp0_iter9_reg = ap_const_lv1_0))) then 
                    Yindex_output_prev_V_2_fu_148 <= Yindex_output_prev_V_4_fu_1432_p3;
                end if;
            end if; 
        end if;
    end process;

    col_index_1_fu_160_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln1027_fu_333_p2 = ap_const_lv1_0))) then 
                    col_index_1_fu_160 <= col_index_fu_368_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    col_index_1_fu_160 <= ap_const_lv11_0;
                end if;
            end if; 
        end if;
    end process;

    data_previous_V_fu_168_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    data_previous_V_fu_168 <= ap_const_lv16_0;
                elsif (((ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (icmp_ln1027_reg_1655_pp0_iter9_reg = ap_const_lv1_0))) then 
                    data_previous_V_fu_168 <= select_ln488_1_fu_1244_p3;
                end if;
            end if; 
        end if;
    end process;

    data_previous_overlap_V_fu_172_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    data_previous_overlap_V_fu_172 <= ap_const_lv16_0;
                elsif (((ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (icmp_ln1027_reg_1655_pp0_iter9_reg = ap_const_lv1_0))) then 
                    data_previous_overlap_V_fu_172 <= select_ln488_fu_1236_p3;
                end if;
            end if; 
        end if;
    end process;

    indvar_flatten_fu_188_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln1027_fu_333_p2 = ap_const_lv1_0))) then 
                    indvar_flatten_fu_188 <= add_ln1027_fu_339_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    indvar_flatten_fu_188 <= ap_const_lv20_0;
                end if;
            end if; 
        end if;
    end process;

    ouput_index_write_counter_V_fu_156_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ouput_index_write_counter_V_fu_156 <= ap_const_lv16_1;
                elsif (((ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (icmp_ln1027_reg_1655_pp0_iter8_reg = ap_const_lv1_0))) then 
                    ouput_index_write_counter_V_fu_156 <= ouput_index_write_counter_V_3_fu_928_p3;
                end if;
            end if; 
        end if;
    end process;

    out_col_index_fu_192_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    out_col_index_fu_192 <= ap_const_lv32_0;
                elsif ((ap_const_boolean_1 = ap_condition_1445)) then 
                    out_col_index_fu_192 <= out_col_index_5_fu_1415_p3;
                end if;
            end if; 
        end if;
    end process;

    p_0_0_01085_1120_fu_180_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    p_0_0_01085_1120_fu_180 <= ap_const_lv16_0;
                elsif (((ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (icmp_ln1027_reg_1655_pp0_iter9_reg = ap_const_lv1_0))) then 
                    p_0_0_01085_1120_fu_180 <= select_ln488_2_fu_1349_p3;
                end if;
            end if; 
        end if;
    end process;

    p_0_0_01086_1118_fu_176_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    p_0_0_01086_1118_fu_176 <= ap_const_lv16_0;
                elsif (((ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (icmp_ln1027_reg_1655_pp0_iter9_reg = ap_const_lv1_0))) then 
                    p_0_0_01086_1118_fu_176 <= select_ln488_3_fu_1357_p3;
                end if;
            end if; 
        end if;
    end process;

    row_index_V_fu_184_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    row_index_V_fu_184 <= ap_const_lv10_0;
                elsif (((ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (icmp_ln1027_reg_1655_pp0_iter9_reg = ap_const_lv1_0))) then 
                    row_index_V_fu_184 <= select_ln1027_fu_1056_p3;
                end if;
            end if; 
        end if;
    end process;

    write_col_index_V_3_fu_152_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    write_col_index_V_3_fu_152 <= ap_const_lv16_0;
                elsif (((ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (icmp_ln1027_reg_1655_pp0_iter8_reg = ap_const_lv1_0))) then 
                    write_col_index_V_3_fu_152 <= write_col_index_V_5_fu_993_p3;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1027_reg_1655_pp0_iter9_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                DDR_wr_en_tmp_reg_1910 <= DDR_wr_en_tmp_fu_1121_p2;
                temp_sum_V_reg_1914 <= temp_sum_V_fu_1372_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1027_reg_1655_pp0_iter8_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                PB_out_V_reg_1886 <= PB_out_V_fu_944_p1(31 downto 16);
                PB_out_overlap_V_reg_1898 <= PB_out_overlap_V_fu_962_p1(31 downto 16);
                ouput_buffer_V_addr_reg_1904 <= conv_i109_i_fu_971_p1(9 - 1 downto 0);
                out_buffer_wr_en_reg_1873 <= out_buffer_wr_en_fu_909_p2;
                p_Result_3_reg_1865 <= p_Result_3_fu_894_p1;
                procBlock_out_V_1_reg_1892 <= grp_fu_1517_p3(31 downto 16);
                procBlock_out_V_reg_1880 <= grp_fu_1501_p3(31 downto 16);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1027_reg_1655_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                Wx_for_Nplus1_Procblock_reg_1760 <= Wx_for_Nplus1_Procblock_fu_677_p3;
                icmp_ln1019_2_reg_1750 <= icmp_ln1019_2_fu_623_p2;
                icmp_ln1019_reg_1745 <= icmp_ln1019_fu_611_p2;
                icmp_ln1035_2_reg_1755 <= icmp_ln1035_2_fu_638_p2;
                out_index_val_V_reg_1770 <= out_index_val_V_fu_707_p1;
                select_ln237_reg_1765 <= select_ln237_fu_700_p3;
                t1_reg_1740 <= t1_fu_595_p2;
                trunc_ln72_reg_1730 <= trunc_ln72_fu_540_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1027_reg_1655 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                Xindex_output_next_V_fu_140 <= add_ln694_1_fu_514_p2;
                add_i425112_fu_164 <= add_ln694_fu_508_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                Yaxis_overlap_en_2_reg_250_pp0_iter7_reg <= Yaxis_overlap_en_2_reg_250;
                Yaxis_overlap_en_2_reg_250_pp0_iter8_reg <= Yaxis_overlap_en_2_reg_250_pp0_iter7_reg;
                Yaxis_overlap_en_2_reg_250_pp0_iter9_reg <= Yaxis_overlap_en_2_reg_250_pp0_iter8_reg;
                Yindex_output_V_4_reg_1801 <= Yindex_output_V_1_fu_144;
                ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
                ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
                ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
                ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
                ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
                ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
                ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
                ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
                cmp152_reg_1670_pp0_iter2_reg <= cmp152_reg_1670_pp0_iter1_reg;
                cmp152_reg_1670_pp0_iter3_reg <= cmp152_reg_1670_pp0_iter2_reg;
                cmp152_reg_1670_pp0_iter4_reg <= cmp152_reg_1670_pp0_iter3_reg;
                cmp152_reg_1670_pp0_iter5_reg <= cmp152_reg_1670_pp0_iter4_reg;
                cmp152_reg_1670_pp0_iter6_reg <= cmp152_reg_1670_pp0_iter5_reg;
                cmp152_reg_1670_pp0_iter7_reg <= cmp152_reg_1670_pp0_iter6_reg;
                cmp152_reg_1670_pp0_iter8_reg <= cmp152_reg_1670_pp0_iter7_reg;
                cmp152_reg_1670_pp0_iter9_reg <= cmp152_reg_1670_pp0_iter8_reg;
                icmp_ln1027_reg_1655_pp0_iter2_reg <= icmp_ln1027_reg_1655_pp0_iter1_reg;
                icmp_ln1027_reg_1655_pp0_iter3_reg <= icmp_ln1027_reg_1655_pp0_iter2_reg;
                icmp_ln1027_reg_1655_pp0_iter4_reg <= icmp_ln1027_reg_1655_pp0_iter3_reg;
                icmp_ln1027_reg_1655_pp0_iter5_reg <= icmp_ln1027_reg_1655_pp0_iter4_reg;
                icmp_ln1027_reg_1655_pp0_iter6_reg <= icmp_ln1027_reg_1655_pp0_iter5_reg;
                icmp_ln1027_reg_1655_pp0_iter7_reg <= icmp_ln1027_reg_1655_pp0_iter6_reg;
                icmp_ln1027_reg_1655_pp0_iter8_reg <= icmp_ln1027_reg_1655_pp0_iter7_reg;
                icmp_ln1027_reg_1655_pp0_iter9_reg <= icmp_ln1027_reg_1655_pp0_iter8_reg;
                icmp_ln1039_1_reg_1831_pp0_iter7_reg <= icmp_ln1039_1_reg_1831;
                icmp_ln1039_1_reg_1831_pp0_iter8_reg <= icmp_ln1039_1_reg_1831_pp0_iter7_reg;
                icmp_ln1039_1_reg_1831_pp0_iter9_reg <= icmp_ln1039_1_reg_1831_pp0_iter8_reg;
                icmp_ln219_reg_1807_pp0_iter6_reg <= icmp_ln219_reg_1807;
                icmp_ln219_reg_1807_pp0_iter7_reg <= icmp_ln219_reg_1807_pp0_iter6_reg;
                icmp_ln219_reg_1807_pp0_iter8_reg <= icmp_ln219_reg_1807_pp0_iter7_reg;
                icmp_ln219_reg_1807_pp0_iter9_reg <= icmp_ln219_reg_1807_pp0_iter8_reg;
                icmp_ln694_reg_1659_pp0_iter2_reg <= icmp_ln694_reg_1659_pp0_iter1_reg;
                icmp_ln694_reg_1659_pp0_iter3_reg <= icmp_ln694_reg_1659_pp0_iter2_reg;
                icmp_ln694_reg_1659_pp0_iter4_reg <= icmp_ln694_reg_1659_pp0_iter3_reg;
                icmp_ln694_reg_1659_pp0_iter5_reg <= icmp_ln694_reg_1659_pp0_iter4_reg;
                icmp_ln694_reg_1659_pp0_iter6_reg <= icmp_ln694_reg_1659_pp0_iter5_reg;
                icmp_ln694_reg_1659_pp0_iter7_reg <= icmp_ln694_reg_1659_pp0_iter6_reg;
                icmp_ln694_reg_1659_pp0_iter8_reg <= icmp_ln694_reg_1659_pp0_iter7_reg;
                icmp_ln694_reg_1659_pp0_iter9_reg <= icmp_ln694_reg_1659_pp0_iter8_reg;
                ouput_buffer_V_addr_reg_1904_pp0_iter10_reg <= ouput_buffer_V_addr_reg_1904;
                out_buffer_wr_en_reg_1873_pp0_iter10_reg <= out_buffer_wr_en_reg_1873;
                out_index_val_V_reg_1770_pp0_iter3_reg <= out_index_val_V_reg_1770;
                out_index_val_V_reg_1770_pp0_iter4_reg <= out_index_val_V_reg_1770_pp0_iter3_reg;
                out_index_val_V_reg_1770_pp0_iter5_reg <= out_index_val_V_reg_1770_pp0_iter4_reg;
                out_index_val_V_reg_1770_pp0_iter6_reg <= out_index_val_V_reg_1770_pp0_iter5_reg;
                out_index_val_V_reg_1770_pp0_iter7_reg <= out_index_val_V_reg_1770_pp0_iter6_reg;
                out_index_val_V_reg_1770_pp0_iter8_reg <= out_index_val_V_reg_1770_pp0_iter7_reg;
                out_index_val_V_reg_1770_pp0_iter9_reg <= out_index_val_V_reg_1770_pp0_iter8_reg;
                output_buffer_index_next_V_2_reg_1723_pp0_iter2_reg <= output_buffer_index_next_V_2_reg_1723;
                output_buffer_index_next_V_2_reg_1723_pp0_iter3_reg <= output_buffer_index_next_V_2_reg_1723_pp0_iter2_reg;
                output_buffer_index_next_V_2_reg_1723_pp0_iter4_reg <= output_buffer_index_next_V_2_reg_1723_pp0_iter3_reg;
                output_buffer_index_next_V_2_reg_1723_pp0_iter5_reg <= output_buffer_index_next_V_2_reg_1723_pp0_iter4_reg;
                output_buffer_index_next_V_2_reg_1723_pp0_iter6_reg <= output_buffer_index_next_V_2_reg_1723_pp0_iter5_reg;
                output_buffer_index_next_V_2_reg_1723_pp0_iter7_reg <= output_buffer_index_next_V_2_reg_1723_pp0_iter6_reg;
                output_buffer_index_next_V_2_reg_1723_pp0_iter8_reg <= output_buffer_index_next_V_2_reg_1723_pp0_iter7_reg;
                select_ln610_reg_1665_pp0_iter2_reg <= select_ln610_reg_1665_pp0_iter1_reg;
                select_ln610_reg_1665_pp0_iter3_reg <= select_ln610_reg_1665_pp0_iter2_reg;
                select_ln610_reg_1665_pp0_iter4_reg <= select_ln610_reg_1665_pp0_iter3_reg;
                tmp_2_reg_1826_pp0_iter7_reg <= tmp_2_reg_1826;
                tmp_2_reg_1826_pp0_iter8_reg <= tmp_2_reg_1826_pp0_iter7_reg;
                tmp_2_reg_1826_pp0_iter9_reg <= tmp_2_reg_1826_pp0_iter8_reg;
                trunc_ln72_reg_1730_pp0_iter3_reg <= trunc_ln72_reg_1730;
                trunc_ln72_reg_1730_pp0_iter4_reg <= trunc_ln72_reg_1730_pp0_iter3_reg;
                trunc_ln72_reg_1730_pp0_iter5_reg <= trunc_ln72_reg_1730_pp0_iter4_reg;
                trunc_ln72_reg_1730_pp0_iter6_reg <= trunc_ln72_reg_1730_pp0_iter5_reg;
                trunc_ln72_reg_1730_pp0_iter7_reg <= trunc_ln72_reg_1730_pp0_iter6_reg;
                trunc_ln72_reg_1730_pp0_iter8_reg <= trunc_ln72_reg_1730_pp0_iter7_reg;
                trunc_ln72_reg_1730_pp0_iter9_reg <= trunc_ln72_reg_1730_pp0_iter8_reg;
                xor_ln1027_reg_1701_pp0_iter2_reg <= xor_ln1027_reg_1701;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (icmp_ln1027_reg_1655_pp0_iter5_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                Yaxis_overlap_en_reg_1860 <= Yaxis_overlap_en_fu_883_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
                ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
                cmp152_reg_1670_pp0_iter1_reg <= cmp152_reg_1670;
                    conv3_i_i243_cast_cast_reg_1642(15 downto 0) <= conv3_i_i243_cast_cast_fu_262_p1(15 downto 0);
                icmp_ln1027_reg_1655 <= icmp_ln1027_fu_333_p2;
                icmp_ln1027_reg_1655_pp0_iter1_reg <= icmp_ln1027_reg_1655;
                icmp_ln694_reg_1659_pp0_iter1_reg <= icmp_ln694_reg_1659;
                    out_div_4_cast15_cast_reg_1649(24 downto 0) <= out_div_4_cast15_cast_fu_266_p1(24 downto 0);
                select_ln610_reg_1665_pp0_iter1_reg <= select_ln610_reg_1665;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = DDR_wr_en_tmp_fu_1121_p2) and (icmp_ln1027_reg_1655_pp0_iter9_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                buffer_data_temp_reg_1920 <= buffer_data_temp_fu_1385_p3;
                icmp_ln811_reg_1925 <= icmp_ln811_fu_1403_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln1027_fu_333_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                cmp152_reg_1670 <= cmp152_fu_362_p2;
                icmp_ln694_reg_1659 <= icmp_ln694_fu_348_p2;
                select_ln610_reg_1665 <= select_ln610_fu_354_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1027_reg_1655_pp0_iter4_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                icmp_ln1027_1_reg_1821 <= icmp_ln1027_1_fu_777_p2;
                icmp_ln219_reg_1807 <= icmp_ln219_fu_755_p2;
                p_Result_s_reg_1816 <= p_Result_s_fu_773_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1027_reg_1655 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                icmp_ln1035_reg_1707 <= icmp_ln1035_fu_427_p2;
                index_fract_value_V_reg_1688 <= index_fract_value_V_fu_404_p1;
                output_buffer_index_next_V_2_reg_1723 <= output_buffer_index_next_V_2_fu_500_p3;
                output_buffer_index_start_V_reg_1718 <= output_buffer_index_start_V_fu_443_p2;
                p_Val2_2_reg_1681 <= p_Val2_2_fu_390_p3;
                sub_value_V_reg_1696 <= sub_value_V_fu_408_p2;
                tmp9_reg_1712 <= p_Val2_2_fu_390_p3(31 downto 16);
                xor_ln1027_reg_1701 <= xor_ln1027_fu_421_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1027_reg_1655_pp0_iter5_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                icmp_ln1039_1_reg_1831 <= icmp_ln1039_1_fu_809_p2;
                tmp_2_reg_1826 <= Yindex_output_V_4_reg_1801(31 downto 16);
            end if;
        end if;
    end process;
    conv3_i_i243_cast_cast_reg_1642(16) <= '0';
    out_div_4_cast15_cast_reg_1649(31 downto 25) <= "0000000";

    ap_NS_fsm_assign_proc : process (ap_CS_fsm)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    DDR_wr_en_tmp_fu_1121_p2 <= (out_buffer_wr_en_reg_1873 and and_ln201_fu_1115_p2);
    DDR_write1_temp_V_1_fu_1365_p3 <= 
        update_1_fu_1337_p3 when (p_Result_3_reg_1865(0) = '1') else 
        update_fu_1223_p3;
    PB_out_V_fu_944_p1 <= grp_fu_1510_p2;
    PB_out_overlap_V_fu_962_p1 <= grp_fu_1526_p2;
    Wx_V_fu_694_p3 <= 
        index_fract_value_V_reg_1688 when (icmp_ln1019_4_fu_689_p2(0) = '1') else 
        sub_value_V_reg_1696;
    Wx_for_Nplus1_Procblock_fu_677_p3 <= 
        index_fract_value_V_reg_1688 when (and_ln166_fu_671_p2(0) = '1') else 
        ap_const_lv16_0;
    Wy0_fu_820_p3 <= 
        sub_ln186_fu_815_p2 when (ap_phi_mux_Yaxis_overlap_en_2_phi_fu_254_p4(0) = '1') else 
        conv3_i_i243_cast_cast_reg_1642;
    Wy1_fu_827_p3 <= 
        p_Result_1_fu_787_p1 when (ap_phi_mux_Yaxis_overlap_en_2_phi_fu_254_p4(0) = '1') else 
        ap_const_lv16_0;
    Xindex_output_next_V_1_fu_397_p3 <= 
        ap_const_lv32_10000 when (cmp152_reg_1670(0) = '1') else 
        Xindex_output_next_V_fu_140;
    Yaxis_overlap_en_fu_883_p2 <= (icmp_ln1035_5_fu_877_p2 and icmp_ln1027_1_reg_1821);
    Yindex_output_V_3_fu_765_p3 <= 
        Yindex_output_V_fu_760_p2 when (icmp_ln219_fu_755_p2(0) = '1') else 
        Yindex_output_V_1_fu_144;
    Yindex_output_V_fu_760_p2 <= std_logic_vector(unsigned(Yindex_output_V_1_fu_144) + unsigned(out_div_4_cast15_cast_reg_1649));
    Yindex_output_precision_error_V_fu_794_p2 <= std_logic_vector(signed(ap_const_lv17_10000) - signed(zext_ln628_fu_790_p1));
    Yindex_output_prev_V_4_fu_1432_p3 <= 
        Yindex_output_prev_V_fu_1427_p2 when (icmp_ln219_reg_1807_pp0_iter9_reg(0) = '1') else 
        Yindex_output_prev_V_2_fu_148;
    Yindex_output_prev_V_fu_1427_p2 <= std_logic_vector(unsigned(Yindex_output_prev_V_2_fu_148) + unsigned(out_div_4_cast15_cast_reg_1649));
    Yindex_output_prev_precision_error_V_fu_1071_p2 <= std_logic_vector(signed(ap_const_lv17_10000) - signed(zext_ln628_1_fu_1067_p1));
    add_ln1027_fu_339_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_indvar_flatten_load) + unsigned(ap_const_lv20_1));
    add_ln1495_fu_548_p2 <= std_logic_vector(unsigned(zext_ln1495_fu_544_p1) + unsigned(ap_const_lv17_1));
    add_ln186_1_fu_1209_p2 <= std_logic_vector(unsigned(data_mux_out_overlap_V_3_fu_1170_p3) + unsigned(data_previous_overlap_V_1_fu_1190_p3));
    add_ln186_2_fu_1317_p2 <= std_logic_vector(unsigned(data_mux_out_V_5_fu_1278_p3) + unsigned(data_previous_V_2_fu_1297_p3));
    add_ln186_3_fu_1323_p2 <= std_logic_vector(unsigned(data_mux_out_overlap_V_5_fu_1284_p3) + unsigned(data_previous_overlap_V_2_fu_1304_p3));
    add_ln186_fu_1203_p2 <= std_logic_vector(unsigned(data_mux_out_V_3_fu_1164_p3) + unsigned(data_previous_V_1_fu_1183_p3));
    add_ln694_1_fu_514_p2 <= std_logic_vector(unsigned(Xindex_output_next_V_1_fu_397_p3) + unsigned(ap_const_lv32_8000));
    add_ln694_fu_508_p2 <= std_logic_vector(unsigned(p_Val2_2_fu_390_p3) + unsigned(ap_const_lv32_8000));
    add_ln840_fu_1031_p2 <= std_logic_vector(unsigned(row_index_V_fu_184) + unsigned(ap_const_lv10_1));
    and_ln132_1_fu_711_p2 <= (icmp_ln1035_2_reg_1755 and icmp_ln1019_reg_1745);
    and_ln132_fu_715_p2 <= (xor_ln1027_reg_1701_pp0_iter2_reg and icmp_ln1019_2_reg_1750);
    and_ln166_fu_671_p2 <= (icmp_ln1035_3_fu_665_p2 and icmp_ln1019_3_fu_659_p2);
    and_ln201_fu_1115_p2 <= (or_ln201_2_fu_1109_p2 and icmp_ln1035_4_fu_1092_p2);
    and_ln488_1_fu_1345_p2 <= (p_Result_3_reg_1865 and out_buffer_wr_en_reg_1873);
    and_ln488_fu_1231_p2 <= (out_buffer_wr_en_reg_1873 and cmp92_i_fu_1126_p2);
    and_ln72_fu_530_p2 <= (xor_ln1027_reg_1701 and icmp_ln1035_reg_1707);
    and_ln89_fu_494_p2 <= (xor_ln1027_1_fu_466_p2 and icmp_ln1035_1_fu_472_p2);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);

    ap_block_pp0_assign_proc : process(ap_CS_fsm, ap_block_pp0_stage0_subdone)
    begin
                ap_block_pp0 <= ((ap_ST_fsm_pp0_stage0 = ap_CS_fsm) and (ap_const_boolean_1 = ap_block_pp0_stage0_subdone));
    end process;

        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter11, img_3_data68_empty_n, icmp_ln1027_reg_1655_pp0_iter2_reg, img_4_data69_full_n, ap_predicate_op294_write_state12)
    begin
                ap_block_pp0_stage0_01001 <= (((ap_predicate_op294_write_state12 = ap_const_boolean_1) and (img_4_data69_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1)) or ((icmp_ln1027_reg_1655_pp0_iter2_reg = ap_const_lv1_0) and (img_3_data68_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter11, img_3_data68_empty_n, icmp_ln1027_reg_1655_pp0_iter2_reg, img_4_data69_full_n, ap_predicate_op294_write_state12)
    begin
                ap_block_pp0_stage0_11001 <= (((ap_predicate_op294_write_state12 = ap_const_boolean_1) and (img_4_data69_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1)) or ((icmp_ln1027_reg_1655_pp0_iter2_reg = ap_const_lv1_0) and (img_3_data68_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter11, img_3_data68_empty_n, icmp_ln1027_reg_1655_pp0_iter2_reg, img_4_data69_full_n, ap_predicate_op294_write_state12)
    begin
                ap_block_pp0_stage0_subdone <= (((ap_predicate_op294_write_state12 = ap_const_boolean_1) and (img_4_data69_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1)) or ((icmp_ln1027_reg_1655_pp0_iter2_reg = ap_const_lv1_0) and (img_3_data68_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1)));
    end process;

        ap_block_state10_pp0_stage0_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state12_pp0_stage0_iter11_assign_proc : process(img_4_data69_full_n, ap_predicate_op294_write_state12)
    begin
                ap_block_state12_pp0_stage0_iter11 <= ((ap_predicate_op294_write_state12 = ap_const_boolean_1) and (img_4_data69_full_n = ap_const_logic_0));
    end process;

        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state4_pp0_stage0_iter3_assign_proc : process(img_3_data68_empty_n, icmp_ln1027_reg_1655_pp0_iter2_reg)
    begin
                ap_block_state4_pp0_stage0_iter3 <= ((icmp_ln1027_reg_1655_pp0_iter2_reg = ap_const_lv1_0) and (img_3_data68_empty_n = ap_const_logic_0));
    end process;

        ap_block_state5_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_1445_assign_proc : process(ap_enable_reg_pp0_iter10, icmp_ln1027_reg_1655_pp0_iter9_reg, DDR_wr_en_tmp_fu_1121_p2)
    begin
                ap_condition_1445 <= ((ap_const_lv1_1 = DDR_wr_en_tmp_fu_1121_p2) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (icmp_ln1027_reg_1655_pp0_iter9_reg = ap_const_lv1_0));
    end process;


    ap_condition_exit_pp0_iter0_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, icmp_ln1027_fu_333_p2)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln1027_fu_333_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_exit_pp0_iter10_stage0_assign_proc : process(ap_enable_reg_pp0_iter10, ap_block_pp0_stage0_subdone, icmp_ln1027_reg_1655_pp0_iter9_reg)
    begin
        if (((ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (icmp_ln1027_reg_1655_pp0_iter9_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
            ap_condition_exit_pp0_iter10_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter10_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_block_pp0_stage0_subdone, ap_done_reg, ap_loop_exit_ready_pp0_iter10_reg)
    begin
        if (((ap_loop_exit_ready_pp0_iter10_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;


    ap_enable_operation_195_assign_proc : process(icmp_ln1027_reg_1655_pp0_iter8_reg)
    begin
                ap_enable_operation_195 <= (icmp_ln1027_reg_1655_pp0_iter8_reg = ap_const_lv1_0);
    end process;


    ap_enable_operation_265_assign_proc : process(icmp_ln1027_reg_1655_pp0_iter9_reg)
    begin
                ap_enable_operation_265 <= (icmp_ln1027_reg_1655_pp0_iter9_reg = ap_const_lv1_0);
    end process;


    ap_enable_operation_289_assign_proc : process(ap_predicate_op289_store_state12)
    begin
                ap_enable_operation_289 <= (ap_predicate_op289_store_state12 = ap_const_boolean_1);
    end process;


    ap_enable_operation_293_assign_proc : process(DDR_wr_en_tmp_reg_1910)
    begin
                ap_enable_operation_293 <= (ap_const_lv1_1 = DDR_wr_en_tmp_reg_1910);
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start_int;

    ap_enable_state10_pp0_iter9_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter9)
    begin
                ap_enable_state10_pp0_iter9_stage0 <= ((ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_enable_state11_pp0_iter10_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter10)
    begin
                ap_enable_state11_pp0_iter10_stage0 <= ((ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_enable_state12_pp0_iter11_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter11)
    begin
                ap_enable_state12_pp0_iter11_stage0 <= ((ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_start_int = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11)
    begin
        if (((ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage0;

    ap_phi_mux_Yaxis_overlap_en_2_phi_fu_254_p4_assign_proc : process(ap_enable_reg_pp0_iter7, ap_block_pp0_stage0, Yaxis_overlap_en_2_reg_250, icmp_ln1027_reg_1655_pp0_iter6_reg, Yaxis_overlap_en_reg_1860)
    begin
        if (((ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (icmp_ln1027_reg_1655_pp0_iter6_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_phi_mux_Yaxis_overlap_en_2_phi_fu_254_p4 <= Yaxis_overlap_en_reg_1860;
        else 
            ap_phi_mux_Yaxis_overlap_en_2_phi_fu_254_p4 <= Yaxis_overlap_en_2_reg_250;
        end if; 
    end process;


    ap_predicate_op289_store_state12_assign_proc : process(DDR_wr_en_tmp_reg_1910, out_buffer_wr_en_reg_1873_pp0_iter10_reg)
    begin
                ap_predicate_op289_store_state12 <= ((ap_const_lv1_0 = DDR_wr_en_tmp_reg_1910) and (out_buffer_wr_en_reg_1873_pp0_iter10_reg = ap_const_lv1_1));
    end process;


    ap_predicate_op294_write_state12_assign_proc : process(DDR_wr_en_tmp_reg_1910, icmp_ln811_reg_1925)
    begin
                ap_predicate_op294_write_state12 <= ((icmp_ln811_reg_1925 = ap_const_lv1_1) and (ap_const_lv1_1 = DDR_wr_en_tmp_reg_1910));
    end process;


    ap_ready_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_col_index_1_load_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_loop_init, col_index_1_fu_160)
    begin
        if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_sig_allocacmp_col_index_1_load <= ap_const_lv11_0;
        else 
            ap_sig_allocacmp_col_index_1_load <= col_index_1_fu_160;
        end if; 
    end process;


    ap_sig_allocacmp_indvar_flatten_load_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_loop_init, indvar_flatten_fu_188)
    begin
        if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_sig_allocacmp_indvar_flatten_load <= ap_const_lv20_0;
        else 
            ap_sig_allocacmp_indvar_flatten_load <= indvar_flatten_fu_188;
        end if; 
    end process;

    buffer_data_temp_fu_1385_p3 <= 
        select_ln529_fu_1378_p3 when (Yaxis_overlap_en_2_reg_250_pp0_iter9_reg(0) = '1') else 
        ap_const_lv16_0;
    cmp152_fu_362_p2 <= "1" when (select_ln610_fu_354_p3 = ap_const_lv11_0) else "0";
    cmp92_i_fu_1126_p2 <= (p_Result_3_reg_1865 xor ap_const_lv1_1);
    cmp_i_i114_i12_fu_1043_p2 <= "1" when (row_index_V_fu_184 = ap_const_lv10_257) else "0";
    cmp_i_i114_i_mid1_fu_1037_p2 <= "1" when (add_ln840_fu_1031_p2 = ap_const_lv10_257) else "0";
    col_index_fu_368_p2 <= std_logic_vector(unsigned(select_ln610_fu_354_p3) + unsigned(ap_const_lv11_1));
    conv3_i_i243_cast_cast_fu_262_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(conv3_i_i243_cast),17));
    conv_i109_i_fu_971_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(write_col_index_V_3_fu_152),64));
    data_mux_out_V_1_fu_1136_p3 <= 
        ap_const_lv16_0 when (out_index_val_V_reg_1770_pp0_iter9_reg(0) = '1') else 
        procBlock_out_V_reg_1880;
    data_mux_out_V_3_fu_1164_p3 <= 
        PB_out_V_reg_1886 when (trunc_ln72_reg_1730_pp0_iter9_reg(0) = '1') else 
        data_mux_out_V_1_fu_1136_p3;
    data_mux_out_V_4_fu_1252_p3 <= 
        procBlock_out_V_reg_1880 when (out_index_val_V_reg_1770_pp0_iter9_reg(0) = '1') else 
        ap_const_lv16_0;
    data_mux_out_V_5_fu_1278_p3 <= 
        data_mux_out_V_4_fu_1252_p3 when (trunc_ln72_reg_1730_pp0_iter9_reg(0) = '1') else 
        PB_out_V_reg_1886;
    data_mux_out_overlap_V_1_fu_1142_p3 <= 
        ap_const_lv16_0 when (out_index_val_V_reg_1770_pp0_iter9_reg(0) = '1') else 
        procBlock_out_V_1_reg_1892;
    data_mux_out_overlap_V_3_fu_1170_p3 <= 
        PB_out_overlap_V_reg_1898 when (trunc_ln72_reg_1730_pp0_iter9_reg(0) = '1') else 
        data_mux_out_overlap_V_1_fu_1142_p3;
    data_mux_out_overlap_V_4_fu_1258_p3 <= 
        procBlock_out_V_1_reg_1892 when (out_index_val_V_reg_1770_pp0_iter9_reg(0) = '1') else 
        ap_const_lv16_0;
    data_mux_out_overlap_V_5_fu_1284_p3 <= 
        data_mux_out_overlap_V_4_fu_1258_p3 when (trunc_ln72_reg_1730_pp0_iter9_reg(0) = '1') else 
        PB_out_overlap_V_reg_1898;
    data_mux_out_status_V_2_fu_1176_p3 <= 
        p_Result_5_fu_1156_p3 when (trunc_ln72_reg_1730_pp0_iter9_reg(0) = '1') else 
        p_Result_4_fu_1148_p3;
    data_mux_out_status_V_5_fu_1290_p3 <= 
        p_Result_7_fu_1271_p3 when (trunc_ln72_reg_1730_pp0_iter9_reg(0) = '1') else 
        p_Result_6_fu_1264_p3;
    data_previous_V_1_fu_1183_p3 <= 
        ap_const_lv16_0 when (cmp152_reg_1670_pp0_iter9_reg(0) = '1') else 
        data_previous_V_fu_168;
    data_previous_V_2_fu_1297_p3 <= 
        ap_const_lv16_0 when (cmp152_reg_1670_pp0_iter9_reg(0) = '1') else 
        p_0_0_01086_1118_fu_176;
    data_previous_overlap_V_1_fu_1190_p3 <= 
        ap_const_lv16_0 when (cmp152_reg_1670_pp0_iter9_reg(0) = '1') else 
        data_previous_overlap_V_fu_172;
    data_previous_overlap_V_2_fu_1304_p3 <= 
        ap_const_lv16_0 when (cmp152_reg_1670_pp0_iter9_reg(0) = '1') else 
        p_0_0_01085_1120_fu_180;

    grp_fu_1485_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_1485_ce <= ap_const_logic_1;
        else 
            grp_fu_1485_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1485_p0 <= grp_fu_1485_p00(16 - 1 downto 0);
    grp_fu_1485_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln237_reg_1765),24));
    grp_fu_1485_p1 <= grp_fu_1485_p10(8 - 1 downto 0);
    grp_fu_1485_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(in_data_V_fu_733_p3),24));
    grp_fu_1485_p2 <= ap_const_lv24_80(8 - 1 downto 0);

    grp_fu_1494_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_1494_ce <= ap_const_logic_1;
        else 
            grp_fu_1494_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1494_p0 <= grp_fu_1494_p00(16 - 1 downto 0);
    grp_fu_1494_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(Wx_for_Nplus1_Procblock_reg_1760),24));
    grp_fu_1494_p1 <= grp_fu_1494_p10(8 - 1 downto 0);
    grp_fu_1494_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(img_3_data68_dout),24));

    grp_fu_1501_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_1501_ce <= ap_const_logic_1;
        else 
            grp_fu_1501_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1501_p0 <= zext_ln1494_1_fu_848_p1(16 - 1 downto 0);
    grp_fu_1501_p1 <= zext_ln1494_fu_844_p1(17 - 1 downto 0);
    grp_fu_1501_p2 <= ap_const_lv32_8000(16 - 1 downto 0);

    grp_fu_1510_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_1510_ce <= ap_const_logic_1;
        else 
            grp_fu_1510_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1510_p0 <= zext_ln1494_2_fu_861_p1(16 - 1 downto 0);
    grp_fu_1510_p1 <= zext_ln1494_fu_844_p1(17 - 1 downto 0);

    grp_fu_1517_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_1517_ce <= ap_const_logic_1;
        else 
            grp_fu_1517_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1517_p0 <= zext_ln1494_1_fu_848_p1(16 - 1 downto 0);
    grp_fu_1517_p1 <= zext_ln1494_3_fu_865_p1(16 - 1 downto 0);
    grp_fu_1517_p2 <= ap_const_lv32_8000(16 - 1 downto 0);

    grp_fu_1526_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_1526_ce <= ap_const_logic_1;
        else 
            grp_fu_1526_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1526_p0 <= zext_ln1494_2_fu_861_p1(16 - 1 downto 0);
    grp_fu_1526_p1 <= zext_ln1494_3_fu_865_p1(16 - 1 downto 0);
    icmp_ln1019_2_fu_623_p2 <= "1" when (ret_V_3_fu_617_p2 = zext_ln1495_fu_544_p1) else "0";
    icmp_ln1019_3_fu_659_p2 <= "1" when (add_ln1495_fu_548_p2 = zext_ln1019_fu_656_p1) else "0";
    icmp_ln1019_4_fu_689_p2 <= "1" when (tmp9_reg_1712 = output_buffer_index_start_V_1_fu_534_p3) else "0";
    icmp_ln1019_fu_611_p2 <= "1" when (ret_V_fu_605_p2 = ap_const_lv17_1) else "0";
    icmp_ln1023_1_fu_1311_p2 <= "1" when (data_mux_out_status_V_5_fu_1290_p3 = ap_const_lv2_0) else "0";
    icmp_ln1023_fu_1197_p2 <= "1" when (data_mux_out_status_V_2_fu_1176_p3 = ap_const_lv2_0) else "0";
    icmp_ln1027_1_fu_777_p2 <= "1" when (unsigned(out_div_4_cast8) > unsigned(p_Result_s_fu_773_p1)) else "0";
    icmp_ln1027_fu_333_p2 <= "1" when (ap_sig_allocacmp_indvar_flatten_load = ap_const_lv20_96000) else "0";
    icmp_ln1035_1_fu_472_p2 <= "1" when (unsigned(sub_value_V_1_fu_453_p2) > unsigned(ap_const_lv16_41)) else "0";
    icmp_ln1035_2_fu_638_p2 <= "1" when (signed(ret_V_4_fu_632_p2) > signed(ap_const_lv17_41)) else "0";
    icmp_ln1035_3_fu_665_p2 <= "1" when (unsigned(overlap_next_pixel_V_fu_651_p2) > unsigned(ap_const_lv32_41)) else "0";
    icmp_ln1035_4_fu_1092_p2 <= "1" when (unsigned(Yindex_output_prev_precision_error_V_fu_1071_p2) > unsigned(ap_const_lv17_41)) else "0";
    icmp_ln1035_5_fu_877_p2 <= "1" when (signed(ret_V_7_fu_872_p2) > signed(ap_const_lv17_41)) else "0";
    icmp_ln1035_fu_427_p2 <= "1" when (unsigned(sub_value_V_fu_408_p2) > unsigned(ap_const_lv16_41)) else "0";
    icmp_ln1039_1_fu_809_p2 <= "1" when (unsigned(Yindex_output_precision_error_V_fu_794_p2) < unsigned(ap_const_lv17_42)) else "0";
    icmp_ln1039_fu_898_p2 <= "1" when (unsigned(output_buffer_index_next_V_2_reg_1723_pp0_iter8_reg) < unsigned(ouput_index_write_counter_V_fu_156)) else "0";
    icmp_ln219_fu_755_p2 <= "1" when (select_ln610_reg_1665_pp0_iter4_reg = ap_const_lv11_3FF) else "0";
    icmp_ln237_fu_684_p2 <= "1" when (unsigned(index_fract_value_V_reg_1688) > unsigned(ap_const_lv16_8000)) else "0";
    icmp_ln530_fu_1087_p2 <= "0" when (tmp_2_reg_1826_pp0_iter9_reg = tmp_3_fu_1077_p4) else "1";
    icmp_ln694_fu_348_p2 <= "1" when (ap_sig_allocacmp_col_index_1_load = ap_const_lv11_400) else "0";
    icmp_ln811_fu_1403_p2 <= "1" when (signed(tmp_4_fu_1393_p4) < signed(ap_const_lv23_1)) else "0";

    img_3_data68_blk_n_assign_proc : process(ap_enable_reg_pp0_iter3, img_3_data68_empty_n, icmp_ln1027_reg_1655_pp0_iter2_reg, ap_block_pp0_stage0)
    begin
        if (((icmp_ln1027_reg_1655_pp0_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            img_3_data68_blk_n <= img_3_data68_empty_n;
        else 
            img_3_data68_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    img_3_data68_read_assign_proc : process(ap_enable_reg_pp0_iter3, icmp_ln1027_reg_1655_pp0_iter2_reg, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln1027_reg_1655_pp0_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            img_3_data68_read <= ap_const_logic_1;
        else 
            img_3_data68_read <= ap_const_logic_0;
        end if; 
    end process;


    img_4_data69_blk_n_assign_proc : process(ap_enable_reg_pp0_iter11, img_4_data69_full_n, ap_predicate_op294_write_state12, ap_block_pp0_stage0)
    begin
        if (((ap_predicate_op294_write_state12 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            img_4_data69_blk_n <= img_4_data69_full_n;
        else 
            img_4_data69_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    img_4_data69_din <= sum_rounding_V_fu_1469_p2(15 downto 8);

    img_4_data69_write_assign_proc : process(ap_enable_reg_pp0_iter11, ap_predicate_op294_write_state12, ap_block_pp0_stage0_11001)
    begin
        if (((ap_predicate_op294_write_state12 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            img_4_data69_write <= ap_const_logic_1;
        else 
            img_4_data69_write <= ap_const_logic_0;
        end if; 
    end process;

    in_data_V_fu_733_p3 <= 
        img_3_data68_dout when (inflag_TA_fu_725_p2(0) = '1') else 
        ap_const_lv8_0;
    index_fract_value_V_1_fu_449_p1 <= Xindex_output_next_V_1_fu_397_p3(16 - 1 downto 0);
    index_fract_value_V_fu_404_p1 <= p_Val2_2_fu_390_p3(16 - 1 downto 0);
    inflag_TA_fu_725_p2 <= (t2_fu_719_p2 or t1_reg_1740);
    int_bits_Xindex_out_V_fu_585_p4 <= ret_V_2_fu_580_p2(31 downto 16);
    int_bits_Xindex_out_previous_V_2_fu_569_p3 <= 
        ap_const_lv16_0 when (cmp152_reg_1670_pp0_iter1_reg(0) = '1') else 
        int_bits_Xindex_out_previous_V_fu_559_p4;
    int_bits_Xindex_out_previous_V_fu_559_p4 <= ret_V_1_fu_554_p2(31 downto 16);
    or_ln201_1_fu_1103_p2 <= (select_ln610_1_fu_1049_p3 or Yaxis_overlap_en_2_reg_250_pp0_iter9_reg);
    or_ln201_2_fu_1109_p2 <= (or_ln201_fu_1098_p2 or or_ln201_1_fu_1103_p2);
    or_ln201_fu_1098_p2 <= (icmp_ln530_fu_1087_p2 or icmp_ln1039_1_reg_1831_pp0_iter9_reg);
    ouput_buffer_V_address0 <= ouput_buffer_V_addr_reg_1904_pp0_iter10_reg;
    ouput_buffer_V_address1 <= conv_i109_i_fu_971_p1(9 - 1 downto 0);

    ouput_buffer_V_ce0_assign_proc : process(ap_enable_reg_pp0_iter11, DDR_wr_en_tmp_reg_1910, ap_block_pp0_stage0_11001, out_buffer_wr_en_reg_1873_pp0_iter10_reg)
    begin
        if ((((ap_const_lv1_1 = DDR_wr_en_tmp_reg_1910) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_const_lv1_0 = DDR_wr_en_tmp_reg_1910) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (out_buffer_wr_en_reg_1873_pp0_iter10_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            ouput_buffer_V_ce0 <= ap_const_logic_1;
        else 
            ouput_buffer_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    ouput_buffer_V_ce1_assign_proc : process(ap_enable_reg_pp0_iter9, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            ouput_buffer_V_ce1 <= ap_const_logic_1;
        else 
            ouput_buffer_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    ouput_buffer_V_d0_assign_proc : process(ap_enable_reg_pp0_iter11, DDR_wr_en_tmp_reg_1910, ap_block_pp0_stage0, out_buffer_wr_en_reg_1873_pp0_iter10_reg, temp_sum_V_reg_1914, buffer_data_temp_reg_1920)
    begin
        if (((ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then
            if ((ap_const_lv1_1 = DDR_wr_en_tmp_reg_1910)) then 
                ouput_buffer_V_d0 <= buffer_data_temp_reg_1920;
            elsif (((ap_const_lv1_0 = DDR_wr_en_tmp_reg_1910) and (out_buffer_wr_en_reg_1873_pp0_iter10_reg = ap_const_lv1_1))) then 
                ouput_buffer_V_d0 <= temp_sum_V_reg_1914;
            else 
                ouput_buffer_V_d0 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            ouput_buffer_V_d0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    ouput_buffer_V_we0_assign_proc : process(ap_enable_reg_pp0_iter11, DDR_wr_en_tmp_reg_1910, ap_block_pp0_stage0_11001, out_buffer_wr_en_reg_1873_pp0_iter10_reg)
    begin
        if ((((ap_const_lv1_1 = DDR_wr_en_tmp_reg_1910) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_const_lv1_0 = DDR_wr_en_tmp_reg_1910) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (out_buffer_wr_en_reg_1873_pp0_iter10_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            ouput_buffer_V_we0 <= ap_const_logic_1;
        else 
            ouput_buffer_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    ouput_index_write_counter_V_1_fu_914_p2 <= std_logic_vector(unsigned(ouput_index_write_counter_V_fu_156) + unsigned(ap_const_lv16_1));
    ouput_index_write_counter_V_2_fu_920_p3 <= 
        ouput_index_write_counter_V_1_fu_914_p2 when (xor_ln1039_fu_903_p2(0) = '1') else 
        ouput_index_write_counter_V_fu_156;
    ouput_index_write_counter_V_3_fu_928_p3 <= 
        ap_const_lv16_1 when (icmp_ln219_reg_1807_pp0_iter8_reg(0) = '1') else 
        ouput_index_write_counter_V_2_fu_920_p3;
    out_buffer_wr_en_fu_909_p2 <= (xor_ln1039_fu_903_p2 or icmp_ln219_reg_1807_pp0_iter8_reg);
    out_col_index_4_fu_1409_p2 <= std_logic_vector(unsigned(out_col_index_fu_192) + unsigned(ap_const_lv32_1));
    out_col_index_5_fu_1415_p3 <= 
        ap_const_lv32_0 when (icmp_ln219_reg_1807_pp0_iter9_reg(0) = '1') else 
        out_col_index_4_fu_1409_p2;
    out_div_4_cast15_cast_fu_266_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(out_div_4_cast15),32));
    out_index_val_V_fu_707_p1 <= output_buffer_index_start_V_1_fu_534_p3(1 - 1 downto 0);
    output_buffer_index_next_V_2_fu_500_p3 <= 
        output_buffer_index_next_V_fu_488_p2 when (and_ln89_fu_494_p2(0) = '1') else 
        tmp_s_fu_478_p4;
    output_buffer_index_next_V_fu_488_p2 <= std_logic_vector(unsigned(tmp_s_fu_478_p4) + unsigned(ap_const_lv16_FFFF));
    output_buffer_index_start_V_1_fu_534_p3 <= 
        output_buffer_index_start_V_reg_1718 when (and_ln72_fu_530_p2(0) = '1') else 
        tmp9_reg_1712;
    output_buffer_index_start_V_fu_443_p2 <= std_logic_vector(unsigned(tmp9_fu_433_p4) + unsigned(ap_const_lv16_FFFF));
    overlap_next_pixel_V_fu_651_p2 <= std_logic_vector(unsigned(r_V_fu_644_p3) - unsigned(p_Val2_2_reg_1681));
    p_Result_1_fu_787_p1 <= Yindex_output_V_4_reg_1801(16 - 1 downto 0);
    p_Result_2_fu_1063_p1 <= Yindex_output_prev_V_2_fu_148(16 - 1 downto 0);
    p_Result_3_fu_894_p1 <= write_col_index_V_3_fu_152(1 - 1 downto 0);
    p_Result_4_fu_1148_p3 <= (ap_const_lv1_0 & xor_ln1019_fu_1131_p2);
    p_Result_5_fu_1156_p3 <= (ap_const_lv1_1 & xor_ln1019_fu_1131_p2);
    p_Result_6_fu_1264_p3 <= (ap_const_lv1_1 & out_index_val_V_reg_1770_pp0_iter9_reg);
    p_Result_7_fu_1271_p3 <= (ap_const_lv1_0 & out_index_val_V_reg_1770_pp0_iter9_reg);
    p_Result_s_fu_773_p1 <= Yindex_output_V_3_fu_765_p3(16 - 1 downto 0);
    p_Val2_2_fu_390_p3 <= 
        ap_const_lv32_8000 when (cmp152_reg_1670(0) = '1') else 
        add_i425112_fu_164;
    r_V_1_fu_835_p4 <= grp_fu_1485_p3(23 downto 8);
    r_V_3_fu_852_p1 <= grp_fu_1494_p2;
    r_V_3_fu_852_p4 <= r_V_3_fu_852_p1(23 downto 8);
    r_V_fu_644_p3 <= (output_buffer_index_next_V_2_reg_1723 & ap_const_lv16_0);
    ret_V_1_fu_554_p2 <= std_logic_vector(unsigned(p_Val2_2_reg_1681) + unsigned(ap_const_lv32_FFFF7FBF));
    ret_V_2_fu_580_p2 <= std_logic_vector(unsigned(p_Val2_2_reg_1681) + unsigned(ap_const_lv32_FFFFFFBF));
    ret_V_3_fu_617_p2 <= std_logic_vector(unsigned(zext_ln186_fu_601_p1) + unsigned(ap_const_lv17_1FFFF));
    ret_V_4_fu_632_p2 <= std_logic_vector(unsigned(ap_const_lv17_8000) - unsigned(zext_ln1496_fu_629_p1));
    ret_V_7_fu_872_p2 <= std_logic_vector(unsigned(conv3_i_i243_cast_cast_reg_1642) - unsigned(zext_ln1496_1_fu_869_p1));
    ret_V_fu_605_p2 <= std_logic_vector(unsigned(zext_ln186_fu_601_p1) - unsigned(rhs_V_1_fu_576_p1));
    rhs_V_1_fu_576_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(int_bits_Xindex_out_previous_V_2_fu_569_p3),17));
    select_ln1027_fu_1056_p3 <= 
        add_ln840_fu_1031_p2 when (icmp_ln694_reg_1659_pp0_iter9_reg(0) = '1') else 
        row_index_V_fu_184;
    select_ln237_fu_700_p3 <= 
        out_div_3 when (icmp_ln237_fu_684_p2(0) = '1') else 
        Wx_V_fu_694_p3;
    select_ln488_1_fu_1244_p3 <= 
        ap_const_lv16_0 when (and_ln488_fu_1231_p2(0) = '1') else 
        update_fu_1223_p3;
    select_ln488_2_fu_1349_p3 <= 
        ap_const_lv16_0 when (and_ln488_1_fu_1345_p2(0) = '1') else 
        update_overlap_1_fu_1329_p3;
    select_ln488_3_fu_1357_p3 <= 
        ap_const_lv16_0 when (and_ln488_1_fu_1345_p2(0) = '1') else 
        update_1_fu_1337_p3;
    select_ln488_fu_1236_p3 <= 
        ap_const_lv16_0 when (and_ln488_fu_1231_p2(0) = '1') else 
        update_overlap_fu_1215_p3;
    select_ln529_fu_1378_p3 <= 
        update_overlap_1_fu_1329_p3 when (p_Result_3_reg_1865(0) = '1') else 
        update_overlap_fu_1215_p3;
    select_ln610_1_fu_1049_p3 <= 
        cmp_i_i114_i_mid1_fu_1037_p2 when (icmp_ln694_reg_1659_pp0_iter9_reg(0) = '1') else 
        cmp_i_i114_i12_fu_1043_p2;
    select_ln610_fu_354_p3 <= 
        ap_const_lv11_0 when (icmp_ln694_fu_348_p2(0) = '1') else 
        ap_sig_allocacmp_col_index_1_load;
    sub_ln186_fu_815_p2 <= std_logic_vector(unsigned(conv3_i_i243_cast_cast_reg_1642) - unsigned(zext_ln628_fu_790_p1));
    sub_value_V_1_fu_453_p2 <= std_logic_vector(unsigned(out_div_3) - unsigned(index_fract_value_V_1_fu_449_p1));
    sub_value_V_fu_408_p2 <= std_logic_vector(unsigned(out_div_3) - unsigned(index_fract_value_V_fu_404_p1));
    sum_rounding_V_fu_1469_p2 <= std_logic_vector(unsigned(temp_sum_V_reg_1914) + unsigned(ap_const_lv16_80));
    t1_fu_595_p2 <= "1" when (output_buffer_index_start_V_1_fu_534_p3 = int_bits_Xindex_out_V_fu_585_p4) else "0";
    t2_fu_719_p2 <= (and_ln132_fu_715_p2 and and_ln132_1_fu_711_p2);
    temp_sum_V_fu_1372_p2 <= std_logic_vector(unsigned(ouput_buffer_V_q1) + unsigned(DDR_write1_temp_V_1_fu_1365_p3));
    tmp9_fu_433_p4 <= p_Val2_2_fu_390_p3(31 downto 16);
    tmp_1_fu_458_p3 <= Xindex_output_next_V_1_fu_397_p3(15 downto 15);
    tmp_3_fu_1077_p4 <= Yindex_output_prev_V_2_fu_148(31 downto 16);
    tmp_4_fu_1393_p4 <= out_col_index_fu_192(31 downto 9);
    tmp_fu_413_p3 <= p_Val2_2_fu_390_p3(15 downto 15);
    tmp_s_fu_478_p4 <= Xindex_output_next_V_1_fu_397_p3(31 downto 16);
    trunc_ln72_fu_540_p1 <= output_buffer_index_start_V_1_fu_534_p3(1 - 1 downto 0);
    update_1_fu_1337_p3 <= 
        data_previous_V_2_fu_1297_p3 when (icmp_ln1023_1_fu_1311_p2(0) = '1') else 
        add_ln186_2_fu_1317_p2;
    update_fu_1223_p3 <= 
        data_previous_V_1_fu_1183_p3 when (icmp_ln1023_fu_1197_p2(0) = '1') else 
        add_ln186_fu_1203_p2;
    update_overlap_1_fu_1329_p3 <= 
        data_previous_overlap_V_2_fu_1304_p3 when (icmp_ln1023_1_fu_1311_p2(0) = '1') else 
        add_ln186_3_fu_1323_p2;
    update_overlap_fu_1215_p3 <= 
        data_previous_overlap_V_1_fu_1190_p3 when (icmp_ln1023_fu_1197_p2(0) = '1') else 
        add_ln186_1_fu_1209_p2;
    write_col_index_V_4_fu_985_p3 <= 
        write_col_index_V_fu_979_p2 when (out_buffer_wr_en_fu_909_p2(0) = '1') else 
        write_col_index_V_3_fu_152;
    write_col_index_V_5_fu_993_p3 <= 
        ap_const_lv16_0 when (icmp_ln219_reg_1807_pp0_iter8_reg(0) = '1') else 
        write_col_index_V_4_fu_985_p3;
    write_col_index_V_fu_979_p2 <= std_logic_vector(unsigned(write_col_index_V_3_fu_152) + unsigned(ap_const_lv16_1));
    xor_ln1019_fu_1131_p2 <= (out_index_val_V_reg_1770_pp0_iter9_reg xor ap_const_lv1_1);
    xor_ln1027_1_fu_466_p2 <= (tmp_1_fu_458_p3 xor ap_const_lv1_1);
    xor_ln1027_fu_421_p2 <= (tmp_fu_413_p3 xor ap_const_lv1_1);
    xor_ln1039_fu_903_p2 <= (icmp_ln1039_fu_898_p2 xor ap_const_lv1_1);
    zext_ln1019_fu_656_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(output_buffer_index_next_V_2_reg_1723),17));
    zext_ln1494_1_fu_848_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_1_fu_835_p4),32));
    zext_ln1494_2_fu_861_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_3_fu_852_p4),32));
    zext_ln1494_3_fu_865_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(Wy1_fu_827_p3),32));
    zext_ln1494_fu_844_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(Wy0_fu_820_p3),32));
    zext_ln1495_fu_544_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(output_buffer_index_start_V_1_fu_534_p3),17));
    zext_ln1496_1_fu_869_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_s_reg_1816),17));
    zext_ln1496_fu_629_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(index_fract_value_V_reg_1688),17));
    zext_ln186_fu_601_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(int_bits_Xindex_out_V_fu_585_p4),17));
    zext_ln628_1_fu_1067_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_2_fu_1063_p1),17));
    zext_ln628_fu_790_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_1_fu_787_p1),17));
end behav;
