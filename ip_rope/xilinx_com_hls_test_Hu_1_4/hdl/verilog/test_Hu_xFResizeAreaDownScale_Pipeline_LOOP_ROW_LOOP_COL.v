// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module test_Hu_xFResizeAreaDownScale_Pipeline_LOOP_ROW_LOOP_COL (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        img_3_data68_dout,
        img_3_data68_num_data_valid,
        img_3_data68_fifo_cap,
        img_3_data68_empty_n,
        img_3_data68_read,
        img_4_data69_din,
        img_4_data69_num_data_valid,
        img_4_data69_fifo_cap,
        img_4_data69_full_n,
        img_4_data69_write,
        out_div_4_cast15,
        out_div_4_cast8,
        conv3_i_i243_cast,
        ouput_buffer_V_address0,
        ouput_buffer_V_ce0,
        ouput_buffer_V_we0,
        ouput_buffer_V_d0,
        ouput_buffer_V_address1,
        ouput_buffer_V_ce1,
        ouput_buffer_V_q1,
        out_div_3
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [7:0] img_3_data68_dout;
input  [1:0] img_3_data68_num_data_valid;
input  [1:0] img_3_data68_fifo_cap;
input   img_3_data68_empty_n;
output   img_3_data68_read;
output  [7:0] img_4_data69_din;
input  [1:0] img_4_data69_num_data_valid;
input  [1:0] img_4_data69_fifo_cap;
input   img_4_data69_full_n;
output   img_4_data69_write;
input  [24:0] out_div_4_cast15;
input  [15:0] out_div_4_cast8;
input  [15:0] conv3_i_i243_cast;
output  [8:0] ouput_buffer_V_address0;
output   ouput_buffer_V_ce0;
output   ouput_buffer_V_we0;
output  [15:0] ouput_buffer_V_d0;
output  [8:0] ouput_buffer_V_address1;
output   ouput_buffer_V_ce1;
input  [15:0] ouput_buffer_V_q1;
input  [15:0] out_div_3;

reg ap_idle;
reg img_3_data68_read;
reg img_4_data69_write;
reg ouput_buffer_V_ce0;
reg ouput_buffer_V_we0;
reg[15:0] ouput_buffer_V_d0;
reg ouput_buffer_V_ce1;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
reg   [0:0] icmp_ln1027_reg_1655;
reg   [0:0] icmp_ln1027_reg_1655_pp0_iter2_reg;
reg    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
wire    ap_block_state8_pp0_stage0_iter7;
wire    ap_block_state9_pp0_stage0_iter8;
wire    ap_block_state10_pp0_stage0_iter9;
wire    ap_block_state11_pp0_stage0_iter10;
reg   [0:0] DDR_wr_en_tmp_reg_1910;
reg   [0:0] icmp_ln811_reg_1925;
reg    ap_predicate_op294_write_state12;
reg    ap_block_state12_pp0_stage0_iter11;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln1027_fu_333_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    img_3_data68_blk_n;
wire    ap_block_pp0_stage0;
reg    img_4_data69_blk_n;
reg   [0:0] Yaxis_overlap_en_2_reg_250;
reg   [0:0] Yaxis_overlap_en_2_reg_250_pp0_iter7_reg;
reg    ap_block_pp0_stage0_11001;
reg   [0:0] Yaxis_overlap_en_2_reg_250_pp0_iter8_reg;
reg   [0:0] Yaxis_overlap_en_2_reg_250_pp0_iter9_reg;
wire   [16:0] conv3_i_i243_cast_cast_fu_262_p1;
reg   [16:0] conv3_i_i243_cast_cast_reg_1642;
wire   [31:0] out_div_4_cast15_cast_fu_266_p1;
reg   [31:0] out_div_4_cast15_cast_reg_1649;
reg   [0:0] icmp_ln1027_reg_1655_pp0_iter1_reg;
reg   [0:0] icmp_ln1027_reg_1655_pp0_iter3_reg;
reg   [0:0] icmp_ln1027_reg_1655_pp0_iter4_reg;
reg   [0:0] icmp_ln1027_reg_1655_pp0_iter5_reg;
reg   [0:0] icmp_ln1027_reg_1655_pp0_iter6_reg;
reg   [0:0] icmp_ln1027_reg_1655_pp0_iter7_reg;
reg   [0:0] icmp_ln1027_reg_1655_pp0_iter8_reg;
reg   [0:0] icmp_ln1027_reg_1655_pp0_iter9_reg;
wire   [0:0] icmp_ln694_fu_348_p2;
reg   [0:0] icmp_ln694_reg_1659;
reg   [0:0] icmp_ln694_reg_1659_pp0_iter1_reg;
reg   [0:0] icmp_ln694_reg_1659_pp0_iter2_reg;
reg   [0:0] icmp_ln694_reg_1659_pp0_iter3_reg;
reg   [0:0] icmp_ln694_reg_1659_pp0_iter4_reg;
reg   [0:0] icmp_ln694_reg_1659_pp0_iter5_reg;
reg   [0:0] icmp_ln694_reg_1659_pp0_iter6_reg;
reg   [0:0] icmp_ln694_reg_1659_pp0_iter7_reg;
reg   [0:0] icmp_ln694_reg_1659_pp0_iter8_reg;
reg   [0:0] icmp_ln694_reg_1659_pp0_iter9_reg;
wire   [10:0] select_ln610_fu_354_p3;
reg   [10:0] select_ln610_reg_1665;
reg   [10:0] select_ln610_reg_1665_pp0_iter1_reg;
reg   [10:0] select_ln610_reg_1665_pp0_iter2_reg;
reg   [10:0] select_ln610_reg_1665_pp0_iter3_reg;
reg   [10:0] select_ln610_reg_1665_pp0_iter4_reg;
wire   [0:0] cmp152_fu_362_p2;
reg   [0:0] cmp152_reg_1670;
reg   [0:0] cmp152_reg_1670_pp0_iter1_reg;
reg   [0:0] cmp152_reg_1670_pp0_iter2_reg;
reg   [0:0] cmp152_reg_1670_pp0_iter3_reg;
reg   [0:0] cmp152_reg_1670_pp0_iter4_reg;
reg   [0:0] cmp152_reg_1670_pp0_iter5_reg;
reg   [0:0] cmp152_reg_1670_pp0_iter6_reg;
reg   [0:0] cmp152_reg_1670_pp0_iter7_reg;
reg   [0:0] cmp152_reg_1670_pp0_iter8_reg;
reg   [0:0] cmp152_reg_1670_pp0_iter9_reg;
wire   [31:0] p_Val2_2_fu_390_p3;
reg   [31:0] p_Val2_2_reg_1681;
wire   [15:0] index_fract_value_V_fu_404_p1;
reg   [15:0] index_fract_value_V_reg_1688;
wire   [15:0] sub_value_V_fu_408_p2;
reg   [15:0] sub_value_V_reg_1696;
wire   [0:0] xor_ln1027_fu_421_p2;
reg   [0:0] xor_ln1027_reg_1701;
reg   [0:0] xor_ln1027_reg_1701_pp0_iter2_reg;
wire   [0:0] icmp_ln1035_fu_427_p2;
reg   [0:0] icmp_ln1035_reg_1707;
wire   [15:0] tmp9_fu_433_p4;
reg   [15:0] tmp9_reg_1712;
wire   [15:0] output_buffer_index_start_V_fu_443_p2;
reg   [15:0] output_buffer_index_start_V_reg_1718;
wire   [15:0] output_buffer_index_next_V_2_fu_500_p3;
reg   [15:0] output_buffer_index_next_V_2_reg_1723;
reg   [15:0] output_buffer_index_next_V_2_reg_1723_pp0_iter2_reg;
reg   [15:0] output_buffer_index_next_V_2_reg_1723_pp0_iter3_reg;
reg   [15:0] output_buffer_index_next_V_2_reg_1723_pp0_iter4_reg;
reg   [15:0] output_buffer_index_next_V_2_reg_1723_pp0_iter5_reg;
reg   [15:0] output_buffer_index_next_V_2_reg_1723_pp0_iter6_reg;
reg   [15:0] output_buffer_index_next_V_2_reg_1723_pp0_iter7_reg;
reg   [15:0] output_buffer_index_next_V_2_reg_1723_pp0_iter8_reg;
wire   [0:0] trunc_ln72_fu_540_p1;
reg   [0:0] trunc_ln72_reg_1730;
reg   [0:0] trunc_ln72_reg_1730_pp0_iter3_reg;
reg   [0:0] trunc_ln72_reg_1730_pp0_iter4_reg;
reg   [0:0] trunc_ln72_reg_1730_pp0_iter5_reg;
reg   [0:0] trunc_ln72_reg_1730_pp0_iter6_reg;
reg   [0:0] trunc_ln72_reg_1730_pp0_iter7_reg;
reg   [0:0] trunc_ln72_reg_1730_pp0_iter8_reg;
reg   [0:0] trunc_ln72_reg_1730_pp0_iter9_reg;
wire   [0:0] t1_fu_595_p2;
reg   [0:0] t1_reg_1740;
wire   [0:0] icmp_ln1019_fu_611_p2;
reg   [0:0] icmp_ln1019_reg_1745;
wire   [0:0] icmp_ln1019_2_fu_623_p2;
reg   [0:0] icmp_ln1019_2_reg_1750;
wire   [0:0] icmp_ln1035_2_fu_638_p2;
reg   [0:0] icmp_ln1035_2_reg_1755;
wire   [15:0] Wx_for_Nplus1_Procblock_fu_677_p3;
reg   [15:0] Wx_for_Nplus1_Procblock_reg_1760;
wire   [15:0] select_ln237_fu_700_p3;
reg   [15:0] select_ln237_reg_1765;
wire   [0:0] out_index_val_V_fu_707_p1;
reg   [0:0] out_index_val_V_reg_1770;
reg   [0:0] out_index_val_V_reg_1770_pp0_iter3_reg;
reg   [0:0] out_index_val_V_reg_1770_pp0_iter4_reg;
reg   [0:0] out_index_val_V_reg_1770_pp0_iter5_reg;
reg   [0:0] out_index_val_V_reg_1770_pp0_iter6_reg;
reg   [0:0] out_index_val_V_reg_1770_pp0_iter7_reg;
reg   [0:0] out_index_val_V_reg_1770_pp0_iter8_reg;
reg   [0:0] out_index_val_V_reg_1770_pp0_iter9_reg;
reg   [31:0] Yindex_output_V_4_reg_1801;
wire   [0:0] icmp_ln219_fu_755_p2;
reg   [0:0] icmp_ln219_reg_1807;
reg   [0:0] icmp_ln219_reg_1807_pp0_iter6_reg;
reg   [0:0] icmp_ln219_reg_1807_pp0_iter7_reg;
reg   [0:0] icmp_ln219_reg_1807_pp0_iter8_reg;
reg   [0:0] icmp_ln219_reg_1807_pp0_iter9_reg;
wire   [15:0] p_Result_s_fu_773_p1;
reg   [15:0] p_Result_s_reg_1816;
wire   [0:0] icmp_ln1027_1_fu_777_p2;
reg   [0:0] icmp_ln1027_1_reg_1821;
reg   [15:0] tmp_2_reg_1826;
reg   [15:0] tmp_2_reg_1826_pp0_iter7_reg;
reg   [15:0] tmp_2_reg_1826_pp0_iter8_reg;
reg   [15:0] tmp_2_reg_1826_pp0_iter9_reg;
wire   [0:0] icmp_ln1039_1_fu_809_p2;
reg   [0:0] icmp_ln1039_1_reg_1831;
reg   [0:0] icmp_ln1039_1_reg_1831_pp0_iter7_reg;
reg   [0:0] icmp_ln1039_1_reg_1831_pp0_iter8_reg;
reg   [0:0] icmp_ln1039_1_reg_1831_pp0_iter9_reg;
wire   [31:0] zext_ln1494_fu_844_p1;
wire   [31:0] zext_ln1494_1_fu_848_p1;
wire   [31:0] zext_ln1494_2_fu_861_p1;
wire   [31:0] zext_ln1494_3_fu_865_p1;
wire   [0:0] Yaxis_overlap_en_fu_883_p2;
reg   [0:0] Yaxis_overlap_en_reg_1860;
wire   [0:0] p_Result_3_fu_894_p1;
reg   [0:0] p_Result_3_reg_1865;
wire   [0:0] out_buffer_wr_en_fu_909_p2;
reg   [0:0] out_buffer_wr_en_reg_1873;
reg   [0:0] out_buffer_wr_en_reg_1873_pp0_iter10_reg;
reg   [15:0] procBlock_out_V_reg_1880;
reg   [15:0] PB_out_V_reg_1886;
reg   [15:0] procBlock_out_V_1_reg_1892;
reg   [15:0] PB_out_overlap_V_reg_1898;
reg   [8:0] ouput_buffer_V_addr_reg_1904;
reg   [8:0] ouput_buffer_V_addr_reg_1904_pp0_iter10_reg;
wire   [0:0] DDR_wr_en_tmp_fu_1121_p2;
wire   [15:0] temp_sum_V_fu_1372_p2;
reg   [15:0] temp_sum_V_reg_1914;
wire   [15:0] buffer_data_temp_fu_1385_p3;
reg   [15:0] buffer_data_temp_reg_1920;
wire   [0:0] icmp_ln811_fu_1403_p2;
reg    ap_condition_exit_pp0_iter10_stage0;
reg   [0:0] ap_phi_mux_Yaxis_overlap_en_2_phi_fu_254_p4;
wire    ap_loop_init;
wire   [63:0] conv_i109_i_fu_971_p1;
reg   [31:0] Xindex_output_next_V_fu_140;
wire   [31:0] add_ln694_1_fu_514_p2;
reg   [31:0] Yindex_output_V_1_fu_144;
wire   [31:0] Yindex_output_V_3_fu_765_p3;
reg   [31:0] Yindex_output_prev_V_2_fu_148;
wire   [31:0] Yindex_output_prev_V_4_fu_1432_p3;
reg   [15:0] write_col_index_V_3_fu_152;
wire   [15:0] write_col_index_V_5_fu_993_p3;
reg   [15:0] ouput_index_write_counter_V_fu_156;
wire   [15:0] ouput_index_write_counter_V_3_fu_928_p3;
reg   [10:0] col_index_1_fu_160;
wire   [10:0] col_index_fu_368_p2;
reg   [10:0] ap_sig_allocacmp_col_index_1_load;
reg   [31:0] add_i425112_fu_164;
wire   [31:0] add_ln694_fu_508_p2;
reg   [15:0] data_previous_V_fu_168;
wire   [15:0] select_ln488_1_fu_1244_p3;
reg   [15:0] data_previous_overlap_V_fu_172;
wire   [15:0] select_ln488_fu_1236_p3;
reg   [15:0] p_0_0_01086_1118_fu_176;
wire   [15:0] select_ln488_3_fu_1357_p3;
reg   [15:0] p_0_0_01085_1120_fu_180;
wire   [15:0] select_ln488_2_fu_1349_p3;
reg   [9:0] row_index_V_fu_184;
wire   [9:0] select_ln1027_fu_1056_p3;
reg   [19:0] indvar_flatten_fu_188;
wire   [19:0] add_ln1027_fu_339_p2;
reg   [19:0] ap_sig_allocacmp_indvar_flatten_load;
reg   [31:0] out_col_index_fu_192;
wire   [31:0] out_col_index_5_fu_1415_p3;
reg    ap_block_pp0_stage0_01001;
wire   [0:0] tmp_fu_413_p3;
wire   [31:0] Xindex_output_next_V_1_fu_397_p3;
wire   [15:0] index_fract_value_V_1_fu_449_p1;
wire   [0:0] tmp_1_fu_458_p3;
wire   [15:0] sub_value_V_1_fu_453_p2;
wire   [15:0] tmp_s_fu_478_p4;
wire   [0:0] icmp_ln1035_1_fu_472_p2;
wire   [0:0] xor_ln1027_1_fu_466_p2;
wire   [0:0] and_ln89_fu_494_p2;
wire   [15:0] output_buffer_index_next_V_fu_488_p2;
wire   [0:0] and_ln72_fu_530_p2;
wire   [15:0] output_buffer_index_start_V_1_fu_534_p3;
wire   [16:0] zext_ln1495_fu_544_p1;
wire   [31:0] ret_V_1_fu_554_p2;
wire   [15:0] int_bits_Xindex_out_previous_V_fu_559_p4;
wire   [15:0] int_bits_Xindex_out_previous_V_2_fu_569_p3;
wire   [31:0] ret_V_2_fu_580_p2;
wire   [15:0] int_bits_Xindex_out_V_fu_585_p4;
wire   [16:0] zext_ln186_fu_601_p1;
wire   [16:0] rhs_V_1_fu_576_p1;
wire   [16:0] ret_V_fu_605_p2;
wire   [16:0] ret_V_3_fu_617_p2;
wire   [16:0] zext_ln1496_fu_629_p1;
wire   [16:0] ret_V_4_fu_632_p2;
wire   [31:0] r_V_fu_644_p3;
wire   [16:0] add_ln1495_fu_548_p2;
wire   [16:0] zext_ln1019_fu_656_p1;
wire   [31:0] overlap_next_pixel_V_fu_651_p2;
wire   [0:0] icmp_ln1019_3_fu_659_p2;
wire   [0:0] icmp_ln1035_3_fu_665_p2;
wire   [0:0] and_ln166_fu_671_p2;
wire   [0:0] icmp_ln1019_4_fu_689_p2;
wire   [0:0] icmp_ln237_fu_684_p2;
wire   [15:0] Wx_V_fu_694_p3;
wire   [0:0] and_ln132_fu_715_p2;
wire   [0:0] and_ln132_1_fu_711_p2;
wire   [0:0] t2_fu_719_p2;
wire   [0:0] inflag_TA_fu_725_p2;
wire   [7:0] in_data_V_fu_733_p3;
wire   [31:0] Yindex_output_V_fu_760_p2;
wire   [15:0] p_Result_1_fu_787_p1;
wire   [16:0] zext_ln628_fu_790_p1;
wire   [16:0] Yindex_output_precision_error_V_fu_794_p2;
wire   [16:0] sub_ln186_fu_815_p2;
wire   [23:0] grp_fu_1485_p3;
wire   [16:0] Wy0_fu_820_p3;
wire   [15:0] r_V_1_fu_835_p4;
wire   [23:0] r_V_3_fu_852_p1;
wire  signed [23:0] grp_fu_1494_p2;
wire   [15:0] r_V_3_fu_852_p4;
wire   [15:0] Wy1_fu_827_p3;
wire   [16:0] zext_ln1496_1_fu_869_p1;
wire   [16:0] ret_V_7_fu_872_p2;
wire   [0:0] icmp_ln1035_5_fu_877_p2;
wire   [0:0] icmp_ln1039_fu_898_p2;
wire   [0:0] xor_ln1039_fu_903_p2;
wire   [15:0] ouput_index_write_counter_V_1_fu_914_p2;
wire   [15:0] ouput_index_write_counter_V_2_fu_920_p3;
wire   [31:0] grp_fu_1501_p3;
wire   [31:0] PB_out_V_fu_944_p1;
wire  signed [31:0] grp_fu_1510_p2;
wire   [31:0] grp_fu_1517_p3;
wire   [31:0] PB_out_overlap_V_fu_962_p1;
wire  signed [31:0] grp_fu_1526_p2;
wire   [15:0] write_col_index_V_fu_979_p2;
wire   [15:0] write_col_index_V_4_fu_985_p3;
wire   [9:0] add_ln840_fu_1031_p2;
wire   [0:0] cmp_i_i114_i_mid1_fu_1037_p2;
wire   [0:0] cmp_i_i114_i12_fu_1043_p2;
wire   [15:0] p_Result_2_fu_1063_p1;
wire   [16:0] zext_ln628_1_fu_1067_p1;
wire   [15:0] tmp_3_fu_1077_p4;
wire   [16:0] Yindex_output_prev_precision_error_V_fu_1071_p2;
wire   [0:0] icmp_ln530_fu_1087_p2;
wire   [0:0] select_ln610_1_fu_1049_p3;
wire   [0:0] or_ln201_1_fu_1103_p2;
wire   [0:0] or_ln201_fu_1098_p2;
wire   [0:0] icmp_ln1035_4_fu_1092_p2;
wire   [0:0] or_ln201_2_fu_1109_p2;
wire   [0:0] and_ln201_fu_1115_p2;
wire   [0:0] xor_ln1019_fu_1131_p2;
wire   [15:0] data_mux_out_V_1_fu_1136_p3;
wire   [15:0] data_mux_out_overlap_V_1_fu_1142_p3;
wire   [1:0] p_Result_5_fu_1156_p3;
wire   [1:0] p_Result_4_fu_1148_p3;
wire   [1:0] data_mux_out_status_V_2_fu_1176_p3;
wire   [15:0] data_mux_out_V_3_fu_1164_p3;
wire   [15:0] data_previous_V_1_fu_1183_p3;
wire   [15:0] data_mux_out_overlap_V_3_fu_1170_p3;
wire   [15:0] data_previous_overlap_V_1_fu_1190_p3;
wire   [0:0] icmp_ln1023_fu_1197_p2;
wire   [15:0] add_ln186_1_fu_1209_p2;
wire   [15:0] add_ln186_fu_1203_p2;
wire   [0:0] cmp92_i_fu_1126_p2;
wire   [0:0] and_ln488_fu_1231_p2;
wire   [15:0] update_overlap_fu_1215_p3;
wire   [15:0] update_fu_1223_p3;
wire   [15:0] data_mux_out_V_4_fu_1252_p3;
wire   [15:0] data_mux_out_overlap_V_4_fu_1258_p3;
wire   [1:0] p_Result_7_fu_1271_p3;
wire   [1:0] p_Result_6_fu_1264_p3;
wire   [1:0] data_mux_out_status_V_5_fu_1290_p3;
wire   [15:0] data_mux_out_V_5_fu_1278_p3;
wire   [15:0] data_previous_V_2_fu_1297_p3;
wire   [15:0] data_mux_out_overlap_V_5_fu_1284_p3;
wire   [15:0] data_previous_overlap_V_2_fu_1304_p3;
wire   [0:0] icmp_ln1023_1_fu_1311_p2;
wire   [15:0] add_ln186_3_fu_1323_p2;
wire   [15:0] add_ln186_2_fu_1317_p2;
wire   [0:0] and_ln488_1_fu_1345_p2;
wire   [15:0] update_overlap_1_fu_1329_p3;
wire   [15:0] update_1_fu_1337_p3;
wire   [15:0] DDR_write1_temp_V_1_fu_1365_p3;
wire   [15:0] select_ln529_fu_1378_p3;
wire   [22:0] tmp_4_fu_1393_p4;
wire   [31:0] out_col_index_4_fu_1409_p2;
wire   [31:0] Yindex_output_prev_V_fu_1427_p2;
wire   [15:0] sum_rounding_V_fu_1469_p2;
wire   [15:0] grp_fu_1485_p0;
wire   [7:0] grp_fu_1485_p1;
wire   [7:0] grp_fu_1485_p2;
wire   [15:0] grp_fu_1494_p0;
wire   [7:0] grp_fu_1494_p1;
wire   [15:0] grp_fu_1501_p0;
wire   [16:0] grp_fu_1501_p1;
wire   [15:0] grp_fu_1501_p2;
wire   [15:0] grp_fu_1510_p0;
wire   [16:0] grp_fu_1510_p1;
wire   [15:0] grp_fu_1517_p0;
wire   [15:0] grp_fu_1517_p1;
wire   [15:0] grp_fu_1517_p2;
wire   [15:0] grp_fu_1526_p0;
wire   [15:0] grp_fu_1526_p1;
reg    grp_fu_1485_ce;
reg    grp_fu_1494_ce;
reg    grp_fu_1501_ce;
reg    grp_fu_1510_ce;
reg    grp_fu_1517_ce;
reg    grp_fu_1526_ce;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg    ap_loop_exit_ready_pp0_iter9_reg;
reg    ap_loop_exit_ready_pp0_iter10_reg;
reg   [0:0] ap_NS_fsm;
reg    ap_block_pp0;
reg    ap_enable_operation_195;
reg    ap_enable_state10_pp0_iter9_stage0;
reg    ap_enable_operation_265;
reg    ap_enable_state11_pp0_iter10_stage0;
reg    ap_predicate_op289_store_state12;
reg    ap_enable_operation_289;
reg    ap_enable_state12_pp0_iter11_stage0;
reg    ap_enable_operation_293;
wire    ap_enable_pp0;
wire    ap_start_int;
wire   [23:0] grp_fu_1485_p00;
wire   [23:0] grp_fu_1485_p10;
wire   [23:0] grp_fu_1494_p00;
wire   [23:0] grp_fu_1494_p10;
reg    ap_condition_1445;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_done_reg = 1'b0;
end

test_Hu_mac_muladd_16ns_8ns_8ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .dout_WIDTH( 24 ))
mac_muladd_16ns_8ns_8ns_24_4_1_U125(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1485_p0),
    .din1(grp_fu_1485_p1),
    .din2(grp_fu_1485_p2),
    .ce(grp_fu_1485_ce),
    .dout(grp_fu_1485_p3)
);

test_Hu_mul_mul_16ns_8ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 24 ))
mul_mul_16ns_8ns_24_4_1_U126(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1494_p0),
    .din1(grp_fu_1494_p1),
    .ce(grp_fu_1494_ce),
    .dout(grp_fu_1494_p2)
);

test_Hu_mac_muladd_16ns_17ns_16ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 17 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
mac_muladd_16ns_17ns_16ns_32_4_1_U127(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1501_p0),
    .din1(grp_fu_1501_p1),
    .din2(grp_fu_1501_p2),
    .ce(grp_fu_1501_ce),
    .dout(grp_fu_1501_p3)
);

test_Hu_mul_mul_16ns_17ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 17 ),
    .dout_WIDTH( 32 ))
mul_mul_16ns_17ns_32_4_1_U128(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1510_p0),
    .din1(grp_fu_1510_p1),
    .ce(grp_fu_1510_ce),
    .dout(grp_fu_1510_p2)
);

test_Hu_mac_muladd_16ns_16ns_16ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
mac_muladd_16ns_16ns_16ns_32_4_1_U129(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1517_p0),
    .din1(grp_fu_1517_p1),
    .din2(grp_fu_1517_p2),
    .ce(grp_fu_1517_ce),
    .dout(grp_fu_1517_p3)
);

test_Hu_mul_mul_16ns_16ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
mul_mul_16ns_16ns_32_4_1_U130(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1526_p0),
    .din1(grp_fu_1526_p1),
    .ce(grp_fu_1526_ce),
    .dout(grp_fu_1526_p2)
);

test_Hu_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter10_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter10_stage0)) begin
            ap_enable_reg_pp0_iter11 <= 1'b0;
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b1) & (icmp_ln1027_reg_1655_pp0_iter6_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        Yaxis_overlap_en_2_reg_250 <= Yaxis_overlap_en_reg_1860;
    end else if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        Yaxis_overlap_en_2_reg_250 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            Yindex_output_V_1_fu_144 <= out_div_4_cast15_cast_fu_266_p1;
        end else if (((ap_enable_reg_pp0_iter5 == 1'b1) & (icmp_ln1027_reg_1655_pp0_iter4_reg == 1'd0))) begin
            Yindex_output_V_1_fu_144 <= Yindex_output_V_3_fu_765_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            Yindex_output_prev_V_2_fu_148 <= 32'd0;
        end else if (((ap_enable_reg_pp0_iter10 == 1'b1) & (icmp_ln1027_reg_1655_pp0_iter9_reg == 1'd0))) begin
            Yindex_output_prev_V_2_fu_148 <= Yindex_output_prev_V_4_fu_1432_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln1027_fu_333_p2 == 1'd0))) begin
            col_index_1_fu_160 <= col_index_fu_368_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            col_index_1_fu_160 <= 11'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            data_previous_V_fu_168 <= 16'd0;
        end else if (((ap_enable_reg_pp0_iter10 == 1'b1) & (icmp_ln1027_reg_1655_pp0_iter9_reg == 1'd0))) begin
            data_previous_V_fu_168 <= select_ln488_1_fu_1244_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            data_previous_overlap_V_fu_172 <= 16'd0;
        end else if (((ap_enable_reg_pp0_iter10 == 1'b1) & (icmp_ln1027_reg_1655_pp0_iter9_reg == 1'd0))) begin
            data_previous_overlap_V_fu_172 <= select_ln488_fu_1236_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln1027_fu_333_p2 == 1'd0))) begin
            indvar_flatten_fu_188 <= add_ln1027_fu_339_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten_fu_188 <= 20'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ouput_index_write_counter_V_fu_156 <= 16'd1;
        end else if (((ap_enable_reg_pp0_iter9 == 1'b1) & (icmp_ln1027_reg_1655_pp0_iter8_reg == 1'd0))) begin
            ouput_index_write_counter_V_fu_156 <= ouput_index_write_counter_V_3_fu_928_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            out_col_index_fu_192 <= 32'd0;
        end else if ((1'b1 == ap_condition_1445)) begin
            out_col_index_fu_192 <= out_col_index_5_fu_1415_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            p_0_0_01085_1120_fu_180 <= 16'd0;
        end else if (((ap_enable_reg_pp0_iter10 == 1'b1) & (icmp_ln1027_reg_1655_pp0_iter9_reg == 1'd0))) begin
            p_0_0_01085_1120_fu_180 <= select_ln488_2_fu_1349_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            p_0_0_01086_1118_fu_176 <= 16'd0;
        end else if (((ap_enable_reg_pp0_iter10 == 1'b1) & (icmp_ln1027_reg_1655_pp0_iter9_reg == 1'd0))) begin
            p_0_0_01086_1118_fu_176 <= select_ln488_3_fu_1357_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            row_index_V_fu_184 <= 10'd0;
        end else if (((ap_enable_reg_pp0_iter10 == 1'b1) & (icmp_ln1027_reg_1655_pp0_iter9_reg == 1'd0))) begin
            row_index_V_fu_184 <= select_ln1027_fu_1056_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            write_col_index_V_3_fu_152 <= 16'd0;
        end else if (((ap_enable_reg_pp0_iter9 == 1'b1) & (icmp_ln1027_reg_1655_pp0_iter8_reg == 1'd0))) begin
            write_col_index_V_3_fu_152 <= write_col_index_V_5_fu_993_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1027_reg_1655_pp0_iter9_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        DDR_wr_en_tmp_reg_1910 <= DDR_wr_en_tmp_fu_1121_p2;
        temp_sum_V_reg_1914 <= temp_sum_V_fu_1372_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1027_reg_1655_pp0_iter8_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        PB_out_V_reg_1886 <= {{PB_out_V_fu_944_p1[31:16]}};
        PB_out_overlap_V_reg_1898 <= {{PB_out_overlap_V_fu_962_p1[31:16]}};
        ouput_buffer_V_addr_reg_1904 <= conv_i109_i_fu_971_p1;
        out_buffer_wr_en_reg_1873 <= out_buffer_wr_en_fu_909_p2;
        p_Result_3_reg_1865 <= p_Result_3_fu_894_p1;
        procBlock_out_V_1_reg_1892 <= {{grp_fu_1517_p3[31:16]}};
        procBlock_out_V_reg_1880 <= {{grp_fu_1501_p3[31:16]}};
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1027_reg_1655_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        Wx_for_Nplus1_Procblock_reg_1760 <= Wx_for_Nplus1_Procblock_fu_677_p3;
        icmp_ln1019_2_reg_1750 <= icmp_ln1019_2_fu_623_p2;
        icmp_ln1019_reg_1745 <= icmp_ln1019_fu_611_p2;
        icmp_ln1035_2_reg_1755 <= icmp_ln1035_2_fu_638_p2;
        out_index_val_V_reg_1770 <= out_index_val_V_fu_707_p1;
        select_ln237_reg_1765 <= select_ln237_fu_700_p3;
        t1_reg_1740 <= t1_fu_595_p2;
        trunc_ln72_reg_1730 <= trunc_ln72_fu_540_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1027_reg_1655 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        Xindex_output_next_V_fu_140 <= add_ln694_1_fu_514_p2;
        add_i425112_fu_164 <= add_ln694_fu_508_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        Yaxis_overlap_en_2_reg_250_pp0_iter7_reg <= Yaxis_overlap_en_2_reg_250;
        Yaxis_overlap_en_2_reg_250_pp0_iter8_reg <= Yaxis_overlap_en_2_reg_250_pp0_iter7_reg;
        Yaxis_overlap_en_2_reg_250_pp0_iter9_reg <= Yaxis_overlap_en_2_reg_250_pp0_iter8_reg;
        Yindex_output_V_4_reg_1801 <= Yindex_output_V_1_fu_144;
        ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
        ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
        cmp152_reg_1670_pp0_iter2_reg <= cmp152_reg_1670_pp0_iter1_reg;
        cmp152_reg_1670_pp0_iter3_reg <= cmp152_reg_1670_pp0_iter2_reg;
        cmp152_reg_1670_pp0_iter4_reg <= cmp152_reg_1670_pp0_iter3_reg;
        cmp152_reg_1670_pp0_iter5_reg <= cmp152_reg_1670_pp0_iter4_reg;
        cmp152_reg_1670_pp0_iter6_reg <= cmp152_reg_1670_pp0_iter5_reg;
        cmp152_reg_1670_pp0_iter7_reg <= cmp152_reg_1670_pp0_iter6_reg;
        cmp152_reg_1670_pp0_iter8_reg <= cmp152_reg_1670_pp0_iter7_reg;
        cmp152_reg_1670_pp0_iter9_reg <= cmp152_reg_1670_pp0_iter8_reg;
        icmp_ln1027_reg_1655_pp0_iter2_reg <= icmp_ln1027_reg_1655_pp0_iter1_reg;
        icmp_ln1027_reg_1655_pp0_iter3_reg <= icmp_ln1027_reg_1655_pp0_iter2_reg;
        icmp_ln1027_reg_1655_pp0_iter4_reg <= icmp_ln1027_reg_1655_pp0_iter3_reg;
        icmp_ln1027_reg_1655_pp0_iter5_reg <= icmp_ln1027_reg_1655_pp0_iter4_reg;
        icmp_ln1027_reg_1655_pp0_iter6_reg <= icmp_ln1027_reg_1655_pp0_iter5_reg;
        icmp_ln1027_reg_1655_pp0_iter7_reg <= icmp_ln1027_reg_1655_pp0_iter6_reg;
        icmp_ln1027_reg_1655_pp0_iter8_reg <= icmp_ln1027_reg_1655_pp0_iter7_reg;
        icmp_ln1027_reg_1655_pp0_iter9_reg <= icmp_ln1027_reg_1655_pp0_iter8_reg;
        icmp_ln1039_1_reg_1831_pp0_iter7_reg <= icmp_ln1039_1_reg_1831;
        icmp_ln1039_1_reg_1831_pp0_iter8_reg <= icmp_ln1039_1_reg_1831_pp0_iter7_reg;
        icmp_ln1039_1_reg_1831_pp0_iter9_reg <= icmp_ln1039_1_reg_1831_pp0_iter8_reg;
        icmp_ln219_reg_1807_pp0_iter6_reg <= icmp_ln219_reg_1807;
        icmp_ln219_reg_1807_pp0_iter7_reg <= icmp_ln219_reg_1807_pp0_iter6_reg;
        icmp_ln219_reg_1807_pp0_iter8_reg <= icmp_ln219_reg_1807_pp0_iter7_reg;
        icmp_ln219_reg_1807_pp0_iter9_reg <= icmp_ln219_reg_1807_pp0_iter8_reg;
        icmp_ln694_reg_1659_pp0_iter2_reg <= icmp_ln694_reg_1659_pp0_iter1_reg;
        icmp_ln694_reg_1659_pp0_iter3_reg <= icmp_ln694_reg_1659_pp0_iter2_reg;
        icmp_ln694_reg_1659_pp0_iter4_reg <= icmp_ln694_reg_1659_pp0_iter3_reg;
        icmp_ln694_reg_1659_pp0_iter5_reg <= icmp_ln694_reg_1659_pp0_iter4_reg;
        icmp_ln694_reg_1659_pp0_iter6_reg <= icmp_ln694_reg_1659_pp0_iter5_reg;
        icmp_ln694_reg_1659_pp0_iter7_reg <= icmp_ln694_reg_1659_pp0_iter6_reg;
        icmp_ln694_reg_1659_pp0_iter8_reg <= icmp_ln694_reg_1659_pp0_iter7_reg;
        icmp_ln694_reg_1659_pp0_iter9_reg <= icmp_ln694_reg_1659_pp0_iter8_reg;
        ouput_buffer_V_addr_reg_1904_pp0_iter10_reg <= ouput_buffer_V_addr_reg_1904;
        out_buffer_wr_en_reg_1873_pp0_iter10_reg <= out_buffer_wr_en_reg_1873;
        out_index_val_V_reg_1770_pp0_iter3_reg <= out_index_val_V_reg_1770;
        out_index_val_V_reg_1770_pp0_iter4_reg <= out_index_val_V_reg_1770_pp0_iter3_reg;
        out_index_val_V_reg_1770_pp0_iter5_reg <= out_index_val_V_reg_1770_pp0_iter4_reg;
        out_index_val_V_reg_1770_pp0_iter6_reg <= out_index_val_V_reg_1770_pp0_iter5_reg;
        out_index_val_V_reg_1770_pp0_iter7_reg <= out_index_val_V_reg_1770_pp0_iter6_reg;
        out_index_val_V_reg_1770_pp0_iter8_reg <= out_index_val_V_reg_1770_pp0_iter7_reg;
        out_index_val_V_reg_1770_pp0_iter9_reg <= out_index_val_V_reg_1770_pp0_iter8_reg;
        output_buffer_index_next_V_2_reg_1723_pp0_iter2_reg <= output_buffer_index_next_V_2_reg_1723;
        output_buffer_index_next_V_2_reg_1723_pp0_iter3_reg <= output_buffer_index_next_V_2_reg_1723_pp0_iter2_reg;
        output_buffer_index_next_V_2_reg_1723_pp0_iter4_reg <= output_buffer_index_next_V_2_reg_1723_pp0_iter3_reg;
        output_buffer_index_next_V_2_reg_1723_pp0_iter5_reg <= output_buffer_index_next_V_2_reg_1723_pp0_iter4_reg;
        output_buffer_index_next_V_2_reg_1723_pp0_iter6_reg <= output_buffer_index_next_V_2_reg_1723_pp0_iter5_reg;
        output_buffer_index_next_V_2_reg_1723_pp0_iter7_reg <= output_buffer_index_next_V_2_reg_1723_pp0_iter6_reg;
        output_buffer_index_next_V_2_reg_1723_pp0_iter8_reg <= output_buffer_index_next_V_2_reg_1723_pp0_iter7_reg;
        select_ln610_reg_1665_pp0_iter2_reg <= select_ln610_reg_1665_pp0_iter1_reg;
        select_ln610_reg_1665_pp0_iter3_reg <= select_ln610_reg_1665_pp0_iter2_reg;
        select_ln610_reg_1665_pp0_iter4_reg <= select_ln610_reg_1665_pp0_iter3_reg;
        tmp_2_reg_1826_pp0_iter7_reg <= tmp_2_reg_1826;
        tmp_2_reg_1826_pp0_iter8_reg <= tmp_2_reg_1826_pp0_iter7_reg;
        tmp_2_reg_1826_pp0_iter9_reg <= tmp_2_reg_1826_pp0_iter8_reg;
        trunc_ln72_reg_1730_pp0_iter3_reg <= trunc_ln72_reg_1730;
        trunc_ln72_reg_1730_pp0_iter4_reg <= trunc_ln72_reg_1730_pp0_iter3_reg;
        trunc_ln72_reg_1730_pp0_iter5_reg <= trunc_ln72_reg_1730_pp0_iter4_reg;
        trunc_ln72_reg_1730_pp0_iter6_reg <= trunc_ln72_reg_1730_pp0_iter5_reg;
        trunc_ln72_reg_1730_pp0_iter7_reg <= trunc_ln72_reg_1730_pp0_iter6_reg;
        trunc_ln72_reg_1730_pp0_iter8_reg <= trunc_ln72_reg_1730_pp0_iter7_reg;
        trunc_ln72_reg_1730_pp0_iter9_reg <= trunc_ln72_reg_1730_pp0_iter8_reg;
        xor_ln1027_reg_1701_pp0_iter2_reg <= xor_ln1027_reg_1701;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b1) & (icmp_ln1027_reg_1655_pp0_iter5_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        Yaxis_overlap_en_reg_1860 <= Yaxis_overlap_en_fu_883_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        cmp152_reg_1670_pp0_iter1_reg <= cmp152_reg_1670;
        conv3_i_i243_cast_cast_reg_1642[15 : 0] <= conv3_i_i243_cast_cast_fu_262_p1[15 : 0];
        icmp_ln1027_reg_1655 <= icmp_ln1027_fu_333_p2;
        icmp_ln1027_reg_1655_pp0_iter1_reg <= icmp_ln1027_reg_1655;
        icmp_ln694_reg_1659_pp0_iter1_reg <= icmp_ln694_reg_1659;
        out_div_4_cast15_cast_reg_1649[24 : 0] <= out_div_4_cast15_cast_fu_266_p1[24 : 0];
        select_ln610_reg_1665_pp0_iter1_reg <= select_ln610_reg_1665;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd1 == DDR_wr_en_tmp_fu_1121_p2) & (icmp_ln1027_reg_1655_pp0_iter9_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buffer_data_temp_reg_1920 <= buffer_data_temp_fu_1385_p3;
        icmp_ln811_reg_1925 <= icmp_ln811_fu_1403_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln1027_fu_333_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        cmp152_reg_1670 <= cmp152_fu_362_p2;
        icmp_ln694_reg_1659 <= icmp_ln694_fu_348_p2;
        select_ln610_reg_1665 <= select_ln610_fu_354_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1027_reg_1655_pp0_iter4_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln1027_1_reg_1821 <= icmp_ln1027_1_fu_777_p2;
        icmp_ln219_reg_1807 <= icmp_ln219_fu_755_p2;
        p_Result_s_reg_1816 <= p_Result_s_fu_773_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1027_reg_1655 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln1035_reg_1707 <= icmp_ln1035_fu_427_p2;
        index_fract_value_V_reg_1688 <= index_fract_value_V_fu_404_p1;
        output_buffer_index_next_V_2_reg_1723 <= output_buffer_index_next_V_2_fu_500_p3;
        output_buffer_index_start_V_reg_1718 <= output_buffer_index_start_V_fu_443_p2;
        p_Val2_2_reg_1681 <= p_Val2_2_fu_390_p3;
        sub_value_V_reg_1696 <= sub_value_V_fu_408_p2;
        tmp9_reg_1712 <= {{p_Val2_2_fu_390_p3[31:16]}};
        xor_ln1027_reg_1701 <= xor_ln1027_fu_421_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1027_reg_1655_pp0_iter5_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln1039_1_reg_1831 <= icmp_ln1039_1_fu_809_p2;
        tmp_2_reg_1826 <= {{Yindex_output_V_4_reg_1801[31:16]}};
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln1027_fu_333_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter10 == 1'b1) & (icmp_ln1027_reg_1655_pp0_iter9_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_condition_exit_pp0_iter10_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter10_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter10_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start_int == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b1) & (icmp_ln1027_reg_1655_pp0_iter6_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_Yaxis_overlap_en_2_phi_fu_254_p4 = Yaxis_overlap_en_reg_1860;
    end else begin
        ap_phi_mux_Yaxis_overlap_en_2_phi_fu_254_p4 = Yaxis_overlap_en_2_reg_250;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_col_index_1_load = 11'd0;
    end else begin
        ap_sig_allocacmp_col_index_1_load = col_index_1_fu_160;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_indvar_flatten_load = 20'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten_load = indvar_flatten_fu_188;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_1485_ce = 1'b1;
    end else begin
        grp_fu_1485_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_1494_ce = 1'b1;
    end else begin
        grp_fu_1494_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_1501_ce = 1'b1;
    end else begin
        grp_fu_1501_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_1510_ce = 1'b1;
    end else begin
        grp_fu_1510_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_1517_ce = 1'b1;
    end else begin
        grp_fu_1517_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_1526_ce = 1'b1;
    end else begin
        grp_fu_1526_ce = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln1027_reg_1655_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        img_3_data68_blk_n = img_3_data68_empty_n;
    end else begin
        img_3_data68_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln1027_reg_1655_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        img_3_data68_read = 1'b1;
    end else begin
        img_3_data68_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_predicate_op294_write_state12 == 1'b1) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        img_4_data69_blk_n = img_4_data69_full_n;
    end else begin
        img_4_data69_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_predicate_op294_write_state12 == 1'b1) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        img_4_data69_write = 1'b1;
    end else begin
        img_4_data69_write = 1'b0;
    end
end

always @ (*) begin
    if ((((1'd1 == DDR_wr_en_tmp_reg_1910) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((1'd0 == DDR_wr_en_tmp_reg_1910) & (ap_enable_reg_pp0_iter11 == 1'b1) & (out_buffer_wr_en_reg_1873_pp0_iter10_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        ouput_buffer_V_ce0 = 1'b1;
    end else begin
        ouput_buffer_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter9 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ouput_buffer_V_ce1 = 1'b1;
    end else begin
        ouput_buffer_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter11 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        if ((1'd1 == DDR_wr_en_tmp_reg_1910)) begin
            ouput_buffer_V_d0 = buffer_data_temp_reg_1920;
        end else if (((1'd0 == DDR_wr_en_tmp_reg_1910) & (out_buffer_wr_en_reg_1873_pp0_iter10_reg == 1'd1))) begin
            ouput_buffer_V_d0 = temp_sum_V_reg_1914;
        end else begin
            ouput_buffer_V_d0 = 'bx;
        end
    end else begin
        ouput_buffer_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'd1 == DDR_wr_en_tmp_reg_1910) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((1'd0 == DDR_wr_en_tmp_reg_1910) & (ap_enable_reg_pp0_iter11 == 1'b1) & (out_buffer_wr_en_reg_1873_pp0_iter10_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        ouput_buffer_V_we0 = 1'b1;
    end else begin
        ouput_buffer_V_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign DDR_wr_en_tmp_fu_1121_p2 = (out_buffer_wr_en_reg_1873 & and_ln201_fu_1115_p2);

assign DDR_write1_temp_V_1_fu_1365_p3 = ((p_Result_3_reg_1865[0:0] == 1'b1) ? update_1_fu_1337_p3 : update_fu_1223_p3);

assign PB_out_V_fu_944_p1 = grp_fu_1510_p2;

assign PB_out_overlap_V_fu_962_p1 = grp_fu_1526_p2;

assign Wx_V_fu_694_p3 = ((icmp_ln1019_4_fu_689_p2[0:0] == 1'b1) ? index_fract_value_V_reg_1688 : sub_value_V_reg_1696);

assign Wx_for_Nplus1_Procblock_fu_677_p3 = ((and_ln166_fu_671_p2[0:0] == 1'b1) ? index_fract_value_V_reg_1688 : 16'd0);

assign Wy0_fu_820_p3 = ((ap_phi_mux_Yaxis_overlap_en_2_phi_fu_254_p4[0:0] == 1'b1) ? sub_ln186_fu_815_p2 : conv3_i_i243_cast_cast_reg_1642);

assign Wy1_fu_827_p3 = ((ap_phi_mux_Yaxis_overlap_en_2_phi_fu_254_p4[0:0] == 1'b1) ? p_Result_1_fu_787_p1 : 16'd0);

assign Xindex_output_next_V_1_fu_397_p3 = ((cmp152_reg_1670[0:0] == 1'b1) ? 32'd65536 : Xindex_output_next_V_fu_140);

assign Yaxis_overlap_en_fu_883_p2 = (icmp_ln1035_5_fu_877_p2 & icmp_ln1027_1_reg_1821);

assign Yindex_output_V_3_fu_765_p3 = ((icmp_ln219_fu_755_p2[0:0] == 1'b1) ? Yindex_output_V_fu_760_p2 : Yindex_output_V_1_fu_144);

assign Yindex_output_V_fu_760_p2 = (Yindex_output_V_1_fu_144 + out_div_4_cast15_cast_reg_1649);

assign Yindex_output_precision_error_V_fu_794_p2 = ($signed(17'd65536) - $signed(zext_ln628_fu_790_p1));

assign Yindex_output_prev_V_4_fu_1432_p3 = ((icmp_ln219_reg_1807_pp0_iter9_reg[0:0] == 1'b1) ? Yindex_output_prev_V_fu_1427_p2 : Yindex_output_prev_V_2_fu_148);

assign Yindex_output_prev_V_fu_1427_p2 = (Yindex_output_prev_V_2_fu_148 + out_div_4_cast15_cast_reg_1649);

assign Yindex_output_prev_precision_error_V_fu_1071_p2 = ($signed(17'd65536) - $signed(zext_ln628_1_fu_1067_p1));

assign add_ln1027_fu_339_p2 = (ap_sig_allocacmp_indvar_flatten_load + 20'd1);

assign add_ln1495_fu_548_p2 = (zext_ln1495_fu_544_p1 + 17'd1);

assign add_ln186_1_fu_1209_p2 = (data_mux_out_overlap_V_3_fu_1170_p3 + data_previous_overlap_V_1_fu_1190_p3);

assign add_ln186_2_fu_1317_p2 = (data_mux_out_V_5_fu_1278_p3 + data_previous_V_2_fu_1297_p3);

assign add_ln186_3_fu_1323_p2 = (data_mux_out_overlap_V_5_fu_1284_p3 + data_previous_overlap_V_2_fu_1304_p3);

assign add_ln186_fu_1203_p2 = (data_mux_out_V_3_fu_1164_p3 + data_previous_V_1_fu_1183_p3);

assign add_ln694_1_fu_514_p2 = (Xindex_output_next_V_1_fu_397_p3 + 32'd32768);

assign add_ln694_fu_508_p2 = (p_Val2_2_fu_390_p3 + 32'd32768);

assign add_ln840_fu_1031_p2 = (row_index_V_fu_184 + 10'd1);

assign and_ln132_1_fu_711_p2 = (icmp_ln1035_2_reg_1755 & icmp_ln1019_reg_1745);

assign and_ln132_fu_715_p2 = (xor_ln1027_reg_1701_pp0_iter2_reg & icmp_ln1019_2_reg_1750);

assign and_ln166_fu_671_p2 = (icmp_ln1035_3_fu_665_p2 & icmp_ln1019_3_fu_659_p2);

assign and_ln201_fu_1115_p2 = (or_ln201_2_fu_1109_p2 & icmp_ln1035_4_fu_1092_p2);

assign and_ln488_1_fu_1345_p2 = (p_Result_3_reg_1865 & out_buffer_wr_en_reg_1873);

assign and_ln488_fu_1231_p2 = (out_buffer_wr_en_reg_1873 & cmp92_i_fu_1126_p2);

assign and_ln72_fu_530_p2 = (xor_ln1027_reg_1701 & icmp_ln1035_reg_1707);

assign and_ln89_fu_494_p2 = (xor_ln1027_1_fu_466_p2 & icmp_ln1035_1_fu_472_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

always @ (*) begin
    ap_block_pp0 = ((ap_ST_fsm_pp0_stage0 == ap_CS_fsm) & (1'b1 == ap_block_pp0_stage0_subdone));
end

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((ap_predicate_op294_write_state12 == 1'b1) & (img_4_data69_full_n == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b1)) | ((icmp_ln1027_reg_1655_pp0_iter2_reg == 1'd0) & (img_3_data68_empty_n == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((ap_predicate_op294_write_state12 == 1'b1) & (img_4_data69_full_n == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b1)) | ((icmp_ln1027_reg_1655_pp0_iter2_reg == 1'd0) & (img_3_data68_empty_n == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((ap_predicate_op294_write_state12 == 1'b1) & (img_4_data69_full_n == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b1)) | ((icmp_ln1027_reg_1655_pp0_iter2_reg == 1'd0) & (img_3_data68_empty_n == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1)));
end

assign ap_block_state10_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state12_pp0_stage0_iter11 = ((ap_predicate_op294_write_state12 == 1'b1) & (img_4_data69_full_n == 1'b0));
end

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state4_pp0_stage0_iter3 = ((icmp_ln1027_reg_1655_pp0_iter2_reg == 1'd0) & (img_3_data68_empty_n == 1'b0));
end

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_1445 = ((1'd1 == DDR_wr_en_tmp_fu_1121_p2) & (ap_enable_reg_pp0_iter10 == 1'b1) & (icmp_ln1027_reg_1655_pp0_iter9_reg == 1'd0));
end

always @ (*) begin
    ap_enable_operation_195 = (icmp_ln1027_reg_1655_pp0_iter8_reg == 1'd0);
end

always @ (*) begin
    ap_enable_operation_265 = (icmp_ln1027_reg_1655_pp0_iter9_reg == 1'd0);
end

always @ (*) begin
    ap_enable_operation_289 = (ap_predicate_op289_store_state12 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_293 = (1'd1 == DDR_wr_en_tmp_reg_1910);
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

always @ (*) begin
    ap_enable_state10_pp0_iter9_stage0 = ((ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_enable_state11_pp0_iter10_stage0 = ((ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_enable_state12_pp0_iter11_stage0 = ((ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

always @ (*) begin
    ap_predicate_op289_store_state12 = ((1'd0 == DDR_wr_en_tmp_reg_1910) & (out_buffer_wr_en_reg_1873_pp0_iter10_reg == 1'd1));
end

always @ (*) begin
    ap_predicate_op294_write_state12 = ((icmp_ln811_reg_1925 == 1'd1) & (1'd1 == DDR_wr_en_tmp_reg_1910));
end

assign buffer_data_temp_fu_1385_p3 = ((Yaxis_overlap_en_2_reg_250_pp0_iter9_reg[0:0] == 1'b1) ? select_ln529_fu_1378_p3 : 16'd0);

assign cmp152_fu_362_p2 = ((select_ln610_fu_354_p3 == 11'd0) ? 1'b1 : 1'b0);

assign cmp92_i_fu_1126_p2 = (p_Result_3_reg_1865 ^ 1'd1);

assign cmp_i_i114_i12_fu_1043_p2 = ((row_index_V_fu_184 == 10'd599) ? 1'b1 : 1'b0);

assign cmp_i_i114_i_mid1_fu_1037_p2 = ((add_ln840_fu_1031_p2 == 10'd599) ? 1'b1 : 1'b0);

assign col_index_fu_368_p2 = (select_ln610_fu_354_p3 + 11'd1);

assign conv3_i_i243_cast_cast_fu_262_p1 = conv3_i_i243_cast;

assign conv_i109_i_fu_971_p1 = write_col_index_V_3_fu_152;

assign data_mux_out_V_1_fu_1136_p3 = ((out_index_val_V_reg_1770_pp0_iter9_reg[0:0] == 1'b1) ? 16'd0 : procBlock_out_V_reg_1880);

assign data_mux_out_V_3_fu_1164_p3 = ((trunc_ln72_reg_1730_pp0_iter9_reg[0:0] == 1'b1) ? PB_out_V_reg_1886 : data_mux_out_V_1_fu_1136_p3);

assign data_mux_out_V_4_fu_1252_p3 = ((out_index_val_V_reg_1770_pp0_iter9_reg[0:0] == 1'b1) ? procBlock_out_V_reg_1880 : 16'd0);

assign data_mux_out_V_5_fu_1278_p3 = ((trunc_ln72_reg_1730_pp0_iter9_reg[0:0] == 1'b1) ? data_mux_out_V_4_fu_1252_p3 : PB_out_V_reg_1886);

assign data_mux_out_overlap_V_1_fu_1142_p3 = ((out_index_val_V_reg_1770_pp0_iter9_reg[0:0] == 1'b1) ? 16'd0 : procBlock_out_V_1_reg_1892);

assign data_mux_out_overlap_V_3_fu_1170_p3 = ((trunc_ln72_reg_1730_pp0_iter9_reg[0:0] == 1'b1) ? PB_out_overlap_V_reg_1898 : data_mux_out_overlap_V_1_fu_1142_p3);

assign data_mux_out_overlap_V_4_fu_1258_p3 = ((out_index_val_V_reg_1770_pp0_iter9_reg[0:0] == 1'b1) ? procBlock_out_V_1_reg_1892 : 16'd0);

assign data_mux_out_overlap_V_5_fu_1284_p3 = ((trunc_ln72_reg_1730_pp0_iter9_reg[0:0] == 1'b1) ? data_mux_out_overlap_V_4_fu_1258_p3 : PB_out_overlap_V_reg_1898);

assign data_mux_out_status_V_2_fu_1176_p3 = ((trunc_ln72_reg_1730_pp0_iter9_reg[0:0] == 1'b1) ? p_Result_5_fu_1156_p3 : p_Result_4_fu_1148_p3);

assign data_mux_out_status_V_5_fu_1290_p3 = ((trunc_ln72_reg_1730_pp0_iter9_reg[0:0] == 1'b1) ? p_Result_7_fu_1271_p3 : p_Result_6_fu_1264_p3);

assign data_previous_V_1_fu_1183_p3 = ((cmp152_reg_1670_pp0_iter9_reg[0:0] == 1'b1) ? 16'd0 : data_previous_V_fu_168);

assign data_previous_V_2_fu_1297_p3 = ((cmp152_reg_1670_pp0_iter9_reg[0:0] == 1'b1) ? 16'd0 : p_0_0_01086_1118_fu_176);

assign data_previous_overlap_V_1_fu_1190_p3 = ((cmp152_reg_1670_pp0_iter9_reg[0:0] == 1'b1) ? 16'd0 : data_previous_overlap_V_fu_172);

assign data_previous_overlap_V_2_fu_1304_p3 = ((cmp152_reg_1670_pp0_iter9_reg[0:0] == 1'b1) ? 16'd0 : p_0_0_01085_1120_fu_180);

assign grp_fu_1485_p0 = grp_fu_1485_p00;

assign grp_fu_1485_p00 = select_ln237_reg_1765;

assign grp_fu_1485_p1 = grp_fu_1485_p10;

assign grp_fu_1485_p10 = in_data_V_fu_733_p3;

assign grp_fu_1485_p2 = 24'd128;

assign grp_fu_1494_p0 = grp_fu_1494_p00;

assign grp_fu_1494_p00 = Wx_for_Nplus1_Procblock_reg_1760;

assign grp_fu_1494_p1 = grp_fu_1494_p10;

assign grp_fu_1494_p10 = img_3_data68_dout;

assign grp_fu_1501_p0 = zext_ln1494_1_fu_848_p1;

assign grp_fu_1501_p1 = zext_ln1494_fu_844_p1;

assign grp_fu_1501_p2 = 32'd32768;

assign grp_fu_1510_p0 = zext_ln1494_2_fu_861_p1;

assign grp_fu_1510_p1 = zext_ln1494_fu_844_p1;

assign grp_fu_1517_p0 = zext_ln1494_1_fu_848_p1;

assign grp_fu_1517_p1 = zext_ln1494_3_fu_865_p1;

assign grp_fu_1517_p2 = 32'd32768;

assign grp_fu_1526_p0 = zext_ln1494_2_fu_861_p1;

assign grp_fu_1526_p1 = zext_ln1494_3_fu_865_p1;

assign icmp_ln1019_2_fu_623_p2 = ((ret_V_3_fu_617_p2 == zext_ln1495_fu_544_p1) ? 1'b1 : 1'b0);

assign icmp_ln1019_3_fu_659_p2 = ((add_ln1495_fu_548_p2 == zext_ln1019_fu_656_p1) ? 1'b1 : 1'b0);

assign icmp_ln1019_4_fu_689_p2 = ((tmp9_reg_1712 == output_buffer_index_start_V_1_fu_534_p3) ? 1'b1 : 1'b0);

assign icmp_ln1019_fu_611_p2 = ((ret_V_fu_605_p2 == 17'd1) ? 1'b1 : 1'b0);

assign icmp_ln1023_1_fu_1311_p2 = ((data_mux_out_status_V_5_fu_1290_p3 == 2'd0) ? 1'b1 : 1'b0);

assign icmp_ln1023_fu_1197_p2 = ((data_mux_out_status_V_2_fu_1176_p3 == 2'd0) ? 1'b1 : 1'b0);

assign icmp_ln1027_1_fu_777_p2 = ((out_div_4_cast8 > p_Result_s_fu_773_p1) ? 1'b1 : 1'b0);

assign icmp_ln1027_fu_333_p2 = ((ap_sig_allocacmp_indvar_flatten_load == 20'd614400) ? 1'b1 : 1'b0);

assign icmp_ln1035_1_fu_472_p2 = ((sub_value_V_1_fu_453_p2 > 16'd65) ? 1'b1 : 1'b0);

assign icmp_ln1035_2_fu_638_p2 = (($signed(ret_V_4_fu_632_p2) > $signed(17'd65)) ? 1'b1 : 1'b0);

assign icmp_ln1035_3_fu_665_p2 = ((overlap_next_pixel_V_fu_651_p2 > 32'd65) ? 1'b1 : 1'b0);

assign icmp_ln1035_4_fu_1092_p2 = ((Yindex_output_prev_precision_error_V_fu_1071_p2 > 17'd65) ? 1'b1 : 1'b0);

assign icmp_ln1035_5_fu_877_p2 = (($signed(ret_V_7_fu_872_p2) > $signed(17'd65)) ? 1'b1 : 1'b0);

assign icmp_ln1035_fu_427_p2 = ((sub_value_V_fu_408_p2 > 16'd65) ? 1'b1 : 1'b0);

assign icmp_ln1039_1_fu_809_p2 = ((Yindex_output_precision_error_V_fu_794_p2 < 17'd66) ? 1'b1 : 1'b0);

assign icmp_ln1039_fu_898_p2 = ((output_buffer_index_next_V_2_reg_1723_pp0_iter8_reg < ouput_index_write_counter_V_fu_156) ? 1'b1 : 1'b0);

assign icmp_ln219_fu_755_p2 = ((select_ln610_reg_1665_pp0_iter4_reg == 11'd1023) ? 1'b1 : 1'b0);

assign icmp_ln237_fu_684_p2 = ((index_fract_value_V_reg_1688 > 16'd32768) ? 1'b1 : 1'b0);

assign icmp_ln530_fu_1087_p2 = ((tmp_2_reg_1826_pp0_iter9_reg != tmp_3_fu_1077_p4) ? 1'b1 : 1'b0);

assign icmp_ln694_fu_348_p2 = ((ap_sig_allocacmp_col_index_1_load == 11'd1024) ? 1'b1 : 1'b0);

assign icmp_ln811_fu_1403_p2 = (($signed(tmp_4_fu_1393_p4) < $signed(23'd1)) ? 1'b1 : 1'b0);

assign img_4_data69_din = {{sum_rounding_V_fu_1469_p2[15:8]}};

assign in_data_V_fu_733_p3 = ((inflag_TA_fu_725_p2[0:0] == 1'b1) ? img_3_data68_dout : 8'd0);

assign index_fract_value_V_1_fu_449_p1 = Xindex_output_next_V_1_fu_397_p3[15:0];

assign index_fract_value_V_fu_404_p1 = p_Val2_2_fu_390_p3[15:0];

assign inflag_TA_fu_725_p2 = (t2_fu_719_p2 | t1_reg_1740);

assign int_bits_Xindex_out_V_fu_585_p4 = {{ret_V_2_fu_580_p2[31:16]}};

assign int_bits_Xindex_out_previous_V_2_fu_569_p3 = ((cmp152_reg_1670_pp0_iter1_reg[0:0] == 1'b1) ? 16'd0 : int_bits_Xindex_out_previous_V_fu_559_p4);

assign int_bits_Xindex_out_previous_V_fu_559_p4 = {{ret_V_1_fu_554_p2[31:16]}};

assign or_ln201_1_fu_1103_p2 = (select_ln610_1_fu_1049_p3 | Yaxis_overlap_en_2_reg_250_pp0_iter9_reg);

assign or_ln201_2_fu_1109_p2 = (or_ln201_fu_1098_p2 | or_ln201_1_fu_1103_p2);

assign or_ln201_fu_1098_p2 = (icmp_ln530_fu_1087_p2 | icmp_ln1039_1_reg_1831_pp0_iter9_reg);

assign ouput_buffer_V_address0 = ouput_buffer_V_addr_reg_1904_pp0_iter10_reg;

assign ouput_buffer_V_address1 = conv_i109_i_fu_971_p1;

assign ouput_index_write_counter_V_1_fu_914_p2 = (ouput_index_write_counter_V_fu_156 + 16'd1);

assign ouput_index_write_counter_V_2_fu_920_p3 = ((xor_ln1039_fu_903_p2[0:0] == 1'b1) ? ouput_index_write_counter_V_1_fu_914_p2 : ouput_index_write_counter_V_fu_156);

assign ouput_index_write_counter_V_3_fu_928_p3 = ((icmp_ln219_reg_1807_pp0_iter8_reg[0:0] == 1'b1) ? 16'd1 : ouput_index_write_counter_V_2_fu_920_p3);

assign out_buffer_wr_en_fu_909_p2 = (xor_ln1039_fu_903_p2 | icmp_ln219_reg_1807_pp0_iter8_reg);

assign out_col_index_4_fu_1409_p2 = (out_col_index_fu_192 + 32'd1);

assign out_col_index_5_fu_1415_p3 = ((icmp_ln219_reg_1807_pp0_iter9_reg[0:0] == 1'b1) ? 32'd0 : out_col_index_4_fu_1409_p2);

assign out_div_4_cast15_cast_fu_266_p1 = out_div_4_cast15;

assign out_index_val_V_fu_707_p1 = output_buffer_index_start_V_1_fu_534_p3[0:0];

assign output_buffer_index_next_V_2_fu_500_p3 = ((and_ln89_fu_494_p2[0:0] == 1'b1) ? output_buffer_index_next_V_fu_488_p2 : tmp_s_fu_478_p4);

assign output_buffer_index_next_V_fu_488_p2 = ($signed(tmp_s_fu_478_p4) + $signed(16'd65535));

assign output_buffer_index_start_V_1_fu_534_p3 = ((and_ln72_fu_530_p2[0:0] == 1'b1) ? output_buffer_index_start_V_reg_1718 : tmp9_reg_1712);

assign output_buffer_index_start_V_fu_443_p2 = ($signed(tmp9_fu_433_p4) + $signed(16'd65535));

assign overlap_next_pixel_V_fu_651_p2 = (r_V_fu_644_p3 - p_Val2_2_reg_1681);

assign p_Result_1_fu_787_p1 = Yindex_output_V_4_reg_1801[15:0];

assign p_Result_2_fu_1063_p1 = Yindex_output_prev_V_2_fu_148[15:0];

assign p_Result_3_fu_894_p1 = write_col_index_V_3_fu_152[0:0];

assign p_Result_4_fu_1148_p3 = {{1'd0}, {xor_ln1019_fu_1131_p2}};

assign p_Result_5_fu_1156_p3 = {{1'd1}, {xor_ln1019_fu_1131_p2}};

assign p_Result_6_fu_1264_p3 = {{1'd1}, {out_index_val_V_reg_1770_pp0_iter9_reg}};

assign p_Result_7_fu_1271_p3 = {{1'd0}, {out_index_val_V_reg_1770_pp0_iter9_reg}};

assign p_Result_s_fu_773_p1 = Yindex_output_V_3_fu_765_p3[15:0];

assign p_Val2_2_fu_390_p3 = ((cmp152_reg_1670[0:0] == 1'b1) ? 32'd32768 : add_i425112_fu_164);

assign r_V_1_fu_835_p4 = {{grp_fu_1485_p3[23:8]}};

assign r_V_3_fu_852_p1 = grp_fu_1494_p2;

assign r_V_3_fu_852_p4 = {{r_V_3_fu_852_p1[23:8]}};

assign r_V_fu_644_p3 = {{output_buffer_index_next_V_2_reg_1723}, {16'd0}};

assign ret_V_1_fu_554_p2 = ($signed(p_Val2_2_reg_1681) + $signed(32'd4294934463));

assign ret_V_2_fu_580_p2 = ($signed(p_Val2_2_reg_1681) + $signed(32'd4294967231));

assign ret_V_3_fu_617_p2 = ($signed(zext_ln186_fu_601_p1) + $signed(17'd131071));

assign ret_V_4_fu_632_p2 = (17'd32768 - zext_ln1496_fu_629_p1);

assign ret_V_7_fu_872_p2 = (conv3_i_i243_cast_cast_reg_1642 - zext_ln1496_1_fu_869_p1);

assign ret_V_fu_605_p2 = (zext_ln186_fu_601_p1 - rhs_V_1_fu_576_p1);

assign rhs_V_1_fu_576_p1 = int_bits_Xindex_out_previous_V_2_fu_569_p3;

assign select_ln1027_fu_1056_p3 = ((icmp_ln694_reg_1659_pp0_iter9_reg[0:0] == 1'b1) ? add_ln840_fu_1031_p2 : row_index_V_fu_184);

assign select_ln237_fu_700_p3 = ((icmp_ln237_fu_684_p2[0:0] == 1'b1) ? out_div_3 : Wx_V_fu_694_p3);

assign select_ln488_1_fu_1244_p3 = ((and_ln488_fu_1231_p2[0:0] == 1'b1) ? 16'd0 : update_fu_1223_p3);

assign select_ln488_2_fu_1349_p3 = ((and_ln488_1_fu_1345_p2[0:0] == 1'b1) ? 16'd0 : update_overlap_1_fu_1329_p3);

assign select_ln488_3_fu_1357_p3 = ((and_ln488_1_fu_1345_p2[0:0] == 1'b1) ? 16'd0 : update_1_fu_1337_p3);

assign select_ln488_fu_1236_p3 = ((and_ln488_fu_1231_p2[0:0] == 1'b1) ? 16'd0 : update_overlap_fu_1215_p3);

assign select_ln529_fu_1378_p3 = ((p_Result_3_reg_1865[0:0] == 1'b1) ? update_overlap_1_fu_1329_p3 : update_overlap_fu_1215_p3);

assign select_ln610_1_fu_1049_p3 = ((icmp_ln694_reg_1659_pp0_iter9_reg[0:0] == 1'b1) ? cmp_i_i114_i_mid1_fu_1037_p2 : cmp_i_i114_i12_fu_1043_p2);

assign select_ln610_fu_354_p3 = ((icmp_ln694_fu_348_p2[0:0] == 1'b1) ? 11'd0 : ap_sig_allocacmp_col_index_1_load);

assign sub_ln186_fu_815_p2 = (conv3_i_i243_cast_cast_reg_1642 - zext_ln628_fu_790_p1);

assign sub_value_V_1_fu_453_p2 = (out_div_3 - index_fract_value_V_1_fu_449_p1);

assign sub_value_V_fu_408_p2 = (out_div_3 - index_fract_value_V_fu_404_p1);

assign sum_rounding_V_fu_1469_p2 = (temp_sum_V_reg_1914 + 16'd128);

assign t1_fu_595_p2 = ((output_buffer_index_start_V_1_fu_534_p3 == int_bits_Xindex_out_V_fu_585_p4) ? 1'b1 : 1'b0);

assign t2_fu_719_p2 = (and_ln132_fu_715_p2 & and_ln132_1_fu_711_p2);

assign temp_sum_V_fu_1372_p2 = (ouput_buffer_V_q1 + DDR_write1_temp_V_1_fu_1365_p3);

assign tmp9_fu_433_p4 = {{p_Val2_2_fu_390_p3[31:16]}};

assign tmp_1_fu_458_p3 = Xindex_output_next_V_1_fu_397_p3[32'd15];

assign tmp_3_fu_1077_p4 = {{Yindex_output_prev_V_2_fu_148[31:16]}};

assign tmp_4_fu_1393_p4 = {{out_col_index_fu_192[31:9]}};

assign tmp_fu_413_p3 = p_Val2_2_fu_390_p3[32'd15];

assign tmp_s_fu_478_p4 = {{Xindex_output_next_V_1_fu_397_p3[31:16]}};

assign trunc_ln72_fu_540_p1 = output_buffer_index_start_V_1_fu_534_p3[0:0];

assign update_1_fu_1337_p3 = ((icmp_ln1023_1_fu_1311_p2[0:0] == 1'b1) ? data_previous_V_2_fu_1297_p3 : add_ln186_2_fu_1317_p2);

assign update_fu_1223_p3 = ((icmp_ln1023_fu_1197_p2[0:0] == 1'b1) ? data_previous_V_1_fu_1183_p3 : add_ln186_fu_1203_p2);

assign update_overlap_1_fu_1329_p3 = ((icmp_ln1023_1_fu_1311_p2[0:0] == 1'b1) ? data_previous_overlap_V_2_fu_1304_p3 : add_ln186_3_fu_1323_p2);

assign update_overlap_fu_1215_p3 = ((icmp_ln1023_fu_1197_p2[0:0] == 1'b1) ? data_previous_overlap_V_1_fu_1190_p3 : add_ln186_1_fu_1209_p2);

assign write_col_index_V_4_fu_985_p3 = ((out_buffer_wr_en_fu_909_p2[0:0] == 1'b1) ? write_col_index_V_fu_979_p2 : write_col_index_V_3_fu_152);

assign write_col_index_V_5_fu_993_p3 = ((icmp_ln219_reg_1807_pp0_iter8_reg[0:0] == 1'b1) ? 16'd0 : write_col_index_V_4_fu_985_p3);

assign write_col_index_V_fu_979_p2 = (write_col_index_V_3_fu_152 + 16'd1);

assign xor_ln1019_fu_1131_p2 = (out_index_val_V_reg_1770_pp0_iter9_reg ^ 1'd1);

assign xor_ln1027_1_fu_466_p2 = (tmp_1_fu_458_p3 ^ 1'd1);

assign xor_ln1027_fu_421_p2 = (tmp_fu_413_p3 ^ 1'd1);

assign xor_ln1039_fu_903_p2 = (icmp_ln1039_fu_898_p2 ^ 1'd1);

assign zext_ln1019_fu_656_p1 = output_buffer_index_next_V_2_reg_1723;

assign zext_ln1494_1_fu_848_p1 = r_V_1_fu_835_p4;

assign zext_ln1494_2_fu_861_p1 = r_V_3_fu_852_p4;

assign zext_ln1494_3_fu_865_p1 = Wy1_fu_827_p3;

assign zext_ln1494_fu_844_p1 = Wy0_fu_820_p3;

assign zext_ln1495_fu_544_p1 = output_buffer_index_start_V_1_fu_534_p3;

assign zext_ln1496_1_fu_869_p1 = p_Result_s_reg_1816;

assign zext_ln1496_fu_629_p1 = index_fract_value_V_reg_1688;

assign zext_ln186_fu_601_p1 = int_bits_Xindex_out_V_fu_585_p4;

assign zext_ln628_1_fu_1067_p1 = p_Result_2_fu_1063_p1;

assign zext_ln628_fu_790_p1 = p_Result_1_fu_787_p1;

always @ (posedge ap_clk) begin
    conv3_i_i243_cast_cast_reg_1642[16] <= 1'b0;
    out_div_4_cast15_cast_reg_1649[31:25] <= 7'b0000000;
end

endmodule //test_Hu_xFResizeAreaDownScale_Pipeline_LOOP_ROW_LOOP_COL
