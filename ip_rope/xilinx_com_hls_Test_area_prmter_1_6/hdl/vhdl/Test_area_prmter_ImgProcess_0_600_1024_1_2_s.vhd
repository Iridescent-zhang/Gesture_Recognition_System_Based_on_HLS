-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
-- Version: 2022.2
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity Test_area_prmter_ImgProcess_0_600_1024_1_2_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    img_1_data15_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    img_1_data15_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
    img_1_data15_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
    img_1_data15_empty_n : IN STD_LOGIC;
    img_1_data15_read : OUT STD_LOGIC;
    param_address0 : OUT STD_LOGIC_VECTOR (0 downto 0);
    param_ce0 : OUT STD_LOGIC;
    param_we0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    param_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of Test_area_prmter_ImgProcess_0_600_1024_1_2_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (10 downto 0) := "00000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (10 downto 0) := "00000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (10 downto 0) := "00000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (10 downto 0) := "00000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (10 downto 0) := "00000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (10 downto 0) := "00001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (10 downto 0) := "00010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (10 downto 0) := "00100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (10 downto 0) := "01000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (10 downto 0) := "10000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv64_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";

attribute shreg_extract : string;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal grp_fu_129_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln68_reg_163 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal parameter_address0 : STD_LOGIC_VECTOR (0 downto 0);
    signal parameter_ce0 : STD_LOGIC;
    signal parameter_we0 : STD_LOGIC;
    signal parameter_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal parameter_address1 : STD_LOGIC_VECTOR (0 downto 0);
    signal parameter_ce1 : STD_LOGIC;
    signal parameter_we1 : STD_LOGIC;
    signal row_mark_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal row_mark_ce0 : STD_LOGIC;
    signal row_mark_we0 : STD_LOGIC;
    signal row_mark_d0 : STD_LOGIC_VECTOR (0 downto 0);
    signal row_mark_q0 : STD_LOGIC_VECTOR (0 downto 0);
    signal col_mark_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal col_mark_ce0 : STD_LOGIC;
    signal col_mark_we0 : STD_LOGIC;
    signal col_mark_d0 : STD_LOGIC_VECTOR (0 downto 0);
    signal col_mark_q0 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_ImgProcess_0_600_1024_1_2_Pipeline_VITIS_LOOP_30_1_fu_83_ap_start : STD_LOGIC;
    signal grp_ImgProcess_0_600_1024_1_2_Pipeline_VITIS_LOOP_30_1_fu_83_ap_done : STD_LOGIC;
    signal grp_ImgProcess_0_600_1024_1_2_Pipeline_VITIS_LOOP_30_1_fu_83_ap_idle : STD_LOGIC;
    signal grp_ImgProcess_0_600_1024_1_2_Pipeline_VITIS_LOOP_30_1_fu_83_ap_ready : STD_LOGIC;
    signal grp_ImgProcess_0_600_1024_1_2_Pipeline_VITIS_LOOP_30_1_fu_83_row_mark_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_ImgProcess_0_600_1024_1_2_Pipeline_VITIS_LOOP_30_1_fu_83_row_mark_ce0 : STD_LOGIC;
    signal grp_ImgProcess_0_600_1024_1_2_Pipeline_VITIS_LOOP_30_1_fu_83_row_mark_we0 : STD_LOGIC;
    signal grp_ImgProcess_0_600_1024_1_2_Pipeline_VITIS_LOOP_30_1_fu_83_row_mark_d0 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_ImgProcess_0_600_1024_1_2_Pipeline_VITIS_LOOP_33_2_fu_89_ap_start : STD_LOGIC;
    signal grp_ImgProcess_0_600_1024_1_2_Pipeline_VITIS_LOOP_33_2_fu_89_ap_done : STD_LOGIC;
    signal grp_ImgProcess_0_600_1024_1_2_Pipeline_VITIS_LOOP_33_2_fu_89_ap_idle : STD_LOGIC;
    signal grp_ImgProcess_0_600_1024_1_2_Pipeline_VITIS_LOOP_33_2_fu_89_ap_ready : STD_LOGIC;
    signal grp_ImgProcess_0_600_1024_1_2_Pipeline_VITIS_LOOP_33_2_fu_89_col_mark_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_ImgProcess_0_600_1024_1_2_Pipeline_VITIS_LOOP_33_2_fu_89_col_mark_ce0 : STD_LOGIC;
    signal grp_ImgProcess_0_600_1024_1_2_Pipeline_VITIS_LOOP_33_2_fu_89_col_mark_we0 : STD_LOGIC;
    signal grp_ImgProcess_0_600_1024_1_2_Pipeline_VITIS_LOOP_33_2_fu_89_col_mark_d0 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_ImgProcess_0_600_1024_1_2_Pipeline_loop_color_rows_loop_color_cols_fu_95_ap_start : STD_LOGIC;
    signal grp_ImgProcess_0_600_1024_1_2_Pipeline_loop_color_rows_loop_color_cols_fu_95_ap_done : STD_LOGIC;
    signal grp_ImgProcess_0_600_1024_1_2_Pipeline_loop_color_rows_loop_color_cols_fu_95_ap_idle : STD_LOGIC;
    signal grp_ImgProcess_0_600_1024_1_2_Pipeline_loop_color_rows_loop_color_cols_fu_95_ap_ready : STD_LOGIC;
    signal grp_ImgProcess_0_600_1024_1_2_Pipeline_loop_color_rows_loop_color_cols_fu_95_img_1_data15_read : STD_LOGIC;
    signal grp_ImgProcess_0_600_1024_1_2_Pipeline_loop_color_rows_loop_color_cols_fu_95_row_mark_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_ImgProcess_0_600_1024_1_2_Pipeline_loop_color_rows_loop_color_cols_fu_95_row_mark_ce0 : STD_LOGIC;
    signal grp_ImgProcess_0_600_1024_1_2_Pipeline_loop_color_rows_loop_color_cols_fu_95_row_mark_we0 : STD_LOGIC;
    signal grp_ImgProcess_0_600_1024_1_2_Pipeline_loop_color_rows_loop_color_cols_fu_95_row_mark_d0 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_ImgProcess_0_600_1024_1_2_Pipeline_loop_color_rows_loop_color_cols_fu_95_col_mark_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_ImgProcess_0_600_1024_1_2_Pipeline_loop_color_rows_loop_color_cols_fu_95_col_mark_ce0 : STD_LOGIC;
    signal grp_ImgProcess_0_600_1024_1_2_Pipeline_loop_color_rows_loop_color_cols_fu_95_col_mark_we0 : STD_LOGIC;
    signal grp_ImgProcess_0_600_1024_1_2_Pipeline_loop_color_rows_loop_color_cols_fu_95_col_mark_d0 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_ImgProcess_0_600_1024_1_2_Pipeline_loop_color_rows_loop_color_cols_fu_95_area_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_ImgProcess_0_600_1024_1_2_Pipeline_loop_color_rows_loop_color_cols_fu_95_area_out_ap_vld : STD_LOGIC;
    signal grp_ImgProcess_0_600_1024_1_2_Pipeline_VITIS_LOOP_60_3_fu_104_ap_start : STD_LOGIC;
    signal grp_ImgProcess_0_600_1024_1_2_Pipeline_VITIS_LOOP_60_3_fu_104_ap_done : STD_LOGIC;
    signal grp_ImgProcess_0_600_1024_1_2_Pipeline_VITIS_LOOP_60_3_fu_104_ap_idle : STD_LOGIC;
    signal grp_ImgProcess_0_600_1024_1_2_Pipeline_VITIS_LOOP_60_3_fu_104_ap_ready : STD_LOGIC;
    signal grp_ImgProcess_0_600_1024_1_2_Pipeline_VITIS_LOOP_60_3_fu_104_row_mark_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_ImgProcess_0_600_1024_1_2_Pipeline_VITIS_LOOP_60_3_fu_104_row_mark_ce0 : STD_LOGIC;
    signal grp_ImgProcess_0_600_1024_1_2_Pipeline_VITIS_LOOP_60_3_fu_104_row_sum_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_ImgProcess_0_600_1024_1_2_Pipeline_VITIS_LOOP_60_3_fu_104_row_sum_out_ap_vld : STD_LOGIC;
    signal grp_ImgProcess_0_600_1024_1_2_Pipeline_VITIS_LOOP_63_4_fu_110_ap_start : STD_LOGIC;
    signal grp_ImgProcess_0_600_1024_1_2_Pipeline_VITIS_LOOP_63_4_fu_110_ap_done : STD_LOGIC;
    signal grp_ImgProcess_0_600_1024_1_2_Pipeline_VITIS_LOOP_63_4_fu_110_ap_idle : STD_LOGIC;
    signal grp_ImgProcess_0_600_1024_1_2_Pipeline_VITIS_LOOP_63_4_fu_110_ap_ready : STD_LOGIC;
    signal grp_ImgProcess_0_600_1024_1_2_Pipeline_VITIS_LOOP_63_4_fu_110_col_mark_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_ImgProcess_0_600_1024_1_2_Pipeline_VITIS_LOOP_63_4_fu_110_col_mark_ce0 : STD_LOGIC;
    signal grp_ImgProcess_0_600_1024_1_2_Pipeline_VITIS_LOOP_63_4_fu_110_col_sum_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_ImgProcess_0_600_1024_1_2_Pipeline_VITIS_LOOP_63_4_fu_110_col_sum_out_ap_vld : STD_LOGIC;
    signal grp_ImgProcess_0_600_1024_1_2_Pipeline_6_fu_116_ap_start : STD_LOGIC;
    signal grp_ImgProcess_0_600_1024_1_2_Pipeline_6_fu_116_ap_done : STD_LOGIC;
    signal grp_ImgProcess_0_600_1024_1_2_Pipeline_6_fu_116_ap_idle : STD_LOGIC;
    signal grp_ImgProcess_0_600_1024_1_2_Pipeline_6_fu_116_ap_ready : STD_LOGIC;
    signal grp_ImgProcess_0_600_1024_1_2_Pipeline_6_fu_116_parameter_r_address0 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_ImgProcess_0_600_1024_1_2_Pipeline_6_fu_116_parameter_r_ce0 : STD_LOGIC;
    signal grp_ImgProcess_0_600_1024_1_2_Pipeline_6_fu_116_param_address0 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_ImgProcess_0_600_1024_1_2_Pipeline_6_fu_116_param_ce0 : STD_LOGIC;
    signal grp_ImgProcess_0_600_1024_1_2_Pipeline_6_fu_116_param_we0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_ImgProcess_0_600_1024_1_2_Pipeline_6_fu_116_param_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_ImgProcess_0_600_1024_1_2_Pipeline_VITIS_LOOP_30_1_fu_83_ap_start_reg : STD_LOGIC := '0';
    signal ap_block_state1_ignore_call8 : BOOLEAN;
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal grp_ImgProcess_0_600_1024_1_2_Pipeline_VITIS_LOOP_33_2_fu_89_ap_start_reg : STD_LOGIC := '0';
    signal ap_block_state1_ignore_call9 : BOOLEAN;
    signal grp_ImgProcess_0_600_1024_1_2_Pipeline_loop_color_rows_loop_color_cols_fu_95_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal grp_ImgProcess_0_600_1024_1_2_Pipeline_VITIS_LOOP_60_3_fu_104_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal grp_ImgProcess_0_600_1024_1_2_Pipeline_VITIS_LOOP_63_4_fu_110_ap_start_reg : STD_LOGIC := '0';
    signal grp_ImgProcess_0_600_1024_1_2_Pipeline_6_fu_116_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_block_state2_on_subcall_done : BOOLEAN;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_block_state6_on_subcall_done : BOOLEAN;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_ST_fsm_state11_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component Test_area_prmter_ImgProcess_0_600_1024_1_2_Pipeline_VITIS_LOOP_30_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        row_mark_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        row_mark_ce0 : OUT STD_LOGIC;
        row_mark_we0 : OUT STD_LOGIC;
        row_mark_d0 : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component Test_area_prmter_ImgProcess_0_600_1024_1_2_Pipeline_VITIS_LOOP_33_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        col_mark_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        col_mark_ce0 : OUT STD_LOGIC;
        col_mark_we0 : OUT STD_LOGIC;
        col_mark_d0 : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component Test_area_prmter_ImgProcess_0_600_1024_1_2_Pipeline_loop_color_rows_loop_color_cols IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        img_1_data15_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        img_1_data15_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        img_1_data15_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        img_1_data15_empty_n : IN STD_LOGIC;
        img_1_data15_read : OUT STD_LOGIC;
        row_mark_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        row_mark_ce0 : OUT STD_LOGIC;
        row_mark_we0 : OUT STD_LOGIC;
        row_mark_d0 : OUT STD_LOGIC_VECTOR (0 downto 0);
        col_mark_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        col_mark_ce0 : OUT STD_LOGIC;
        col_mark_we0 : OUT STD_LOGIC;
        col_mark_d0 : OUT STD_LOGIC_VECTOR (0 downto 0);
        area_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        area_out_ap_vld : OUT STD_LOGIC );
    end component;


    component Test_area_prmter_ImgProcess_0_600_1024_1_2_Pipeline_VITIS_LOOP_60_3 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        row_mark_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        row_mark_ce0 : OUT STD_LOGIC;
        row_mark_q0 : IN STD_LOGIC_VECTOR (0 downto 0);
        row_sum_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        row_sum_out_ap_vld : OUT STD_LOGIC );
    end component;


    component Test_area_prmter_ImgProcess_0_600_1024_1_2_Pipeline_VITIS_LOOP_63_4 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        col_mark_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        col_mark_ce0 : OUT STD_LOGIC;
        col_mark_q0 : IN STD_LOGIC_VECTOR (0 downto 0);
        col_sum_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        col_sum_out_ap_vld : OUT STD_LOGIC );
    end component;


    component Test_area_prmter_ImgProcess_0_600_1024_1_2_Pipeline_6 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        parameter_r_address0 : OUT STD_LOGIC_VECTOR (0 downto 0);
        parameter_r_ce0 : OUT STD_LOGIC;
        parameter_r_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        param_address0 : OUT STD_LOGIC_VECTOR (0 downto 0);
        param_ce0 : OUT STD_LOGIC;
        param_we0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        param_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component Test_area_prmter_mul_32s_32s_32_2_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component Test_area_prmter_ImgProcess_0_600_1024_1_2_s_parameter_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (0 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (0 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component Test_area_prmter_ImgProcess_0_600_1024_1_2_s_row_mark_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (0 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component Test_area_prmter_ImgProcess_0_600_1024_1_2_s_col_mark_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (0 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;



begin
    parameter_U : component Test_area_prmter_ImgProcess_0_600_1024_1_2_s_parameter_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 2,
        AddressWidth => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => parameter_address0,
        ce0 => parameter_ce0,
        we0 => parameter_we0,
        d0 => mul_ln68_reg_163,
        q0 => parameter_q0,
        address1 => parameter_address1,
        ce1 => parameter_ce1,
        we1 => parameter_we1,
        d1 => grp_ImgProcess_0_600_1024_1_2_Pipeline_loop_color_rows_loop_color_cols_fu_95_area_out);

    row_mark_U : component Test_area_prmter_ImgProcess_0_600_1024_1_2_s_row_mark_RAM_AUTO_1R1W
    generic map (
        DataWidth => 1,
        AddressRange => 600,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => row_mark_address0,
        ce0 => row_mark_ce0,
        we0 => row_mark_we0,
        d0 => row_mark_d0,
        q0 => row_mark_q0);

    col_mark_U : component Test_area_prmter_ImgProcess_0_600_1024_1_2_s_col_mark_RAM_AUTO_1R1W
    generic map (
        DataWidth => 1,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => col_mark_address0,
        ce0 => col_mark_ce0,
        we0 => col_mark_we0,
        d0 => col_mark_d0,
        q0 => col_mark_q0);

    grp_ImgProcess_0_600_1024_1_2_Pipeline_VITIS_LOOP_30_1_fu_83 : component Test_area_prmter_ImgProcess_0_600_1024_1_2_Pipeline_VITIS_LOOP_30_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_ImgProcess_0_600_1024_1_2_Pipeline_VITIS_LOOP_30_1_fu_83_ap_start,
        ap_done => grp_ImgProcess_0_600_1024_1_2_Pipeline_VITIS_LOOP_30_1_fu_83_ap_done,
        ap_idle => grp_ImgProcess_0_600_1024_1_2_Pipeline_VITIS_LOOP_30_1_fu_83_ap_idle,
        ap_ready => grp_ImgProcess_0_600_1024_1_2_Pipeline_VITIS_LOOP_30_1_fu_83_ap_ready,
        row_mark_address0 => grp_ImgProcess_0_600_1024_1_2_Pipeline_VITIS_LOOP_30_1_fu_83_row_mark_address0,
        row_mark_ce0 => grp_ImgProcess_0_600_1024_1_2_Pipeline_VITIS_LOOP_30_1_fu_83_row_mark_ce0,
        row_mark_we0 => grp_ImgProcess_0_600_1024_1_2_Pipeline_VITIS_LOOP_30_1_fu_83_row_mark_we0,
        row_mark_d0 => grp_ImgProcess_0_600_1024_1_2_Pipeline_VITIS_LOOP_30_1_fu_83_row_mark_d0);

    grp_ImgProcess_0_600_1024_1_2_Pipeline_VITIS_LOOP_33_2_fu_89 : component Test_area_prmter_ImgProcess_0_600_1024_1_2_Pipeline_VITIS_LOOP_33_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_ImgProcess_0_600_1024_1_2_Pipeline_VITIS_LOOP_33_2_fu_89_ap_start,
        ap_done => grp_ImgProcess_0_600_1024_1_2_Pipeline_VITIS_LOOP_33_2_fu_89_ap_done,
        ap_idle => grp_ImgProcess_0_600_1024_1_2_Pipeline_VITIS_LOOP_33_2_fu_89_ap_idle,
        ap_ready => grp_ImgProcess_0_600_1024_1_2_Pipeline_VITIS_LOOP_33_2_fu_89_ap_ready,
        col_mark_address0 => grp_ImgProcess_0_600_1024_1_2_Pipeline_VITIS_LOOP_33_2_fu_89_col_mark_address0,
        col_mark_ce0 => grp_ImgProcess_0_600_1024_1_2_Pipeline_VITIS_LOOP_33_2_fu_89_col_mark_ce0,
        col_mark_we0 => grp_ImgProcess_0_600_1024_1_2_Pipeline_VITIS_LOOP_33_2_fu_89_col_mark_we0,
        col_mark_d0 => grp_ImgProcess_0_600_1024_1_2_Pipeline_VITIS_LOOP_33_2_fu_89_col_mark_d0);

    grp_ImgProcess_0_600_1024_1_2_Pipeline_loop_color_rows_loop_color_cols_fu_95 : component Test_area_prmter_ImgProcess_0_600_1024_1_2_Pipeline_loop_color_rows_loop_color_cols
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_ImgProcess_0_600_1024_1_2_Pipeline_loop_color_rows_loop_color_cols_fu_95_ap_start,
        ap_done => grp_ImgProcess_0_600_1024_1_2_Pipeline_loop_color_rows_loop_color_cols_fu_95_ap_done,
        ap_idle => grp_ImgProcess_0_600_1024_1_2_Pipeline_loop_color_rows_loop_color_cols_fu_95_ap_idle,
        ap_ready => grp_ImgProcess_0_600_1024_1_2_Pipeline_loop_color_rows_loop_color_cols_fu_95_ap_ready,
        img_1_data15_dout => img_1_data15_dout,
        img_1_data15_num_data_valid => ap_const_lv2_0,
        img_1_data15_fifo_cap => ap_const_lv2_0,
        img_1_data15_empty_n => img_1_data15_empty_n,
        img_1_data15_read => grp_ImgProcess_0_600_1024_1_2_Pipeline_loop_color_rows_loop_color_cols_fu_95_img_1_data15_read,
        row_mark_address0 => grp_ImgProcess_0_600_1024_1_2_Pipeline_loop_color_rows_loop_color_cols_fu_95_row_mark_address0,
        row_mark_ce0 => grp_ImgProcess_0_600_1024_1_2_Pipeline_loop_color_rows_loop_color_cols_fu_95_row_mark_ce0,
        row_mark_we0 => grp_ImgProcess_0_600_1024_1_2_Pipeline_loop_color_rows_loop_color_cols_fu_95_row_mark_we0,
        row_mark_d0 => grp_ImgProcess_0_600_1024_1_2_Pipeline_loop_color_rows_loop_color_cols_fu_95_row_mark_d0,
        col_mark_address0 => grp_ImgProcess_0_600_1024_1_2_Pipeline_loop_color_rows_loop_color_cols_fu_95_col_mark_address0,
        col_mark_ce0 => grp_ImgProcess_0_600_1024_1_2_Pipeline_loop_color_rows_loop_color_cols_fu_95_col_mark_ce0,
        col_mark_we0 => grp_ImgProcess_0_600_1024_1_2_Pipeline_loop_color_rows_loop_color_cols_fu_95_col_mark_we0,
        col_mark_d0 => grp_ImgProcess_0_600_1024_1_2_Pipeline_loop_color_rows_loop_color_cols_fu_95_col_mark_d0,
        area_out => grp_ImgProcess_0_600_1024_1_2_Pipeline_loop_color_rows_loop_color_cols_fu_95_area_out,
        area_out_ap_vld => grp_ImgProcess_0_600_1024_1_2_Pipeline_loop_color_rows_loop_color_cols_fu_95_area_out_ap_vld);

    grp_ImgProcess_0_600_1024_1_2_Pipeline_VITIS_LOOP_60_3_fu_104 : component Test_area_prmter_ImgProcess_0_600_1024_1_2_Pipeline_VITIS_LOOP_60_3
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_ImgProcess_0_600_1024_1_2_Pipeline_VITIS_LOOP_60_3_fu_104_ap_start,
        ap_done => grp_ImgProcess_0_600_1024_1_2_Pipeline_VITIS_LOOP_60_3_fu_104_ap_done,
        ap_idle => grp_ImgProcess_0_600_1024_1_2_Pipeline_VITIS_LOOP_60_3_fu_104_ap_idle,
        ap_ready => grp_ImgProcess_0_600_1024_1_2_Pipeline_VITIS_LOOP_60_3_fu_104_ap_ready,
        row_mark_address0 => grp_ImgProcess_0_600_1024_1_2_Pipeline_VITIS_LOOP_60_3_fu_104_row_mark_address0,
        row_mark_ce0 => grp_ImgProcess_0_600_1024_1_2_Pipeline_VITIS_LOOP_60_3_fu_104_row_mark_ce0,
        row_mark_q0 => row_mark_q0,
        row_sum_out => grp_ImgProcess_0_600_1024_1_2_Pipeline_VITIS_LOOP_60_3_fu_104_row_sum_out,
        row_sum_out_ap_vld => grp_ImgProcess_0_600_1024_1_2_Pipeline_VITIS_LOOP_60_3_fu_104_row_sum_out_ap_vld);

    grp_ImgProcess_0_600_1024_1_2_Pipeline_VITIS_LOOP_63_4_fu_110 : component Test_area_prmter_ImgProcess_0_600_1024_1_2_Pipeline_VITIS_LOOP_63_4
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_ImgProcess_0_600_1024_1_2_Pipeline_VITIS_LOOP_63_4_fu_110_ap_start,
        ap_done => grp_ImgProcess_0_600_1024_1_2_Pipeline_VITIS_LOOP_63_4_fu_110_ap_done,
        ap_idle => grp_ImgProcess_0_600_1024_1_2_Pipeline_VITIS_LOOP_63_4_fu_110_ap_idle,
        ap_ready => grp_ImgProcess_0_600_1024_1_2_Pipeline_VITIS_LOOP_63_4_fu_110_ap_ready,
        col_mark_address0 => grp_ImgProcess_0_600_1024_1_2_Pipeline_VITIS_LOOP_63_4_fu_110_col_mark_address0,
        col_mark_ce0 => grp_ImgProcess_0_600_1024_1_2_Pipeline_VITIS_LOOP_63_4_fu_110_col_mark_ce0,
        col_mark_q0 => col_mark_q0,
        col_sum_out => grp_ImgProcess_0_600_1024_1_2_Pipeline_VITIS_LOOP_63_4_fu_110_col_sum_out,
        col_sum_out_ap_vld => grp_ImgProcess_0_600_1024_1_2_Pipeline_VITIS_LOOP_63_4_fu_110_col_sum_out_ap_vld);

    grp_ImgProcess_0_600_1024_1_2_Pipeline_6_fu_116 : component Test_area_prmter_ImgProcess_0_600_1024_1_2_Pipeline_6
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_ImgProcess_0_600_1024_1_2_Pipeline_6_fu_116_ap_start,
        ap_done => grp_ImgProcess_0_600_1024_1_2_Pipeline_6_fu_116_ap_done,
        ap_idle => grp_ImgProcess_0_600_1024_1_2_Pipeline_6_fu_116_ap_idle,
        ap_ready => grp_ImgProcess_0_600_1024_1_2_Pipeline_6_fu_116_ap_ready,
        parameter_r_address0 => grp_ImgProcess_0_600_1024_1_2_Pipeline_6_fu_116_parameter_r_address0,
        parameter_r_ce0 => grp_ImgProcess_0_600_1024_1_2_Pipeline_6_fu_116_parameter_r_ce0,
        parameter_r_q0 => parameter_q0,
        param_address0 => grp_ImgProcess_0_600_1024_1_2_Pipeline_6_fu_116_param_address0,
        param_ce0 => grp_ImgProcess_0_600_1024_1_2_Pipeline_6_fu_116_param_ce0,
        param_we0 => grp_ImgProcess_0_600_1024_1_2_Pipeline_6_fu_116_param_we0,
        param_d0 => grp_ImgProcess_0_600_1024_1_2_Pipeline_6_fu_116_param_d0);

    mul_32s_32s_32_2_1_U79 : component Test_area_prmter_mul_32s_32s_32_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_ImgProcess_0_600_1024_1_2_Pipeline_VITIS_LOOP_63_4_fu_110_col_sum_out,
        din1 => grp_ImgProcess_0_600_1024_1_2_Pipeline_VITIS_LOOP_60_3_fu_104_row_sum_out,
        ce => ap_const_logic_1,
        dout => grp_fu_129_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state11) and (grp_ImgProcess_0_600_1024_1_2_Pipeline_6_fu_116_ap_done = ap_const_logic_1))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    grp_ImgProcess_0_600_1024_1_2_Pipeline_6_fu_116_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_ImgProcess_0_600_1024_1_2_Pipeline_6_fu_116_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
                    grp_ImgProcess_0_600_1024_1_2_Pipeline_6_fu_116_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_ImgProcess_0_600_1024_1_2_Pipeline_6_fu_116_ap_ready = ap_const_logic_1)) then 
                    grp_ImgProcess_0_600_1024_1_2_Pipeline_6_fu_116_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_ImgProcess_0_600_1024_1_2_Pipeline_VITIS_LOOP_30_1_fu_83_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_ImgProcess_0_600_1024_1_2_Pipeline_VITIS_LOOP_30_1_fu_83_ap_start_reg <= ap_const_logic_0;
            else
                if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    grp_ImgProcess_0_600_1024_1_2_Pipeline_VITIS_LOOP_30_1_fu_83_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_ImgProcess_0_600_1024_1_2_Pipeline_VITIS_LOOP_30_1_fu_83_ap_ready = ap_const_logic_1)) then 
                    grp_ImgProcess_0_600_1024_1_2_Pipeline_VITIS_LOOP_30_1_fu_83_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_ImgProcess_0_600_1024_1_2_Pipeline_VITIS_LOOP_33_2_fu_89_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_ImgProcess_0_600_1024_1_2_Pipeline_VITIS_LOOP_33_2_fu_89_ap_start_reg <= ap_const_logic_0;
            else
                if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    grp_ImgProcess_0_600_1024_1_2_Pipeline_VITIS_LOOP_33_2_fu_89_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_ImgProcess_0_600_1024_1_2_Pipeline_VITIS_LOOP_33_2_fu_89_ap_ready = ap_const_logic_1)) then 
                    grp_ImgProcess_0_600_1024_1_2_Pipeline_VITIS_LOOP_33_2_fu_89_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_ImgProcess_0_600_1024_1_2_Pipeline_VITIS_LOOP_60_3_fu_104_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_ImgProcess_0_600_1024_1_2_Pipeline_VITIS_LOOP_60_3_fu_104_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                    grp_ImgProcess_0_600_1024_1_2_Pipeline_VITIS_LOOP_60_3_fu_104_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_ImgProcess_0_600_1024_1_2_Pipeline_VITIS_LOOP_60_3_fu_104_ap_ready = ap_const_logic_1)) then 
                    grp_ImgProcess_0_600_1024_1_2_Pipeline_VITIS_LOOP_60_3_fu_104_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_ImgProcess_0_600_1024_1_2_Pipeline_VITIS_LOOP_63_4_fu_110_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_ImgProcess_0_600_1024_1_2_Pipeline_VITIS_LOOP_63_4_fu_110_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                    grp_ImgProcess_0_600_1024_1_2_Pipeline_VITIS_LOOP_63_4_fu_110_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_ImgProcess_0_600_1024_1_2_Pipeline_VITIS_LOOP_63_4_fu_110_ap_ready = ap_const_logic_1)) then 
                    grp_ImgProcess_0_600_1024_1_2_Pipeline_VITIS_LOOP_63_4_fu_110_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_ImgProcess_0_600_1024_1_2_Pipeline_loop_color_rows_loop_color_cols_fu_95_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_ImgProcess_0_600_1024_1_2_Pipeline_loop_color_rows_loop_color_cols_fu_95_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                    grp_ImgProcess_0_600_1024_1_2_Pipeline_loop_color_rows_loop_color_cols_fu_95_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_ImgProcess_0_600_1024_1_2_Pipeline_loop_color_rows_loop_color_cols_fu_95_ap_ready = ap_const_logic_1)) then 
                    grp_ImgProcess_0_600_1024_1_2_Pipeline_loop_color_rows_loop_color_cols_fu_95_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state8)) then
                mul_ln68_reg_163 <= grp_fu_129_p2;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, grp_ImgProcess_0_600_1024_1_2_Pipeline_loop_color_rows_loop_color_cols_fu_95_ap_done, grp_ImgProcess_0_600_1024_1_2_Pipeline_6_fu_116_ap_done, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state6, ap_CS_fsm_state11, ap_block_state2_on_subcall_done, ap_block_state6_on_subcall_done)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state4) and (grp_ImgProcess_0_600_1024_1_2_Pipeline_loop_color_rows_loop_color_cols_fu_95_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                if (((ap_const_boolean_0 = ap_block_state6_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state11) and (grp_ImgProcess_0_600_1024_1_2_Pipeline_6_fu_116_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state11;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXX";
        end case;
    end process;
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);
    ap_ST_fsm_state10_blk <= ap_const_logic_0;

    ap_ST_fsm_state11_blk_assign_proc : process(grp_ImgProcess_0_600_1024_1_2_Pipeline_6_fu_116_ap_done)
    begin
        if ((grp_ImgProcess_0_600_1024_1_2_Pipeline_6_fu_116_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state11_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state11_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state1_blk_assign_proc : process(ap_start, ap_done_reg)
    begin
        if (((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state2_blk_assign_proc : process(ap_block_state2_on_subcall_done)
    begin
        if ((ap_const_boolean_1 = ap_block_state2_on_subcall_done)) then 
            ap_ST_fsm_state2_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state2_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state3_blk <= ap_const_logic_0;

    ap_ST_fsm_state4_blk_assign_proc : process(grp_ImgProcess_0_600_1024_1_2_Pipeline_loop_color_rows_loop_color_cols_fu_95_ap_done)
    begin
        if ((grp_ImgProcess_0_600_1024_1_2_Pipeline_loop_color_rows_loop_color_cols_fu_95_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state4_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state4_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state5_blk <= ap_const_logic_0;

    ap_ST_fsm_state6_blk_assign_proc : process(ap_block_state6_on_subcall_done)
    begin
        if ((ap_const_boolean_1 = ap_block_state6_on_subcall_done)) then 
            ap_ST_fsm_state6_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state6_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state7_blk <= ap_const_logic_0;
    ap_ST_fsm_state8_blk <= ap_const_logic_0;
    ap_ST_fsm_state9_blk <= ap_const_logic_0;

    ap_block_state1_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_block_state1 <= ((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0));
    end process;


    ap_block_state1_ignore_call8_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_block_state1_ignore_call8 <= ((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0));
    end process;


    ap_block_state1_ignore_call9_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_block_state1_ignore_call9 <= ((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0));
    end process;


    ap_block_state2_on_subcall_done_assign_proc : process(grp_ImgProcess_0_600_1024_1_2_Pipeline_VITIS_LOOP_30_1_fu_83_ap_done, grp_ImgProcess_0_600_1024_1_2_Pipeline_VITIS_LOOP_33_2_fu_89_ap_done)
    begin
                ap_block_state2_on_subcall_done <= ((grp_ImgProcess_0_600_1024_1_2_Pipeline_VITIS_LOOP_30_1_fu_83_ap_done = ap_const_logic_0) or (grp_ImgProcess_0_600_1024_1_2_Pipeline_VITIS_LOOP_33_2_fu_89_ap_done = ap_const_logic_0));
    end process;


    ap_block_state6_on_subcall_done_assign_proc : process(grp_ImgProcess_0_600_1024_1_2_Pipeline_VITIS_LOOP_60_3_fu_104_ap_done, grp_ImgProcess_0_600_1024_1_2_Pipeline_VITIS_LOOP_63_4_fu_110_ap_done)
    begin
                ap_block_state6_on_subcall_done <= ((grp_ImgProcess_0_600_1024_1_2_Pipeline_VITIS_LOOP_63_4_fu_110_ap_done = ap_const_logic_0) or (grp_ImgProcess_0_600_1024_1_2_Pipeline_VITIS_LOOP_60_3_fu_104_ap_done = ap_const_logic_0));
    end process;


    ap_done_assign_proc : process(ap_done_reg, grp_ImgProcess_0_600_1024_1_2_Pipeline_6_fu_116_ap_done, ap_CS_fsm_state11)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state11) and (grp_ImgProcess_0_600_1024_1_2_Pipeline_6_fu_116_ap_done = ap_const_logic_1))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(grp_ImgProcess_0_600_1024_1_2_Pipeline_6_fu_116_ap_done, ap_CS_fsm_state11)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state11) and (grp_ImgProcess_0_600_1024_1_2_Pipeline_6_fu_116_ap_done = ap_const_logic_1))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    col_mark_address0_assign_proc : process(grp_ImgProcess_0_600_1024_1_2_Pipeline_VITIS_LOOP_33_2_fu_89_col_mark_address0, grp_ImgProcess_0_600_1024_1_2_Pipeline_loop_color_rows_loop_color_cols_fu_95_col_mark_address0, grp_ImgProcess_0_600_1024_1_2_Pipeline_VITIS_LOOP_63_4_fu_110_col_mark_address0, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            col_mark_address0 <= grp_ImgProcess_0_600_1024_1_2_Pipeline_VITIS_LOOP_63_4_fu_110_col_mark_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            col_mark_address0 <= grp_ImgProcess_0_600_1024_1_2_Pipeline_loop_color_rows_loop_color_cols_fu_95_col_mark_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            col_mark_address0 <= grp_ImgProcess_0_600_1024_1_2_Pipeline_VITIS_LOOP_33_2_fu_89_col_mark_address0;
        else 
            col_mark_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    col_mark_ce0_assign_proc : process(grp_ImgProcess_0_600_1024_1_2_Pipeline_VITIS_LOOP_33_2_fu_89_col_mark_ce0, grp_ImgProcess_0_600_1024_1_2_Pipeline_loop_color_rows_loop_color_cols_fu_95_col_mark_ce0, grp_ImgProcess_0_600_1024_1_2_Pipeline_VITIS_LOOP_63_4_fu_110_col_mark_ce0, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            col_mark_ce0 <= grp_ImgProcess_0_600_1024_1_2_Pipeline_VITIS_LOOP_63_4_fu_110_col_mark_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            col_mark_ce0 <= grp_ImgProcess_0_600_1024_1_2_Pipeline_loop_color_rows_loop_color_cols_fu_95_col_mark_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            col_mark_ce0 <= grp_ImgProcess_0_600_1024_1_2_Pipeline_VITIS_LOOP_33_2_fu_89_col_mark_ce0;
        else 
            col_mark_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    col_mark_d0_assign_proc : process(grp_ImgProcess_0_600_1024_1_2_Pipeline_VITIS_LOOP_33_2_fu_89_col_mark_d0, grp_ImgProcess_0_600_1024_1_2_Pipeline_loop_color_rows_loop_color_cols_fu_95_col_mark_d0, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            col_mark_d0 <= grp_ImgProcess_0_600_1024_1_2_Pipeline_loop_color_rows_loop_color_cols_fu_95_col_mark_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            col_mark_d0 <= grp_ImgProcess_0_600_1024_1_2_Pipeline_VITIS_LOOP_33_2_fu_89_col_mark_d0;
        else 
            col_mark_d0 <= "X";
        end if; 
    end process;


    col_mark_we0_assign_proc : process(grp_ImgProcess_0_600_1024_1_2_Pipeline_VITIS_LOOP_33_2_fu_89_col_mark_we0, grp_ImgProcess_0_600_1024_1_2_Pipeline_loop_color_rows_loop_color_cols_fu_95_col_mark_we0, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            col_mark_we0 <= grp_ImgProcess_0_600_1024_1_2_Pipeline_loop_color_rows_loop_color_cols_fu_95_col_mark_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            col_mark_we0 <= grp_ImgProcess_0_600_1024_1_2_Pipeline_VITIS_LOOP_33_2_fu_89_col_mark_we0;
        else 
            col_mark_we0 <= ap_const_logic_0;
        end if; 
    end process;

    grp_ImgProcess_0_600_1024_1_2_Pipeline_6_fu_116_ap_start <= grp_ImgProcess_0_600_1024_1_2_Pipeline_6_fu_116_ap_start_reg;
    grp_ImgProcess_0_600_1024_1_2_Pipeline_VITIS_LOOP_30_1_fu_83_ap_start <= grp_ImgProcess_0_600_1024_1_2_Pipeline_VITIS_LOOP_30_1_fu_83_ap_start_reg;
    grp_ImgProcess_0_600_1024_1_2_Pipeline_VITIS_LOOP_33_2_fu_89_ap_start <= grp_ImgProcess_0_600_1024_1_2_Pipeline_VITIS_LOOP_33_2_fu_89_ap_start_reg;
    grp_ImgProcess_0_600_1024_1_2_Pipeline_VITIS_LOOP_60_3_fu_104_ap_start <= grp_ImgProcess_0_600_1024_1_2_Pipeline_VITIS_LOOP_60_3_fu_104_ap_start_reg;
    grp_ImgProcess_0_600_1024_1_2_Pipeline_VITIS_LOOP_63_4_fu_110_ap_start <= grp_ImgProcess_0_600_1024_1_2_Pipeline_VITIS_LOOP_63_4_fu_110_ap_start_reg;
    grp_ImgProcess_0_600_1024_1_2_Pipeline_loop_color_rows_loop_color_cols_fu_95_ap_start <= grp_ImgProcess_0_600_1024_1_2_Pipeline_loop_color_rows_loop_color_cols_fu_95_ap_start_reg;

    img_1_data15_read_assign_proc : process(grp_ImgProcess_0_600_1024_1_2_Pipeline_loop_color_rows_loop_color_cols_fu_95_img_1_data15_read, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            img_1_data15_read <= grp_ImgProcess_0_600_1024_1_2_Pipeline_loop_color_rows_loop_color_cols_fu_95_img_1_data15_read;
        else 
            img_1_data15_read <= ap_const_logic_0;
        end if; 
    end process;

    param_address0 <= grp_ImgProcess_0_600_1024_1_2_Pipeline_6_fu_116_param_address0;
    param_ce0 <= grp_ImgProcess_0_600_1024_1_2_Pipeline_6_fu_116_param_ce0;
    param_d0 <= grp_ImgProcess_0_600_1024_1_2_Pipeline_6_fu_116_param_d0;
    param_we0 <= grp_ImgProcess_0_600_1024_1_2_Pipeline_6_fu_116_param_we0;

    parameter_address0_assign_proc : process(grp_ImgProcess_0_600_1024_1_2_Pipeline_6_fu_116_parameter_r_address0, ap_CS_fsm_state11, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            parameter_address0 <= ap_const_lv64_1(1 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            parameter_address0 <= grp_ImgProcess_0_600_1024_1_2_Pipeline_6_fu_116_parameter_r_address0;
        else 
            parameter_address0 <= "X";
        end if; 
    end process;

    parameter_address1 <= ap_const_lv64_0(1 - 1 downto 0);

    parameter_ce0_assign_proc : process(grp_ImgProcess_0_600_1024_1_2_Pipeline_6_fu_116_parameter_r_ce0, ap_CS_fsm_state11, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            parameter_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            parameter_ce0 <= grp_ImgProcess_0_600_1024_1_2_Pipeline_6_fu_116_parameter_r_ce0;
        else 
            parameter_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    parameter_ce1_assign_proc : process(ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            parameter_ce1 <= ap_const_logic_1;
        else 
            parameter_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    parameter_we0_assign_proc : process(ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            parameter_we0 <= ap_const_logic_1;
        else 
            parameter_we0 <= ap_const_logic_0;
        end if; 
    end process;


    parameter_we1_assign_proc : process(ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            parameter_we1 <= ap_const_logic_1;
        else 
            parameter_we1 <= ap_const_logic_0;
        end if; 
    end process;


    row_mark_address0_assign_proc : process(grp_ImgProcess_0_600_1024_1_2_Pipeline_VITIS_LOOP_30_1_fu_83_row_mark_address0, grp_ImgProcess_0_600_1024_1_2_Pipeline_loop_color_rows_loop_color_cols_fu_95_row_mark_address0, grp_ImgProcess_0_600_1024_1_2_Pipeline_VITIS_LOOP_60_3_fu_104_row_mark_address0, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            row_mark_address0 <= grp_ImgProcess_0_600_1024_1_2_Pipeline_VITIS_LOOP_60_3_fu_104_row_mark_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            row_mark_address0 <= grp_ImgProcess_0_600_1024_1_2_Pipeline_loop_color_rows_loop_color_cols_fu_95_row_mark_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            row_mark_address0 <= grp_ImgProcess_0_600_1024_1_2_Pipeline_VITIS_LOOP_30_1_fu_83_row_mark_address0;
        else 
            row_mark_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    row_mark_ce0_assign_proc : process(grp_ImgProcess_0_600_1024_1_2_Pipeline_VITIS_LOOP_30_1_fu_83_row_mark_ce0, grp_ImgProcess_0_600_1024_1_2_Pipeline_loop_color_rows_loop_color_cols_fu_95_row_mark_ce0, grp_ImgProcess_0_600_1024_1_2_Pipeline_VITIS_LOOP_60_3_fu_104_row_mark_ce0, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            row_mark_ce0 <= grp_ImgProcess_0_600_1024_1_2_Pipeline_VITIS_LOOP_60_3_fu_104_row_mark_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            row_mark_ce0 <= grp_ImgProcess_0_600_1024_1_2_Pipeline_loop_color_rows_loop_color_cols_fu_95_row_mark_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            row_mark_ce0 <= grp_ImgProcess_0_600_1024_1_2_Pipeline_VITIS_LOOP_30_1_fu_83_row_mark_ce0;
        else 
            row_mark_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    row_mark_d0_assign_proc : process(grp_ImgProcess_0_600_1024_1_2_Pipeline_VITIS_LOOP_30_1_fu_83_row_mark_d0, grp_ImgProcess_0_600_1024_1_2_Pipeline_loop_color_rows_loop_color_cols_fu_95_row_mark_d0, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            row_mark_d0 <= grp_ImgProcess_0_600_1024_1_2_Pipeline_loop_color_rows_loop_color_cols_fu_95_row_mark_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            row_mark_d0 <= grp_ImgProcess_0_600_1024_1_2_Pipeline_VITIS_LOOP_30_1_fu_83_row_mark_d0;
        else 
            row_mark_d0 <= "X";
        end if; 
    end process;


    row_mark_we0_assign_proc : process(grp_ImgProcess_0_600_1024_1_2_Pipeline_VITIS_LOOP_30_1_fu_83_row_mark_we0, grp_ImgProcess_0_600_1024_1_2_Pipeline_loop_color_rows_loop_color_cols_fu_95_row_mark_we0, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            row_mark_we0 <= grp_ImgProcess_0_600_1024_1_2_Pipeline_loop_color_rows_loop_color_cols_fu_95_row_mark_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            row_mark_we0 <= grp_ImgProcess_0_600_1024_1_2_Pipeline_VITIS_LOOP_30_1_fu_83_row_mark_we0;
        else 
            row_mark_we0 <= ap_const_logic_0;
        end if; 
    end process;

end behav;
