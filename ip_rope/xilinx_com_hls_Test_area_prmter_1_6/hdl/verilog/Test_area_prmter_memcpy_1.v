// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module Test_area_prmter_memcpy_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        m_axi_RESULT_AWVALID,
        m_axi_RESULT_AWREADY,
        m_axi_RESULT_AWADDR,
        m_axi_RESULT_AWID,
        m_axi_RESULT_AWLEN,
        m_axi_RESULT_AWSIZE,
        m_axi_RESULT_AWBURST,
        m_axi_RESULT_AWLOCK,
        m_axi_RESULT_AWCACHE,
        m_axi_RESULT_AWPROT,
        m_axi_RESULT_AWQOS,
        m_axi_RESULT_AWREGION,
        m_axi_RESULT_AWUSER,
        m_axi_RESULT_WVALID,
        m_axi_RESULT_WREADY,
        m_axi_RESULT_WDATA,
        m_axi_RESULT_WSTRB,
        m_axi_RESULT_WLAST,
        m_axi_RESULT_WID,
        m_axi_RESULT_WUSER,
        m_axi_RESULT_ARVALID,
        m_axi_RESULT_ARREADY,
        m_axi_RESULT_ARADDR,
        m_axi_RESULT_ARID,
        m_axi_RESULT_ARLEN,
        m_axi_RESULT_ARSIZE,
        m_axi_RESULT_ARBURST,
        m_axi_RESULT_ARLOCK,
        m_axi_RESULT_ARCACHE,
        m_axi_RESULT_ARPROT,
        m_axi_RESULT_ARQOS,
        m_axi_RESULT_ARREGION,
        m_axi_RESULT_ARUSER,
        m_axi_RESULT_RVALID,
        m_axi_RESULT_RREADY,
        m_axi_RESULT_RDATA,
        m_axi_RESULT_RLAST,
        m_axi_RESULT_RID,
        m_axi_RESULT_RFIFONUM,
        m_axi_RESULT_RUSER,
        m_axi_RESULT_RRESP,
        m_axi_RESULT_BVALID,
        m_axi_RESULT_BREADY,
        m_axi_RESULT_BRESP,
        m_axi_RESULT_BID,
        m_axi_RESULT_BUSER,
        dest_dout,
        dest_num_data_valid,
        dest_fifo_cap,
        dest_empty_n,
        dest_read,
        param_address0,
        param_ce0,
        param_q0
);

parameter    ap_ST_fsm_state1 = 2'd1;
parameter    ap_ST_fsm_state2 = 2'd2;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   m_axi_RESULT_AWVALID;
input   m_axi_RESULT_AWREADY;
output  [63:0] m_axi_RESULT_AWADDR;
output  [0:0] m_axi_RESULT_AWID;
output  [31:0] m_axi_RESULT_AWLEN;
output  [2:0] m_axi_RESULT_AWSIZE;
output  [1:0] m_axi_RESULT_AWBURST;
output  [1:0] m_axi_RESULT_AWLOCK;
output  [3:0] m_axi_RESULT_AWCACHE;
output  [2:0] m_axi_RESULT_AWPROT;
output  [3:0] m_axi_RESULT_AWQOS;
output  [3:0] m_axi_RESULT_AWREGION;
output  [0:0] m_axi_RESULT_AWUSER;
output   m_axi_RESULT_WVALID;
input   m_axi_RESULT_WREADY;
output  [31:0] m_axi_RESULT_WDATA;
output  [3:0] m_axi_RESULT_WSTRB;
output   m_axi_RESULT_WLAST;
output  [0:0] m_axi_RESULT_WID;
output  [0:0] m_axi_RESULT_WUSER;
output   m_axi_RESULT_ARVALID;
input   m_axi_RESULT_ARREADY;
output  [63:0] m_axi_RESULT_ARADDR;
output  [0:0] m_axi_RESULT_ARID;
output  [31:0] m_axi_RESULT_ARLEN;
output  [2:0] m_axi_RESULT_ARSIZE;
output  [1:0] m_axi_RESULT_ARBURST;
output  [1:0] m_axi_RESULT_ARLOCK;
output  [3:0] m_axi_RESULT_ARCACHE;
output  [2:0] m_axi_RESULT_ARPROT;
output  [3:0] m_axi_RESULT_ARQOS;
output  [3:0] m_axi_RESULT_ARREGION;
output  [0:0] m_axi_RESULT_ARUSER;
input   m_axi_RESULT_RVALID;
output   m_axi_RESULT_RREADY;
input  [31:0] m_axi_RESULT_RDATA;
input   m_axi_RESULT_RLAST;
input  [0:0] m_axi_RESULT_RID;
input  [8:0] m_axi_RESULT_RFIFONUM;
input  [0:0] m_axi_RESULT_RUSER;
input  [1:0] m_axi_RESULT_RRESP;
input   m_axi_RESULT_BVALID;
output   m_axi_RESULT_BREADY;
input  [1:0] m_axi_RESULT_BRESP;
input  [0:0] m_axi_RESULT_BID;
input  [0:0] m_axi_RESULT_BUSER;
input  [63:0] dest_dout;
input  [3:0] dest_num_data_valid;
input  [3:0] dest_fifo_cap;
input   dest_empty_n;
output   dest_read;
output  [0:0] param_address0;
output   param_ce0;
input  [31:0] param_q0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg m_axi_RESULT_AWVALID;
reg m_axi_RESULT_WVALID;
reg m_axi_RESULT_BREADY;
reg dest_read;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [1:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    dest_blk_n;
reg   [63:0] dest_read_reg_60;
wire   [1:0] empty_fu_55_p1;
reg   [1:0] empty_reg_65;
wire    grp_memcpy_1_Pipeline_1_fu_44_ap_start;
wire    grp_memcpy_1_Pipeline_1_fu_44_ap_done;
wire    grp_memcpy_1_Pipeline_1_fu_44_ap_idle;
wire    grp_memcpy_1_Pipeline_1_fu_44_ap_ready;
wire    grp_memcpy_1_Pipeline_1_fu_44_m_axi_RESULT_AWVALID;
wire   [63:0] grp_memcpy_1_Pipeline_1_fu_44_m_axi_RESULT_AWADDR;
wire   [0:0] grp_memcpy_1_Pipeline_1_fu_44_m_axi_RESULT_AWID;
wire   [31:0] grp_memcpy_1_Pipeline_1_fu_44_m_axi_RESULT_AWLEN;
wire   [2:0] grp_memcpy_1_Pipeline_1_fu_44_m_axi_RESULT_AWSIZE;
wire   [1:0] grp_memcpy_1_Pipeline_1_fu_44_m_axi_RESULT_AWBURST;
wire   [1:0] grp_memcpy_1_Pipeline_1_fu_44_m_axi_RESULT_AWLOCK;
wire   [3:0] grp_memcpy_1_Pipeline_1_fu_44_m_axi_RESULT_AWCACHE;
wire   [2:0] grp_memcpy_1_Pipeline_1_fu_44_m_axi_RESULT_AWPROT;
wire   [3:0] grp_memcpy_1_Pipeline_1_fu_44_m_axi_RESULT_AWQOS;
wire   [3:0] grp_memcpy_1_Pipeline_1_fu_44_m_axi_RESULT_AWREGION;
wire   [0:0] grp_memcpy_1_Pipeline_1_fu_44_m_axi_RESULT_AWUSER;
wire    grp_memcpy_1_Pipeline_1_fu_44_m_axi_RESULT_WVALID;
wire   [31:0] grp_memcpy_1_Pipeline_1_fu_44_m_axi_RESULT_WDATA;
wire   [3:0] grp_memcpy_1_Pipeline_1_fu_44_m_axi_RESULT_WSTRB;
wire    grp_memcpy_1_Pipeline_1_fu_44_m_axi_RESULT_WLAST;
wire   [0:0] grp_memcpy_1_Pipeline_1_fu_44_m_axi_RESULT_WID;
wire   [0:0] grp_memcpy_1_Pipeline_1_fu_44_m_axi_RESULT_WUSER;
wire    grp_memcpy_1_Pipeline_1_fu_44_m_axi_RESULT_ARVALID;
wire   [63:0] grp_memcpy_1_Pipeline_1_fu_44_m_axi_RESULT_ARADDR;
wire   [0:0] grp_memcpy_1_Pipeline_1_fu_44_m_axi_RESULT_ARID;
wire   [31:0] grp_memcpy_1_Pipeline_1_fu_44_m_axi_RESULT_ARLEN;
wire   [2:0] grp_memcpy_1_Pipeline_1_fu_44_m_axi_RESULT_ARSIZE;
wire   [1:0] grp_memcpy_1_Pipeline_1_fu_44_m_axi_RESULT_ARBURST;
wire   [1:0] grp_memcpy_1_Pipeline_1_fu_44_m_axi_RESULT_ARLOCK;
wire   [3:0] grp_memcpy_1_Pipeline_1_fu_44_m_axi_RESULT_ARCACHE;
wire   [2:0] grp_memcpy_1_Pipeline_1_fu_44_m_axi_RESULT_ARPROT;
wire   [3:0] grp_memcpy_1_Pipeline_1_fu_44_m_axi_RESULT_ARQOS;
wire   [3:0] grp_memcpy_1_Pipeline_1_fu_44_m_axi_RESULT_ARREGION;
wire   [0:0] grp_memcpy_1_Pipeline_1_fu_44_m_axi_RESULT_ARUSER;
wire    grp_memcpy_1_Pipeline_1_fu_44_m_axi_RESULT_RREADY;
wire    grp_memcpy_1_Pipeline_1_fu_44_m_axi_RESULT_BREADY;
wire   [0:0] grp_memcpy_1_Pipeline_1_fu_44_param_address0;
wire    grp_memcpy_1_Pipeline_1_fu_44_param_ce0;
reg    grp_memcpy_1_Pipeline_1_fu_44_ap_start_reg;
reg    ap_block_state1_ignore_call5;
wire    ap_CS_fsm_state2;
reg    ap_block_state1;
reg   [1:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
reg    ap_ST_fsm_state2_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 2'd1;
#0 grp_memcpy_1_Pipeline_1_fu_44_ap_start_reg = 1'b0;
end

Test_area_prmter_memcpy_1_Pipeline_1 grp_memcpy_1_Pipeline_1_fu_44(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_memcpy_1_Pipeline_1_fu_44_ap_start),
    .ap_done(grp_memcpy_1_Pipeline_1_fu_44_ap_done),
    .ap_idle(grp_memcpy_1_Pipeline_1_fu_44_ap_idle),
    .ap_ready(grp_memcpy_1_Pipeline_1_fu_44_ap_ready),
    .m_axi_RESULT_AWVALID(grp_memcpy_1_Pipeline_1_fu_44_m_axi_RESULT_AWVALID),
    .m_axi_RESULT_AWREADY(m_axi_RESULT_AWREADY),
    .m_axi_RESULT_AWADDR(grp_memcpy_1_Pipeline_1_fu_44_m_axi_RESULT_AWADDR),
    .m_axi_RESULT_AWID(grp_memcpy_1_Pipeline_1_fu_44_m_axi_RESULT_AWID),
    .m_axi_RESULT_AWLEN(grp_memcpy_1_Pipeline_1_fu_44_m_axi_RESULT_AWLEN),
    .m_axi_RESULT_AWSIZE(grp_memcpy_1_Pipeline_1_fu_44_m_axi_RESULT_AWSIZE),
    .m_axi_RESULT_AWBURST(grp_memcpy_1_Pipeline_1_fu_44_m_axi_RESULT_AWBURST),
    .m_axi_RESULT_AWLOCK(grp_memcpy_1_Pipeline_1_fu_44_m_axi_RESULT_AWLOCK),
    .m_axi_RESULT_AWCACHE(grp_memcpy_1_Pipeline_1_fu_44_m_axi_RESULT_AWCACHE),
    .m_axi_RESULT_AWPROT(grp_memcpy_1_Pipeline_1_fu_44_m_axi_RESULT_AWPROT),
    .m_axi_RESULT_AWQOS(grp_memcpy_1_Pipeline_1_fu_44_m_axi_RESULT_AWQOS),
    .m_axi_RESULT_AWREGION(grp_memcpy_1_Pipeline_1_fu_44_m_axi_RESULT_AWREGION),
    .m_axi_RESULT_AWUSER(grp_memcpy_1_Pipeline_1_fu_44_m_axi_RESULT_AWUSER),
    .m_axi_RESULT_WVALID(grp_memcpy_1_Pipeline_1_fu_44_m_axi_RESULT_WVALID),
    .m_axi_RESULT_WREADY(m_axi_RESULT_WREADY),
    .m_axi_RESULT_WDATA(grp_memcpy_1_Pipeline_1_fu_44_m_axi_RESULT_WDATA),
    .m_axi_RESULT_WSTRB(grp_memcpy_1_Pipeline_1_fu_44_m_axi_RESULT_WSTRB),
    .m_axi_RESULT_WLAST(grp_memcpy_1_Pipeline_1_fu_44_m_axi_RESULT_WLAST),
    .m_axi_RESULT_WID(grp_memcpy_1_Pipeline_1_fu_44_m_axi_RESULT_WID),
    .m_axi_RESULT_WUSER(grp_memcpy_1_Pipeline_1_fu_44_m_axi_RESULT_WUSER),
    .m_axi_RESULT_ARVALID(grp_memcpy_1_Pipeline_1_fu_44_m_axi_RESULT_ARVALID),
    .m_axi_RESULT_ARREADY(1'b0),
    .m_axi_RESULT_ARADDR(grp_memcpy_1_Pipeline_1_fu_44_m_axi_RESULT_ARADDR),
    .m_axi_RESULT_ARID(grp_memcpy_1_Pipeline_1_fu_44_m_axi_RESULT_ARID),
    .m_axi_RESULT_ARLEN(grp_memcpy_1_Pipeline_1_fu_44_m_axi_RESULT_ARLEN),
    .m_axi_RESULT_ARSIZE(grp_memcpy_1_Pipeline_1_fu_44_m_axi_RESULT_ARSIZE),
    .m_axi_RESULT_ARBURST(grp_memcpy_1_Pipeline_1_fu_44_m_axi_RESULT_ARBURST),
    .m_axi_RESULT_ARLOCK(grp_memcpy_1_Pipeline_1_fu_44_m_axi_RESULT_ARLOCK),
    .m_axi_RESULT_ARCACHE(grp_memcpy_1_Pipeline_1_fu_44_m_axi_RESULT_ARCACHE),
    .m_axi_RESULT_ARPROT(grp_memcpy_1_Pipeline_1_fu_44_m_axi_RESULT_ARPROT),
    .m_axi_RESULT_ARQOS(grp_memcpy_1_Pipeline_1_fu_44_m_axi_RESULT_ARQOS),
    .m_axi_RESULT_ARREGION(grp_memcpy_1_Pipeline_1_fu_44_m_axi_RESULT_ARREGION),
    .m_axi_RESULT_ARUSER(grp_memcpy_1_Pipeline_1_fu_44_m_axi_RESULT_ARUSER),
    .m_axi_RESULT_RVALID(1'b0),
    .m_axi_RESULT_RREADY(grp_memcpy_1_Pipeline_1_fu_44_m_axi_RESULT_RREADY),
    .m_axi_RESULT_RDATA(32'd0),
    .m_axi_RESULT_RLAST(1'b0),
    .m_axi_RESULT_RID(1'd0),
    .m_axi_RESULT_RFIFONUM(9'd0),
    .m_axi_RESULT_RUSER(1'd0),
    .m_axi_RESULT_RRESP(2'd0),
    .m_axi_RESULT_BVALID(m_axi_RESULT_BVALID),
    .m_axi_RESULT_BREADY(grp_memcpy_1_Pipeline_1_fu_44_m_axi_RESULT_BREADY),
    .m_axi_RESULT_BRESP(m_axi_RESULT_BRESP),
    .m_axi_RESULT_BID(m_axi_RESULT_BID),
    .m_axi_RESULT_BUSER(m_axi_RESULT_BUSER),
    .param_address0(grp_memcpy_1_Pipeline_1_fu_44_param_address0),
    .param_ce0(grp_memcpy_1_Pipeline_1_fu_44_param_ce0),
    .param_q0(param_q0),
    .dest_load(dest_read_reg_60),
    .dest_cast(empty_reg_65)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state2) & (grp_memcpy_1_Pipeline_1_fu_44_ap_done == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_memcpy_1_Pipeline_1_fu_44_ap_start_reg <= 1'b0;
    end else begin
        if ((~((dest_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            grp_memcpy_1_Pipeline_1_fu_44_ap_start_reg <= 1'b1;
        end else if ((grp_memcpy_1_Pipeline_1_fu_44_ap_ready == 1'b1)) begin
            grp_memcpy_1_Pipeline_1_fu_44_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        dest_read_reg_60 <= dest_dout;
        empty_reg_65 <= empty_fu_55_p1;
    end
end

always @ (*) begin
    if (((dest_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1))) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

always @ (*) begin
    if ((grp_memcpy_1_Pipeline_1_fu_44_ap_done == 1'b0)) begin
        ap_ST_fsm_state2_blk = 1'b1;
    end else begin
        ap_ST_fsm_state2_blk = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_memcpy_1_Pipeline_1_fu_44_ap_done == 1'b1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_memcpy_1_Pipeline_1_fu_44_ap_done == 1'b1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        dest_blk_n = dest_empty_n;
    end else begin
        dest_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((dest_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        dest_read = 1'b1;
    end else begin
        dest_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) | (1'b1 == ap_CS_fsm_state2))) begin
        m_axi_RESULT_AWVALID = grp_memcpy_1_Pipeline_1_fu_44_m_axi_RESULT_AWVALID;
    end else begin
        m_axi_RESULT_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) | (1'b1 == ap_CS_fsm_state2))) begin
        m_axi_RESULT_BREADY = grp_memcpy_1_Pipeline_1_fu_44_m_axi_RESULT_BREADY;
    end else begin
        m_axi_RESULT_BREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) | (1'b1 == ap_CS_fsm_state2))) begin
        m_axi_RESULT_WVALID = grp_memcpy_1_Pipeline_1_fu_44_m_axi_RESULT_WVALID;
    end else begin
        m_axi_RESULT_WVALID = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((dest_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (grp_memcpy_1_Pipeline_1_fu_44_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

always @ (*) begin
    ap_block_state1 = ((dest_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1));
end

always @ (*) begin
    ap_block_state1_ignore_call5 = ((dest_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1));
end

assign empty_fu_55_p1 = dest_dout[1:0];

assign grp_memcpy_1_Pipeline_1_fu_44_ap_start = grp_memcpy_1_Pipeline_1_fu_44_ap_start_reg;

assign m_axi_RESULT_ARADDR = 64'd0;

assign m_axi_RESULT_ARBURST = 2'd0;

assign m_axi_RESULT_ARCACHE = 4'd0;

assign m_axi_RESULT_ARID = 1'd0;

assign m_axi_RESULT_ARLEN = 32'd0;

assign m_axi_RESULT_ARLOCK = 2'd0;

assign m_axi_RESULT_ARPROT = 3'd0;

assign m_axi_RESULT_ARQOS = 4'd0;

assign m_axi_RESULT_ARREGION = 4'd0;

assign m_axi_RESULT_ARSIZE = 3'd0;

assign m_axi_RESULT_ARUSER = 1'd0;

assign m_axi_RESULT_ARVALID = 1'b0;

assign m_axi_RESULT_AWADDR = grp_memcpy_1_Pipeline_1_fu_44_m_axi_RESULT_AWADDR;

assign m_axi_RESULT_AWBURST = grp_memcpy_1_Pipeline_1_fu_44_m_axi_RESULT_AWBURST;

assign m_axi_RESULT_AWCACHE = grp_memcpy_1_Pipeline_1_fu_44_m_axi_RESULT_AWCACHE;

assign m_axi_RESULT_AWID = grp_memcpy_1_Pipeline_1_fu_44_m_axi_RESULT_AWID;

assign m_axi_RESULT_AWLEN = grp_memcpy_1_Pipeline_1_fu_44_m_axi_RESULT_AWLEN;

assign m_axi_RESULT_AWLOCK = grp_memcpy_1_Pipeline_1_fu_44_m_axi_RESULT_AWLOCK;

assign m_axi_RESULT_AWPROT = grp_memcpy_1_Pipeline_1_fu_44_m_axi_RESULT_AWPROT;

assign m_axi_RESULT_AWQOS = grp_memcpy_1_Pipeline_1_fu_44_m_axi_RESULT_AWQOS;

assign m_axi_RESULT_AWREGION = grp_memcpy_1_Pipeline_1_fu_44_m_axi_RESULT_AWREGION;

assign m_axi_RESULT_AWSIZE = grp_memcpy_1_Pipeline_1_fu_44_m_axi_RESULT_AWSIZE;

assign m_axi_RESULT_AWUSER = grp_memcpy_1_Pipeline_1_fu_44_m_axi_RESULT_AWUSER;

assign m_axi_RESULT_RREADY = 1'b0;

assign m_axi_RESULT_WDATA = grp_memcpy_1_Pipeline_1_fu_44_m_axi_RESULT_WDATA;

assign m_axi_RESULT_WID = grp_memcpy_1_Pipeline_1_fu_44_m_axi_RESULT_WID;

assign m_axi_RESULT_WLAST = grp_memcpy_1_Pipeline_1_fu_44_m_axi_RESULT_WLAST;

assign m_axi_RESULT_WSTRB = grp_memcpy_1_Pipeline_1_fu_44_m_axi_RESULT_WSTRB;

assign m_axi_RESULT_WUSER = grp_memcpy_1_Pipeline_1_fu_44_m_axi_RESULT_WUSER;

assign param_address0 = grp_memcpy_1_Pipeline_1_fu_44_param_address0;

assign param_ce0 = grp_memcpy_1_Pipeline_1_fu_44_param_ce0;

endmodule //Test_area_prmter_memcpy_1
